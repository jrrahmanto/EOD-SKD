//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ServicesCekTradefeed {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : global::System.Data.DataSet {
        
        private DataTable1DataTable tableDataTable1;
        
        private Validation_SettlementPrice_ExceptionsDataTable tableValidation_SettlementPrice_Exceptions;
        
        private TradefeedExceptionDataTable tableTradefeedException;
        
        private ParameterDataTable tableParameter;
        
        private uspRptDailyShortageSummaryDataTable tableuspRptDailyShortageSummary;
        
        private ClearingMemberSuspenseStatusDataTable tableClearingMemberSuspenseStatus;
        
        private ClearingHouseSuspenseDataTable tableClearingHouseSuspense;
        
        private ClearingMemberDataTable tableClearingMember;
        
        private CommodityDataTable tableCommodity;
        
        private ContractDataTable tableContract;
        
        private SubCategoryDataTable tableSubCategory;
        
        private Get_Tradefeed_ExceptionDataTable tableGet_Tradefeed_Exception;
        
        private uspTradeFeedExceptionApproveAllDataTable tableuspTradeFeedExceptionApproveAll;
        
        private iDfsFasPalnDataTable tableiDfsFasPaln;
        
        private irca_parameterDataTable tableirca_parameter;
        
        private irca_productDataTable tableirca_product;
        
        private IRCADataTable tableIRCA;
        
        private iDfsFasPaln1DataTable tableiDfsFasPaln1;
        
        private fee_palnDataTable tablefee_paln;
        
        private RateJisdorDataTable tableRateJisdor;
        
        private global::System.Data.DataRelation relationFK_ClearingMemberSuspenseStatus_ClearingMember;
        
        private global::System.Data.DataRelation relationFK_ClearingHouseSuspense_ClearingMember;
        
        private global::System.Data.DataRelation relationR_416;
        
        private global::System.Data.DataRelation relationR_372;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["DataTable1"] != null)) {
                    base.Tables.Add(new DataTable1DataTable(ds.Tables["DataTable1"]));
                }
                if ((ds.Tables["Validation_SettlementPrice_Exceptions"] != null)) {
                    base.Tables.Add(new Validation_SettlementPrice_ExceptionsDataTable(ds.Tables["Validation_SettlementPrice_Exceptions"]));
                }
                if ((ds.Tables["TradefeedException"] != null)) {
                    base.Tables.Add(new TradefeedExceptionDataTable(ds.Tables["TradefeedException"]));
                }
                if ((ds.Tables["Parameter"] != null)) {
                    base.Tables.Add(new ParameterDataTable(ds.Tables["Parameter"]));
                }
                if ((ds.Tables["uspRptDailyShortageSummary"] != null)) {
                    base.Tables.Add(new uspRptDailyShortageSummaryDataTable(ds.Tables["uspRptDailyShortageSummary"]));
                }
                if ((ds.Tables["ClearingMemberSuspenseStatus"] != null)) {
                    base.Tables.Add(new ClearingMemberSuspenseStatusDataTable(ds.Tables["ClearingMemberSuspenseStatus"]));
                }
                if ((ds.Tables["ClearingHouseSuspense"] != null)) {
                    base.Tables.Add(new ClearingHouseSuspenseDataTable(ds.Tables["ClearingHouseSuspense"]));
                }
                if ((ds.Tables["ClearingMember"] != null)) {
                    base.Tables.Add(new ClearingMemberDataTable(ds.Tables["ClearingMember"]));
                }
                if ((ds.Tables["Commodity"] != null)) {
                    base.Tables.Add(new CommodityDataTable(ds.Tables["Commodity"]));
                }
                if ((ds.Tables["Contract"] != null)) {
                    base.Tables.Add(new ContractDataTable(ds.Tables["Contract"]));
                }
                if ((ds.Tables["SubCategory"] != null)) {
                    base.Tables.Add(new SubCategoryDataTable(ds.Tables["SubCategory"]));
                }
                if ((ds.Tables["Get_Tradefeed_Exception"] != null)) {
                    base.Tables.Add(new Get_Tradefeed_ExceptionDataTable(ds.Tables["Get_Tradefeed_Exception"]));
                }
                if ((ds.Tables["uspTradeFeedExceptionApproveAll"] != null)) {
                    base.Tables.Add(new uspTradeFeedExceptionApproveAllDataTable(ds.Tables["uspTradeFeedExceptionApproveAll"]));
                }
                if ((ds.Tables["iDfsFasPaln"] != null)) {
                    base.Tables.Add(new iDfsFasPalnDataTable(ds.Tables["iDfsFasPaln"]));
                }
                if ((ds.Tables["irca_parameter"] != null)) {
                    base.Tables.Add(new irca_parameterDataTable(ds.Tables["irca_parameter"]));
                }
                if ((ds.Tables["irca_product"] != null)) {
                    base.Tables.Add(new irca_productDataTable(ds.Tables["irca_product"]));
                }
                if ((ds.Tables["IRCA"] != null)) {
                    base.Tables.Add(new IRCADataTable(ds.Tables["IRCA"]));
                }
                if ((ds.Tables["iDfsFasPaln1"] != null)) {
                    base.Tables.Add(new iDfsFasPaln1DataTable(ds.Tables["iDfsFasPaln1"]));
                }
                if ((ds.Tables["fee_paln"] != null)) {
                    base.Tables.Add(new fee_palnDataTable(ds.Tables["fee_paln"]));
                }
                if ((ds.Tables["RateJisdor"] != null)) {
                    base.Tables.Add(new RateJisdorDataTable(ds.Tables["RateJisdor"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataTable1DataTable DataTable1 {
            get {
                return this.tableDataTable1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Validation_SettlementPrice_ExceptionsDataTable Validation_SettlementPrice_Exceptions {
            get {
                return this.tableValidation_SettlementPrice_Exceptions;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TradefeedExceptionDataTable TradefeedException {
            get {
                return this.tableTradefeedException;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ParameterDataTable Parameter {
            get {
                return this.tableParameter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public uspRptDailyShortageSummaryDataTable uspRptDailyShortageSummary {
            get {
                return this.tableuspRptDailyShortageSummary;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ClearingMemberSuspenseStatusDataTable ClearingMemberSuspenseStatus {
            get {
                return this.tableClearingMemberSuspenseStatus;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ClearingHouseSuspenseDataTable ClearingHouseSuspense {
            get {
                return this.tableClearingHouseSuspense;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ClearingMemberDataTable ClearingMember {
            get {
                return this.tableClearingMember;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CommodityDataTable Commodity {
            get {
                return this.tableCommodity;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ContractDataTable Contract {
            get {
                return this.tableContract;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SubCategoryDataTable SubCategory {
            get {
                return this.tableSubCategory;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Get_Tradefeed_ExceptionDataTable Get_Tradefeed_Exception {
            get {
                return this.tableGet_Tradefeed_Exception;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public uspTradeFeedExceptionApproveAllDataTable uspTradeFeedExceptionApproveAll {
            get {
                return this.tableuspTradeFeedExceptionApproveAll;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public iDfsFasPalnDataTable iDfsFasPaln {
            get {
                return this.tableiDfsFasPaln;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public irca_parameterDataTable irca_parameter {
            get {
                return this.tableirca_parameter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public irca_productDataTable irca_product {
            get {
                return this.tableirca_product;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public IRCADataTable IRCA {
            get {
                return this.tableIRCA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public iDfsFasPaln1DataTable iDfsFasPaln1 {
            get {
                return this.tableiDfsFasPaln1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public fee_palnDataTable fee_paln {
            get {
                return this.tablefee_paln;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RateJisdorDataTable RateJisdor {
            get {
                return this.tableRateJisdor;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["DataTable1"] != null)) {
                    base.Tables.Add(new DataTable1DataTable(ds.Tables["DataTable1"]));
                }
                if ((ds.Tables["Validation_SettlementPrice_Exceptions"] != null)) {
                    base.Tables.Add(new Validation_SettlementPrice_ExceptionsDataTable(ds.Tables["Validation_SettlementPrice_Exceptions"]));
                }
                if ((ds.Tables["TradefeedException"] != null)) {
                    base.Tables.Add(new TradefeedExceptionDataTable(ds.Tables["TradefeedException"]));
                }
                if ((ds.Tables["Parameter"] != null)) {
                    base.Tables.Add(new ParameterDataTable(ds.Tables["Parameter"]));
                }
                if ((ds.Tables["uspRptDailyShortageSummary"] != null)) {
                    base.Tables.Add(new uspRptDailyShortageSummaryDataTable(ds.Tables["uspRptDailyShortageSummary"]));
                }
                if ((ds.Tables["ClearingMemberSuspenseStatus"] != null)) {
                    base.Tables.Add(new ClearingMemberSuspenseStatusDataTable(ds.Tables["ClearingMemberSuspenseStatus"]));
                }
                if ((ds.Tables["ClearingHouseSuspense"] != null)) {
                    base.Tables.Add(new ClearingHouseSuspenseDataTable(ds.Tables["ClearingHouseSuspense"]));
                }
                if ((ds.Tables["ClearingMember"] != null)) {
                    base.Tables.Add(new ClearingMemberDataTable(ds.Tables["ClearingMember"]));
                }
                if ((ds.Tables["Commodity"] != null)) {
                    base.Tables.Add(new CommodityDataTable(ds.Tables["Commodity"]));
                }
                if ((ds.Tables["Contract"] != null)) {
                    base.Tables.Add(new ContractDataTable(ds.Tables["Contract"]));
                }
                if ((ds.Tables["SubCategory"] != null)) {
                    base.Tables.Add(new SubCategoryDataTable(ds.Tables["SubCategory"]));
                }
                if ((ds.Tables["Get_Tradefeed_Exception"] != null)) {
                    base.Tables.Add(new Get_Tradefeed_ExceptionDataTable(ds.Tables["Get_Tradefeed_Exception"]));
                }
                if ((ds.Tables["uspTradeFeedExceptionApproveAll"] != null)) {
                    base.Tables.Add(new uspTradeFeedExceptionApproveAllDataTable(ds.Tables["uspTradeFeedExceptionApproveAll"]));
                }
                if ((ds.Tables["iDfsFasPaln"] != null)) {
                    base.Tables.Add(new iDfsFasPalnDataTable(ds.Tables["iDfsFasPaln"]));
                }
                if ((ds.Tables["irca_parameter"] != null)) {
                    base.Tables.Add(new irca_parameterDataTable(ds.Tables["irca_parameter"]));
                }
                if ((ds.Tables["irca_product"] != null)) {
                    base.Tables.Add(new irca_productDataTable(ds.Tables["irca_product"]));
                }
                if ((ds.Tables["IRCA"] != null)) {
                    base.Tables.Add(new IRCADataTable(ds.Tables["IRCA"]));
                }
                if ((ds.Tables["iDfsFasPaln1"] != null)) {
                    base.Tables.Add(new iDfsFasPaln1DataTable(ds.Tables["iDfsFasPaln1"]));
                }
                if ((ds.Tables["fee_paln"] != null)) {
                    base.Tables.Add(new fee_palnDataTable(ds.Tables["fee_paln"]));
                }
                if ((ds.Tables["RateJisdor"] != null)) {
                    base.Tables.Add(new RateJisdorDataTable(ds.Tables["RateJisdor"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableDataTable1 = ((DataTable1DataTable)(base.Tables["DataTable1"]));
            if ((initTable == true)) {
                if ((this.tableDataTable1 != null)) {
                    this.tableDataTable1.InitVars();
                }
            }
            this.tableValidation_SettlementPrice_Exceptions = ((Validation_SettlementPrice_ExceptionsDataTable)(base.Tables["Validation_SettlementPrice_Exceptions"]));
            if ((initTable == true)) {
                if ((this.tableValidation_SettlementPrice_Exceptions != null)) {
                    this.tableValidation_SettlementPrice_Exceptions.InitVars();
                }
            }
            this.tableTradefeedException = ((TradefeedExceptionDataTable)(base.Tables["TradefeedException"]));
            if ((initTable == true)) {
                if ((this.tableTradefeedException != null)) {
                    this.tableTradefeedException.InitVars();
                }
            }
            this.tableParameter = ((ParameterDataTable)(base.Tables["Parameter"]));
            if ((initTable == true)) {
                if ((this.tableParameter != null)) {
                    this.tableParameter.InitVars();
                }
            }
            this.tableuspRptDailyShortageSummary = ((uspRptDailyShortageSummaryDataTable)(base.Tables["uspRptDailyShortageSummary"]));
            if ((initTable == true)) {
                if ((this.tableuspRptDailyShortageSummary != null)) {
                    this.tableuspRptDailyShortageSummary.InitVars();
                }
            }
            this.tableClearingMemberSuspenseStatus = ((ClearingMemberSuspenseStatusDataTable)(base.Tables["ClearingMemberSuspenseStatus"]));
            if ((initTable == true)) {
                if ((this.tableClearingMemberSuspenseStatus != null)) {
                    this.tableClearingMemberSuspenseStatus.InitVars();
                }
            }
            this.tableClearingHouseSuspense = ((ClearingHouseSuspenseDataTable)(base.Tables["ClearingHouseSuspense"]));
            if ((initTable == true)) {
                if ((this.tableClearingHouseSuspense != null)) {
                    this.tableClearingHouseSuspense.InitVars();
                }
            }
            this.tableClearingMember = ((ClearingMemberDataTable)(base.Tables["ClearingMember"]));
            if ((initTable == true)) {
                if ((this.tableClearingMember != null)) {
                    this.tableClearingMember.InitVars();
                }
            }
            this.tableCommodity = ((CommodityDataTable)(base.Tables["Commodity"]));
            if ((initTable == true)) {
                if ((this.tableCommodity != null)) {
                    this.tableCommodity.InitVars();
                }
            }
            this.tableContract = ((ContractDataTable)(base.Tables["Contract"]));
            if ((initTable == true)) {
                if ((this.tableContract != null)) {
                    this.tableContract.InitVars();
                }
            }
            this.tableSubCategory = ((SubCategoryDataTable)(base.Tables["SubCategory"]));
            if ((initTable == true)) {
                if ((this.tableSubCategory != null)) {
                    this.tableSubCategory.InitVars();
                }
            }
            this.tableGet_Tradefeed_Exception = ((Get_Tradefeed_ExceptionDataTable)(base.Tables["Get_Tradefeed_Exception"]));
            if ((initTable == true)) {
                if ((this.tableGet_Tradefeed_Exception != null)) {
                    this.tableGet_Tradefeed_Exception.InitVars();
                }
            }
            this.tableuspTradeFeedExceptionApproveAll = ((uspTradeFeedExceptionApproveAllDataTable)(base.Tables["uspTradeFeedExceptionApproveAll"]));
            if ((initTable == true)) {
                if ((this.tableuspTradeFeedExceptionApproveAll != null)) {
                    this.tableuspTradeFeedExceptionApproveAll.InitVars();
                }
            }
            this.tableiDfsFasPaln = ((iDfsFasPalnDataTable)(base.Tables["iDfsFasPaln"]));
            if ((initTable == true)) {
                if ((this.tableiDfsFasPaln != null)) {
                    this.tableiDfsFasPaln.InitVars();
                }
            }
            this.tableirca_parameter = ((irca_parameterDataTable)(base.Tables["irca_parameter"]));
            if ((initTable == true)) {
                if ((this.tableirca_parameter != null)) {
                    this.tableirca_parameter.InitVars();
                }
            }
            this.tableirca_product = ((irca_productDataTable)(base.Tables["irca_product"]));
            if ((initTable == true)) {
                if ((this.tableirca_product != null)) {
                    this.tableirca_product.InitVars();
                }
            }
            this.tableIRCA = ((IRCADataTable)(base.Tables["IRCA"]));
            if ((initTable == true)) {
                if ((this.tableIRCA != null)) {
                    this.tableIRCA.InitVars();
                }
            }
            this.tableiDfsFasPaln1 = ((iDfsFasPaln1DataTable)(base.Tables["iDfsFasPaln1"]));
            if ((initTable == true)) {
                if ((this.tableiDfsFasPaln1 != null)) {
                    this.tableiDfsFasPaln1.InitVars();
                }
            }
            this.tablefee_paln = ((fee_palnDataTable)(base.Tables["fee_paln"]));
            if ((initTable == true)) {
                if ((this.tablefee_paln != null)) {
                    this.tablefee_paln.InitVars();
                }
            }
            this.tableRateJisdor = ((RateJisdorDataTable)(base.Tables["RateJisdor"]));
            if ((initTable == true)) {
                if ((this.tableRateJisdor != null)) {
                    this.tableRateJisdor.InitVars();
                }
            }
            this.relationFK_ClearingMemberSuspenseStatus_ClearingMember = this.Relations["FK_ClearingMemberSuspenseStatus_ClearingMember"];
            this.relationFK_ClearingHouseSuspense_ClearingMember = this.Relations["FK_ClearingHouseSuspense_ClearingMember"];
            this.relationR_416 = this.Relations["R_416"];
            this.relationR_372 = this.Relations["R_372"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDataTable1 = new DataTable1DataTable();
            base.Tables.Add(this.tableDataTable1);
            this.tableValidation_SettlementPrice_Exceptions = new Validation_SettlementPrice_ExceptionsDataTable();
            base.Tables.Add(this.tableValidation_SettlementPrice_Exceptions);
            this.tableTradefeedException = new TradefeedExceptionDataTable();
            base.Tables.Add(this.tableTradefeedException);
            this.tableParameter = new ParameterDataTable();
            base.Tables.Add(this.tableParameter);
            this.tableuspRptDailyShortageSummary = new uspRptDailyShortageSummaryDataTable();
            base.Tables.Add(this.tableuspRptDailyShortageSummary);
            this.tableClearingMemberSuspenseStatus = new ClearingMemberSuspenseStatusDataTable();
            base.Tables.Add(this.tableClearingMemberSuspenseStatus);
            this.tableClearingHouseSuspense = new ClearingHouseSuspenseDataTable();
            base.Tables.Add(this.tableClearingHouseSuspense);
            this.tableClearingMember = new ClearingMemberDataTable();
            base.Tables.Add(this.tableClearingMember);
            this.tableCommodity = new CommodityDataTable();
            base.Tables.Add(this.tableCommodity);
            this.tableContract = new ContractDataTable();
            base.Tables.Add(this.tableContract);
            this.tableSubCategory = new SubCategoryDataTable();
            base.Tables.Add(this.tableSubCategory);
            this.tableGet_Tradefeed_Exception = new Get_Tradefeed_ExceptionDataTable();
            base.Tables.Add(this.tableGet_Tradefeed_Exception);
            this.tableuspTradeFeedExceptionApproveAll = new uspTradeFeedExceptionApproveAllDataTable();
            base.Tables.Add(this.tableuspTradeFeedExceptionApproveAll);
            this.tableiDfsFasPaln = new iDfsFasPalnDataTable();
            base.Tables.Add(this.tableiDfsFasPaln);
            this.tableirca_parameter = new irca_parameterDataTable();
            base.Tables.Add(this.tableirca_parameter);
            this.tableirca_product = new irca_productDataTable();
            base.Tables.Add(this.tableirca_product);
            this.tableIRCA = new IRCADataTable();
            base.Tables.Add(this.tableIRCA);
            this.tableiDfsFasPaln1 = new iDfsFasPaln1DataTable();
            base.Tables.Add(this.tableiDfsFasPaln1);
            this.tablefee_paln = new fee_palnDataTable();
            base.Tables.Add(this.tablefee_paln);
            this.tableRateJisdor = new RateJisdorDataTable();
            base.Tables.Add(this.tableRateJisdor);
            this.relationFK_ClearingMemberSuspenseStatus_ClearingMember = new global::System.Data.DataRelation("FK_ClearingMemberSuspenseStatus_ClearingMember", new global::System.Data.DataColumn[] {
                        this.tableClearingMember.CMIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableClearingMemberSuspenseStatus.CMIDColumn}, false);
            this.Relations.Add(this.relationFK_ClearingMemberSuspenseStatus_ClearingMember);
            this.relationFK_ClearingHouseSuspense_ClearingMember = new global::System.Data.DataRelation("FK_ClearingHouseSuspense_ClearingMember", new global::System.Data.DataColumn[] {
                        this.tableClearingMember.CMIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableClearingHouseSuspense.CMIDColumn}, false);
            this.Relations.Add(this.relationFK_ClearingHouseSuspense_ClearingMember);
            this.relationR_416 = new global::System.Data.DataRelation("R_416", new global::System.Data.DataColumn[] {
                        this.tableCommodity.CommodityIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableCommodity.ReffCommIDColumn}, false);
            this.Relations.Add(this.relationR_416);
            this.relationR_372 = new global::System.Data.DataRelation("R_372", new global::System.Data.DataColumn[] {
                        this.tableCommodity.CommodityIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableIRCA.CommodityIDColumn}, false);
            this.Relations.Add(this.relationR_372);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeDataTable1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeValidation_SettlementPrice_Exceptions() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeTradefeedException() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeParameter() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeuspRptDailyShortageSummary() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeClearingMemberSuspenseStatus() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeClearingHouseSuspense() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeClearingMember() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeCommodity() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeContract() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeSubCategory() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeGet_Tradefeed_Exception() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeuspTradeFeedExceptionApproveAll() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeiDfsFasPaln() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeirca_parameter() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeirca_product() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeIRCA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeiDfsFasPaln1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializefee_paln() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeRateJisdor() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void DataTable1RowChangeEventHandler(object sender, DataTable1RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void Validation_SettlementPrice_ExceptionsRowChangeEventHandler(object sender, Validation_SettlementPrice_ExceptionsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void TradefeedExceptionRowChangeEventHandler(object sender, TradefeedExceptionRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void ParameterRowChangeEventHandler(object sender, ParameterRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void uspRptDailyShortageSummaryRowChangeEventHandler(object sender, uspRptDailyShortageSummaryRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void ClearingMemberSuspenseStatusRowChangeEventHandler(object sender, ClearingMemberSuspenseStatusRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void ClearingHouseSuspenseRowChangeEventHandler(object sender, ClearingHouseSuspenseRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void ClearingMemberRowChangeEventHandler(object sender, ClearingMemberRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void CommodityRowChangeEventHandler(object sender, CommodityRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void ContractRowChangeEventHandler(object sender, ContractRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void SubCategoryRowChangeEventHandler(object sender, SubCategoryRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void Get_Tradefeed_ExceptionRowChangeEventHandler(object sender, Get_Tradefeed_ExceptionRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void uspTradeFeedExceptionApproveAllRowChangeEventHandler(object sender, uspTradeFeedExceptionApproveAllRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void iDfsFasPalnRowChangeEventHandler(object sender, iDfsFasPalnRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void irca_parameterRowChangeEventHandler(object sender, irca_parameterRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void irca_productRowChangeEventHandler(object sender, irca_productRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void IRCARowChangeEventHandler(object sender, IRCARowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void iDfsFasPaln1RowChangeEventHandler(object sender, iDfsFasPaln1RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void fee_palnRowChangeEventHandler(object sender, fee_palnRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void RateJisdorRowChangeEventHandler(object sender, RateJisdorRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataTable1DataTable : global::System.Data.TypedTableBase<DataTable1Row> {
            
            private global::System.Data.DataColumn columntotaltradefeed;
            
            private global::System.Data.DataColumn columnlot;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataTable1DataTable() {
                this.TableName = "DataTable1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal DataTable1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected DataTable1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn totaltradefeedColumn {
                get {
                    return this.columntotaltradefeed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn lotColumn {
                get {
                    return this.columnlot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataTable1Row this[int index] {
                get {
                    return ((DataTable1Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event DataTable1RowChangeEventHandler DataTable1RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event DataTable1RowChangeEventHandler DataTable1RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event DataTable1RowChangeEventHandler DataTable1RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event DataTable1RowChangeEventHandler DataTable1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddDataTable1Row(DataTable1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataTable1Row AddDataTable1Row(int totaltradefeed, decimal lot) {
                DataTable1Row rowDataTable1Row = ((DataTable1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        totaltradefeed,
                        lot};
                rowDataTable1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataTable1Row);
                return rowDataTable1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DataTable1DataTable cln = ((DataTable1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataTable1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columntotaltradefeed = base.Columns["totaltradefeed"];
                this.columnlot = base.Columns["lot"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columntotaltradefeed = new global::System.Data.DataColumn("totaltradefeed", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotaltradefeed);
                this.columnlot = new global::System.Data.DataColumn("lot", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlot);
                this.columntotaltradefeed.ReadOnly = true;
                this.columnlot.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataTable1Row NewDataTable1Row() {
                return ((DataTable1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataTable1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DataTable1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataTable1RowChanged != null)) {
                    this.DataTable1RowChanged(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataTable1RowChanging != null)) {
                    this.DataTable1RowChanging(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataTable1RowDeleted != null)) {
                    this.DataTable1RowDeleted(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataTable1RowDeleting != null)) {
                    this.DataTable1RowDeleting(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveDataTable1Row(DataTable1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataTable1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Validation_SettlementPrice_ExceptionsDataTable : global::System.Data.TypedTableBase<Validation_SettlementPrice_ExceptionsRow> {
            
            private global::System.Data.DataColumn columncount_sp;
            
            private global::System.Data.DataColumn columncount_ex;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Validation_SettlementPrice_ExceptionsDataTable() {
                this.TableName = "Validation_SettlementPrice_Exceptions";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal Validation_SettlementPrice_ExceptionsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected Validation_SettlementPrice_ExceptionsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn count_spColumn {
                get {
                    return this.columncount_sp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn count_exColumn {
                get {
                    return this.columncount_ex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Validation_SettlementPrice_ExceptionsRow this[int index] {
                get {
                    return ((Validation_SettlementPrice_ExceptionsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Validation_SettlementPrice_ExceptionsRowChangeEventHandler Validation_SettlementPrice_ExceptionsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Validation_SettlementPrice_ExceptionsRowChangeEventHandler Validation_SettlementPrice_ExceptionsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Validation_SettlementPrice_ExceptionsRowChangeEventHandler Validation_SettlementPrice_ExceptionsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Validation_SettlementPrice_ExceptionsRowChangeEventHandler Validation_SettlementPrice_ExceptionsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddValidation_SettlementPrice_ExceptionsRow(Validation_SettlementPrice_ExceptionsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Validation_SettlementPrice_ExceptionsRow AddValidation_SettlementPrice_ExceptionsRow(int count_sp, int count_ex) {
                Validation_SettlementPrice_ExceptionsRow rowValidation_SettlementPrice_ExceptionsRow = ((Validation_SettlementPrice_ExceptionsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        count_sp,
                        count_ex};
                rowValidation_SettlementPrice_ExceptionsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowValidation_SettlementPrice_ExceptionsRow);
                return rowValidation_SettlementPrice_ExceptionsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Validation_SettlementPrice_ExceptionsDataTable cln = ((Validation_SettlementPrice_ExceptionsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Validation_SettlementPrice_ExceptionsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columncount_sp = base.Columns["count_sp"];
                this.columncount_ex = base.Columns["count_ex"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columncount_sp = new global::System.Data.DataColumn("count_sp", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncount_sp);
                this.columncount_ex = new global::System.Data.DataColumn("count_ex", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncount_ex);
                this.columncount_sp.ReadOnly = true;
                this.columncount_ex.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Validation_SettlementPrice_ExceptionsRow NewValidation_SettlementPrice_ExceptionsRow() {
                return ((Validation_SettlementPrice_ExceptionsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Validation_SettlementPrice_ExceptionsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Validation_SettlementPrice_ExceptionsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Validation_SettlementPrice_ExceptionsRowChanged != null)) {
                    this.Validation_SettlementPrice_ExceptionsRowChanged(this, new Validation_SettlementPrice_ExceptionsRowChangeEvent(((Validation_SettlementPrice_ExceptionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Validation_SettlementPrice_ExceptionsRowChanging != null)) {
                    this.Validation_SettlementPrice_ExceptionsRowChanging(this, new Validation_SettlementPrice_ExceptionsRowChangeEvent(((Validation_SettlementPrice_ExceptionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Validation_SettlementPrice_ExceptionsRowDeleted != null)) {
                    this.Validation_SettlementPrice_ExceptionsRowDeleted(this, new Validation_SettlementPrice_ExceptionsRowChangeEvent(((Validation_SettlementPrice_ExceptionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Validation_SettlementPrice_ExceptionsRowDeleting != null)) {
                    this.Validation_SettlementPrice_ExceptionsRowDeleting(this, new Validation_SettlementPrice_ExceptionsRowChangeEvent(((Validation_SettlementPrice_ExceptionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveValidation_SettlementPrice_ExceptionsRow(Validation_SettlementPrice_ExceptionsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Validation_SettlementPrice_ExceptionsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TradefeedExceptionDataTable : global::System.Data.TypedTableBase<TradefeedExceptionRow> {
            
            private global::System.Data.DataColumn columnTradeFeedID;
            
            private global::System.Data.DataColumn columnBusinessDate;
            
            private global::System.Data.DataColumn columnExchangeID;
            
            private global::System.Data.DataColumn columnApprovalStatus;
            
            private global::System.Data.DataColumn columnMessage;
            
            private global::System.Data.DataColumn columnApprovalDesc;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnLastUpdatedBy;
            
            private global::System.Data.DataColumn columnLastUpdatedDate;
            
            private global::System.Data.DataColumn columnForceApproveOperationsType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public TradefeedExceptionDataTable() {
                this.TableName = "TradefeedException";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal TradefeedExceptionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected TradefeedExceptionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TradeFeedIDColumn {
                get {
                    return this.columnTradeFeedID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BusinessDateColumn {
                get {
                    return this.columnBusinessDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ExchangeIDColumn {
                get {
                    return this.columnExchangeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ApprovalStatusColumn {
                get {
                    return this.columnApprovalStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MessageColumn {
                get {
                    return this.columnMessage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ApprovalDescColumn {
                get {
                    return this.columnApprovalDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LastUpdatedByColumn {
                get {
                    return this.columnLastUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LastUpdatedDateColumn {
                get {
                    return this.columnLastUpdatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ForceApproveOperationsTypeColumn {
                get {
                    return this.columnForceApproveOperationsType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public TradefeedExceptionRow this[int index] {
                get {
                    return ((TradefeedExceptionRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event TradefeedExceptionRowChangeEventHandler TradefeedExceptionRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event TradefeedExceptionRowChangeEventHandler TradefeedExceptionRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event TradefeedExceptionRowChangeEventHandler TradefeedExceptionRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event TradefeedExceptionRowChangeEventHandler TradefeedExceptionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddTradefeedExceptionRow(TradefeedExceptionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public TradefeedExceptionRow AddTradefeedExceptionRow(decimal TradeFeedID, System.DateTime BusinessDate, decimal ExchangeID, string ApprovalStatus, string Message, string ApprovalDesc, string CreatedBy, System.DateTime CreatedDate, string LastUpdatedBy, System.DateTime LastUpdatedDate, int ForceApproveOperationsType) {
                TradefeedExceptionRow rowTradefeedExceptionRow = ((TradefeedExceptionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TradeFeedID,
                        BusinessDate,
                        ExchangeID,
                        ApprovalStatus,
                        Message,
                        ApprovalDesc,
                        CreatedBy,
                        CreatedDate,
                        LastUpdatedBy,
                        LastUpdatedDate,
                        ForceApproveOperationsType};
                rowTradefeedExceptionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTradefeedExceptionRow);
                return rowTradefeedExceptionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public TradefeedExceptionRow FindByTradeFeedIDBusinessDateExchangeIDApprovalStatus(decimal TradeFeedID, System.DateTime BusinessDate, decimal ExchangeID, string ApprovalStatus) {
                return ((TradefeedExceptionRow)(this.Rows.Find(new object[] {
                            TradeFeedID,
                            BusinessDate,
                            ExchangeID,
                            ApprovalStatus})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TradefeedExceptionDataTable cln = ((TradefeedExceptionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TradefeedExceptionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnTradeFeedID = base.Columns["TradeFeedID"];
                this.columnBusinessDate = base.Columns["BusinessDate"];
                this.columnExchangeID = base.Columns["ExchangeID"];
                this.columnApprovalStatus = base.Columns["ApprovalStatus"];
                this.columnMessage = base.Columns["Message"];
                this.columnApprovalDesc = base.Columns["ApprovalDesc"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnLastUpdatedBy = base.Columns["LastUpdatedBy"];
                this.columnLastUpdatedDate = base.Columns["LastUpdatedDate"];
                this.columnForceApproveOperationsType = base.Columns["ForceApproveOperationsType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnTradeFeedID = new global::System.Data.DataColumn("TradeFeedID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeFeedID);
                this.columnBusinessDate = new global::System.Data.DataColumn("BusinessDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessDate);
                this.columnExchangeID = new global::System.Data.DataColumn("ExchangeID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExchangeID);
                this.columnApprovalStatus = new global::System.Data.DataColumn("ApprovalStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovalStatus);
                this.columnMessage = new global::System.Data.DataColumn("Message", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMessage);
                this.columnApprovalDesc = new global::System.Data.DataColumn("ApprovalDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovalDesc);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnLastUpdatedBy = new global::System.Data.DataColumn("LastUpdatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdatedBy);
                this.columnLastUpdatedDate = new global::System.Data.DataColumn("LastUpdatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdatedDate);
                this.columnForceApproveOperationsType = new global::System.Data.DataColumn("ForceApproveOperationsType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForceApproveOperationsType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTradeFeedID,
                                this.columnBusinessDate,
                                this.columnExchangeID,
                                this.columnApprovalStatus}, true));
                this.columnTradeFeedID.AllowDBNull = false;
                this.columnBusinessDate.AllowDBNull = false;
                this.columnExchangeID.AllowDBNull = false;
                this.columnApprovalStatus.AllowDBNull = false;
                this.columnApprovalStatus.MaxLength = 1;
                this.columnMessage.MaxLength = 500;
                this.columnApprovalDesc.MaxLength = 100;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 50;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnLastUpdatedBy.AllowDBNull = false;
                this.columnLastUpdatedBy.MaxLength = 50;
                this.columnLastUpdatedDate.AllowDBNull = false;
                this.columnForceApproveOperationsType.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public TradefeedExceptionRow NewTradefeedExceptionRow() {
                return ((TradefeedExceptionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TradefeedExceptionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TradefeedExceptionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TradefeedExceptionRowChanged != null)) {
                    this.TradefeedExceptionRowChanged(this, new TradefeedExceptionRowChangeEvent(((TradefeedExceptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TradefeedExceptionRowChanging != null)) {
                    this.TradefeedExceptionRowChanging(this, new TradefeedExceptionRowChangeEvent(((TradefeedExceptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TradefeedExceptionRowDeleted != null)) {
                    this.TradefeedExceptionRowDeleted(this, new TradefeedExceptionRowChangeEvent(((TradefeedExceptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TradefeedExceptionRowDeleting != null)) {
                    this.TradefeedExceptionRowDeleting(this, new TradefeedExceptionRowChangeEvent(((TradefeedExceptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveTradefeedExceptionRow(TradefeedExceptionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TradefeedExceptionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ParameterDataTable : global::System.Data.TypedTableBase<ParameterRow> {
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnEffectiveStartDate;
            
            private global::System.Data.DataColumn columnApprovalStatus;
            
            private global::System.Data.DataColumn columnNumericValue;
            
            private global::System.Data.DataColumn columnDateValue;
            
            private global::System.Data.DataColumn columnStringValue;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnLastUpdatedBy;
            
            private global::System.Data.DataColumn columnLastUpdatedDate;
            
            private global::System.Data.DataColumn columnEffectiveEndDate;
            
            private global::System.Data.DataColumn columnApprovalDesc;
            
            private global::System.Data.DataColumn columnParameterID;
            
            private global::System.Data.DataColumn columnActionFlag;
            
            private global::System.Data.DataColumn columnOriginalID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ParameterDataTable() {
                this.TableName = "Parameter";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ParameterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected ParameterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EffectiveStartDateColumn {
                get {
                    return this.columnEffectiveStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ApprovalStatusColumn {
                get {
                    return this.columnApprovalStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NumericValueColumn {
                get {
                    return this.columnNumericValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DateValueColumn {
                get {
                    return this.columnDateValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn StringValueColumn {
                get {
                    return this.columnStringValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LastUpdatedByColumn {
                get {
                    return this.columnLastUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LastUpdatedDateColumn {
                get {
                    return this.columnLastUpdatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EffectiveEndDateColumn {
                get {
                    return this.columnEffectiveEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ApprovalDescColumn {
                get {
                    return this.columnApprovalDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ParameterIDColumn {
                get {
                    return this.columnParameterID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ActionFlagColumn {
                get {
                    return this.columnActionFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OriginalIDColumn {
                get {
                    return this.columnOriginalID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ParameterRow this[int index] {
                get {
                    return ((ParameterRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ParameterRowChangeEventHandler ParameterRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ParameterRowChangeEventHandler ParameterRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ParameterRowChangeEventHandler ParameterRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ParameterRowChangeEventHandler ParameterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddParameterRow(ParameterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ParameterRow AddParameterRow(string Code, System.DateTime EffectiveStartDate, string ApprovalStatus, decimal NumericValue, System.DateTime DateValue, string StringValue, string CreatedBy, System.DateTime CreatedDate, string LastUpdatedBy, System.DateTime LastUpdatedDate, System.DateTime EffectiveEndDate, string ApprovalDesc, string ActionFlag, decimal OriginalID) {
                ParameterRow rowParameterRow = ((ParameterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Code,
                        EffectiveStartDate,
                        ApprovalStatus,
                        NumericValue,
                        DateValue,
                        StringValue,
                        CreatedBy,
                        CreatedDate,
                        LastUpdatedBy,
                        LastUpdatedDate,
                        EffectiveEndDate,
                        ApprovalDesc,
                        null,
                        ActionFlag,
                        OriginalID};
                rowParameterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowParameterRow);
                return rowParameterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ParameterRow FindByCodeEffectiveStartDateApprovalStatus(string Code, System.DateTime EffectiveStartDate, string ApprovalStatus) {
                return ((ParameterRow)(this.Rows.Find(new object[] {
                            Code,
                            EffectiveStartDate,
                            ApprovalStatus})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ParameterDataTable cln = ((ParameterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ParameterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnCode = base.Columns["Code"];
                this.columnEffectiveStartDate = base.Columns["EffectiveStartDate"];
                this.columnApprovalStatus = base.Columns["ApprovalStatus"];
                this.columnNumericValue = base.Columns["NumericValue"];
                this.columnDateValue = base.Columns["DateValue"];
                this.columnStringValue = base.Columns["StringValue"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnLastUpdatedBy = base.Columns["LastUpdatedBy"];
                this.columnLastUpdatedDate = base.Columns["LastUpdatedDate"];
                this.columnEffectiveEndDate = base.Columns["EffectiveEndDate"];
                this.columnApprovalDesc = base.Columns["ApprovalDesc"];
                this.columnParameterID = base.Columns["ParameterID"];
                this.columnActionFlag = base.Columns["ActionFlag"];
                this.columnOriginalID = base.Columns["OriginalID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnEffectiveStartDate = new global::System.Data.DataColumn("EffectiveStartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectiveStartDate);
                this.columnApprovalStatus = new global::System.Data.DataColumn("ApprovalStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovalStatus);
                this.columnNumericValue = new global::System.Data.DataColumn("NumericValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumericValue);
                this.columnDateValue = new global::System.Data.DataColumn("DateValue", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateValue);
                this.columnStringValue = new global::System.Data.DataColumn("StringValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStringValue);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnLastUpdatedBy = new global::System.Data.DataColumn("LastUpdatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdatedBy);
                this.columnLastUpdatedDate = new global::System.Data.DataColumn("LastUpdatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdatedDate);
                this.columnEffectiveEndDate = new global::System.Data.DataColumn("EffectiveEndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectiveEndDate);
                this.columnApprovalDesc = new global::System.Data.DataColumn("ApprovalDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovalDesc);
                this.columnParameterID = new global::System.Data.DataColumn("ParameterID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParameterID);
                this.columnActionFlag = new global::System.Data.DataColumn("ActionFlag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActionFlag);
                this.columnOriginalID = new global::System.Data.DataColumn("OriginalID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCode,
                                this.columnEffectiveStartDate,
                                this.columnApprovalStatus}, true));
                this.columnCode.AllowDBNull = false;
                this.columnCode.MaxLength = 50;
                this.columnEffectiveStartDate.AllowDBNull = false;
                this.columnApprovalStatus.AllowDBNull = false;
                this.columnApprovalStatus.MaxLength = 1;
                this.columnStringValue.MaxLength = 100;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 50;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnLastUpdatedBy.AllowDBNull = false;
                this.columnLastUpdatedBy.MaxLength = 50;
                this.columnLastUpdatedDate.AllowDBNull = false;
                this.columnApprovalDesc.MaxLength = 100;
                this.columnParameterID.AutoIncrement = true;
                this.columnParameterID.AutoIncrementSeed = -1;
                this.columnParameterID.AutoIncrementStep = -1;
                this.columnParameterID.AllowDBNull = false;
                this.columnParameterID.ReadOnly = true;
                this.columnActionFlag.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ParameterRow NewParameterRow() {
                return ((ParameterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ParameterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ParameterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ParameterRowChanged != null)) {
                    this.ParameterRowChanged(this, new ParameterRowChangeEvent(((ParameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ParameterRowChanging != null)) {
                    this.ParameterRowChanging(this, new ParameterRowChangeEvent(((ParameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ParameterRowDeleted != null)) {
                    this.ParameterRowDeleted(this, new ParameterRowChangeEvent(((ParameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ParameterRowDeleting != null)) {
                    this.ParameterRowDeleting(this, new ParameterRowChangeEvent(((ParameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveParameterRow(ParameterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ParameterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class uspRptDailyShortageSummaryDataTable : global::System.Data.TypedTableBase<uspRptDailyShortageSummaryRow> {
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnSegShortageExcessIDR;
            
            private global::System.Data.DataColumn columnUnsegShortageExcessIDR;
            
            private global::System.Data.DataColumn columnSegShortageExcessUSD;
            
            private global::System.Data.DataColumn columnUnsegShortageExcessUSD;
            
            private global::System.Data.DataColumn columnEkuivalen;
            
            private global::System.Data.DataColumn columnTotalEkuivalen;
            
            private global::System.Data.DataColumn columnLimitGroupDesc;
            
            private global::System.Data.DataColumn columnStatusSuspensi;
            
            private global::System.Data.DataColumn columnKursKIE;
            
            private global::System.Data.DataColumn columnSegShortageExcessIDR_negative;
            
            private global::System.Data.DataColumn columnUnsegShortageExcessIDR_negative;
            
            private global::System.Data.DataColumn columnSegShortageExcessUSD_negative;
            
            private global::System.Data.DataColumn columnUnsegShortageExcessUSD_negative;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public uspRptDailyShortageSummaryDataTable() {
                this.TableName = "uspRptDailyShortageSummary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal uspRptDailyShortageSummaryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected uspRptDailyShortageSummaryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SegShortageExcessIDRColumn {
                get {
                    return this.columnSegShortageExcessIDR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn UnsegShortageExcessIDRColumn {
                get {
                    return this.columnUnsegShortageExcessIDR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SegShortageExcessUSDColumn {
                get {
                    return this.columnSegShortageExcessUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn UnsegShortageExcessUSDColumn {
                get {
                    return this.columnUnsegShortageExcessUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EkuivalenColumn {
                get {
                    return this.columnEkuivalen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TotalEkuivalenColumn {
                get {
                    return this.columnTotalEkuivalen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LimitGroupDescColumn {
                get {
                    return this.columnLimitGroupDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn StatusSuspensiColumn {
                get {
                    return this.columnStatusSuspensi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KursKIEColumn {
                get {
                    return this.columnKursKIE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SegShortageExcessIDR_negativeColumn {
                get {
                    return this.columnSegShortageExcessIDR_negative;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn UnsegShortageExcessIDR_negativeColumn {
                get {
                    return this.columnUnsegShortageExcessIDR_negative;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SegShortageExcessUSD_negativeColumn {
                get {
                    return this.columnSegShortageExcessUSD_negative;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn UnsegShortageExcessUSD_negativeColumn {
                get {
                    return this.columnUnsegShortageExcessUSD_negative;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public uspRptDailyShortageSummaryRow this[int index] {
                get {
                    return ((uspRptDailyShortageSummaryRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event uspRptDailyShortageSummaryRowChangeEventHandler uspRptDailyShortageSummaryRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event uspRptDailyShortageSummaryRowChangeEventHandler uspRptDailyShortageSummaryRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event uspRptDailyShortageSummaryRowChangeEventHandler uspRptDailyShortageSummaryRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event uspRptDailyShortageSummaryRowChangeEventHandler uspRptDailyShortageSummaryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AdduspRptDailyShortageSummaryRow(uspRptDailyShortageSummaryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public uspRptDailyShortageSummaryRow AdduspRptDailyShortageSummaryRow(string Code, string Name, decimal SegShortageExcessIDR, decimal UnsegShortageExcessIDR, decimal SegShortageExcessUSD, decimal UnsegShortageExcessUSD, decimal Ekuivalen, decimal TotalEkuivalen, string LimitGroupDesc, string StatusSuspensi, decimal KursKIE, decimal SegShortageExcessIDR_negative, decimal UnsegShortageExcessIDR_negative, decimal SegShortageExcessUSD_negative, decimal UnsegShortageExcessUSD_negative) {
                uspRptDailyShortageSummaryRow rowuspRptDailyShortageSummaryRow = ((uspRptDailyShortageSummaryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Code,
                        Name,
                        SegShortageExcessIDR,
                        UnsegShortageExcessIDR,
                        SegShortageExcessUSD,
                        UnsegShortageExcessUSD,
                        Ekuivalen,
                        TotalEkuivalen,
                        LimitGroupDesc,
                        StatusSuspensi,
                        KursKIE,
                        SegShortageExcessIDR_negative,
                        UnsegShortageExcessIDR_negative,
                        SegShortageExcessUSD_negative,
                        UnsegShortageExcessUSD_negative};
                rowuspRptDailyShortageSummaryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowuspRptDailyShortageSummaryRow);
                return rowuspRptDailyShortageSummaryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                uspRptDailyShortageSummaryDataTable cln = ((uspRptDailyShortageSummaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new uspRptDailyShortageSummaryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnCode = base.Columns["Code"];
                this.columnName = base.Columns["Name"];
                this.columnSegShortageExcessIDR = base.Columns["SegShortageExcessIDR"];
                this.columnUnsegShortageExcessIDR = base.Columns["UnsegShortageExcessIDR"];
                this.columnSegShortageExcessUSD = base.Columns["SegShortageExcessUSD"];
                this.columnUnsegShortageExcessUSD = base.Columns["UnsegShortageExcessUSD"];
                this.columnEkuivalen = base.Columns["Ekuivalen"];
                this.columnTotalEkuivalen = base.Columns["TotalEkuivalen"];
                this.columnLimitGroupDesc = base.Columns["LimitGroupDesc"];
                this.columnStatusSuspensi = base.Columns["StatusSuspensi"];
                this.columnKursKIE = base.Columns["KursKIE"];
                this.columnSegShortageExcessIDR_negative = base.Columns["SegShortageExcessIDR_negative"];
                this.columnUnsegShortageExcessIDR_negative = base.Columns["UnsegShortageExcessIDR_negative"];
                this.columnSegShortageExcessUSD_negative = base.Columns["SegShortageExcessUSD_negative"];
                this.columnUnsegShortageExcessUSD_negative = base.Columns["UnsegShortageExcessUSD_negative"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnSegShortageExcessIDR = new global::System.Data.DataColumn("SegShortageExcessIDR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSegShortageExcessIDR);
                this.columnUnsegShortageExcessIDR = new global::System.Data.DataColumn("UnsegShortageExcessIDR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnsegShortageExcessIDR);
                this.columnSegShortageExcessUSD = new global::System.Data.DataColumn("SegShortageExcessUSD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSegShortageExcessUSD);
                this.columnUnsegShortageExcessUSD = new global::System.Data.DataColumn("UnsegShortageExcessUSD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnsegShortageExcessUSD);
                this.columnEkuivalen = new global::System.Data.DataColumn("Ekuivalen", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEkuivalen);
                this.columnTotalEkuivalen = new global::System.Data.DataColumn("TotalEkuivalen", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalEkuivalen);
                this.columnLimitGroupDesc = new global::System.Data.DataColumn("LimitGroupDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLimitGroupDesc);
                this.columnStatusSuspensi = new global::System.Data.DataColumn("StatusSuspensi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatusSuspensi);
                this.columnKursKIE = new global::System.Data.DataColumn("KursKIE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKursKIE);
                this.columnSegShortageExcessIDR_negative = new global::System.Data.DataColumn("SegShortageExcessIDR_negative", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSegShortageExcessIDR_negative);
                this.columnUnsegShortageExcessIDR_negative = new global::System.Data.DataColumn("UnsegShortageExcessIDR_negative", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnsegShortageExcessIDR_negative);
                this.columnSegShortageExcessUSD_negative = new global::System.Data.DataColumn("SegShortageExcessUSD_negative", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSegShortageExcessUSD_negative);
                this.columnUnsegShortageExcessUSD_negative = new global::System.Data.DataColumn("UnsegShortageExcessUSD_negative", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnsegShortageExcessUSD_negative);
                this.columnCode.AllowDBNull = false;
                this.columnCode.MaxLength = 20;
                this.columnName.MaxLength = 50;
                this.columnEkuivalen.ReadOnly = true;
                this.columnTotalEkuivalen.ReadOnly = true;
                this.columnLimitGroupDesc.ReadOnly = true;
                this.columnLimitGroupDesc.MaxLength = 17;
                this.columnStatusSuspensi.ReadOnly = true;
                this.columnStatusSuspensi.MaxLength = 8;
                this.columnKursKIE.ReadOnly = true;
                this.columnSegShortageExcessIDR_negative.ReadOnly = true;
                this.columnUnsegShortageExcessIDR_negative.ReadOnly = true;
                this.columnSegShortageExcessUSD_negative.ReadOnly = true;
                this.columnUnsegShortageExcessUSD_negative.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public uspRptDailyShortageSummaryRow NewuspRptDailyShortageSummaryRow() {
                return ((uspRptDailyShortageSummaryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new uspRptDailyShortageSummaryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(uspRptDailyShortageSummaryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.uspRptDailyShortageSummaryRowChanged != null)) {
                    this.uspRptDailyShortageSummaryRowChanged(this, new uspRptDailyShortageSummaryRowChangeEvent(((uspRptDailyShortageSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.uspRptDailyShortageSummaryRowChanging != null)) {
                    this.uspRptDailyShortageSummaryRowChanging(this, new uspRptDailyShortageSummaryRowChangeEvent(((uspRptDailyShortageSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.uspRptDailyShortageSummaryRowDeleted != null)) {
                    this.uspRptDailyShortageSummaryRowDeleted(this, new uspRptDailyShortageSummaryRowChangeEvent(((uspRptDailyShortageSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.uspRptDailyShortageSummaryRowDeleting != null)) {
                    this.uspRptDailyShortageSummaryRowDeleting(this, new uspRptDailyShortageSummaryRowChangeEvent(((uspRptDailyShortageSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveuspRptDailyShortageSummaryRow(uspRptDailyShortageSummaryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "uspRptDailyShortageSummaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ClearingMemberSuspenseStatusDataTable : global::System.Data.TypedTableBase<ClearingMemberSuspenseStatusRow> {
            
            private global::System.Data.DataColumn columnClearingMemberSuspenseStatusId;
            
            private global::System.Data.DataColumn columnBusinessDate;
            
            private global::System.Data.DataColumn columnExchangeId;
            
            private global::System.Data.DataColumn columnCMID;
            
            private global::System.Data.DataColumn columnSuspenseOriginator;
            
            private global::System.Data.DataColumn columnSuspenseRefId;
            
            private global::System.Data.DataColumn columnSuspenseType;
            
            private global::System.Data.DataColumn columnSuspenseTime;
            
            private global::System.Data.DataColumn columnSuspenseConfirmed;
            
            private global::System.Data.DataColumn columnActiveFlag;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ClearingMemberSuspenseStatusDataTable() {
                this.TableName = "ClearingMemberSuspenseStatus";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ClearingMemberSuspenseStatusDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected ClearingMemberSuspenseStatusDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ClearingMemberSuspenseStatusIdColumn {
                get {
                    return this.columnClearingMemberSuspenseStatusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BusinessDateColumn {
                get {
                    return this.columnBusinessDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ExchangeIdColumn {
                get {
                    return this.columnExchangeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CMIDColumn {
                get {
                    return this.columnCMID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SuspenseOriginatorColumn {
                get {
                    return this.columnSuspenseOriginator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SuspenseRefIdColumn {
                get {
                    return this.columnSuspenseRefId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SuspenseTypeColumn {
                get {
                    return this.columnSuspenseType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SuspenseTimeColumn {
                get {
                    return this.columnSuspenseTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SuspenseConfirmedColumn {
                get {
                    return this.columnSuspenseConfirmed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ActiveFlagColumn {
                get {
                    return this.columnActiveFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ClearingMemberSuspenseStatusRow this[int index] {
                get {
                    return ((ClearingMemberSuspenseStatusRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ClearingMemberSuspenseStatusRowChangeEventHandler ClearingMemberSuspenseStatusRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ClearingMemberSuspenseStatusRowChangeEventHandler ClearingMemberSuspenseStatusRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ClearingMemberSuspenseStatusRowChangeEventHandler ClearingMemberSuspenseStatusRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ClearingMemberSuspenseStatusRowChangeEventHandler ClearingMemberSuspenseStatusRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddClearingMemberSuspenseStatusRow(ClearingMemberSuspenseStatusRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ClearingMemberSuspenseStatusRow AddClearingMemberSuspenseStatusRow(System.DateTime BusinessDate, decimal ExchangeId, ClearingMemberRow parentClearingMemberRowByFK_ClearingMemberSuspenseStatus_ClearingMember, string SuspenseOriginator, decimal SuspenseRefId, string SuspenseType, System.DateTime SuspenseTime, string SuspenseConfirmed, string ActiveFlag) {
                ClearingMemberSuspenseStatusRow rowClearingMemberSuspenseStatusRow = ((ClearingMemberSuspenseStatusRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        BusinessDate,
                        ExchangeId,
                        null,
                        SuspenseOriginator,
                        SuspenseRefId,
                        SuspenseType,
                        SuspenseTime,
                        SuspenseConfirmed,
                        ActiveFlag};
                if ((parentClearingMemberRowByFK_ClearingMemberSuspenseStatus_ClearingMember != null)) {
                    columnValuesArray[3] = parentClearingMemberRowByFK_ClearingMemberSuspenseStatus_ClearingMember[3];
                }
                rowClearingMemberSuspenseStatusRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowClearingMemberSuspenseStatusRow);
                return rowClearingMemberSuspenseStatusRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ClearingMemberSuspenseStatusRow FindByBusinessDateExchangeIdCMIDSuspenseTypeSuspenseTime(System.DateTime BusinessDate, decimal ExchangeId, decimal CMID, string SuspenseType, System.DateTime SuspenseTime) {
                return ((ClearingMemberSuspenseStatusRow)(this.Rows.Find(new object[] {
                            BusinessDate,
                            ExchangeId,
                            CMID,
                            SuspenseType,
                            SuspenseTime})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ClearingMemberSuspenseStatusDataTable cln = ((ClearingMemberSuspenseStatusDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ClearingMemberSuspenseStatusDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnClearingMemberSuspenseStatusId = base.Columns["ClearingMemberSuspenseStatusId"];
                this.columnBusinessDate = base.Columns["BusinessDate"];
                this.columnExchangeId = base.Columns["ExchangeId"];
                this.columnCMID = base.Columns["CMID"];
                this.columnSuspenseOriginator = base.Columns["SuspenseOriginator"];
                this.columnSuspenseRefId = base.Columns["SuspenseRefId"];
                this.columnSuspenseType = base.Columns["SuspenseType"];
                this.columnSuspenseTime = base.Columns["SuspenseTime"];
                this.columnSuspenseConfirmed = base.Columns["SuspenseConfirmed"];
                this.columnActiveFlag = base.Columns["ActiveFlag"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnClearingMemberSuspenseStatusId = new global::System.Data.DataColumn("ClearingMemberSuspenseStatusId", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClearingMemberSuspenseStatusId);
                this.columnBusinessDate = new global::System.Data.DataColumn("BusinessDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessDate);
                this.columnExchangeId = new global::System.Data.DataColumn("ExchangeId", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExchangeId);
                this.columnCMID = new global::System.Data.DataColumn("CMID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMID);
                this.columnSuspenseOriginator = new global::System.Data.DataColumn("SuspenseOriginator", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuspenseOriginator);
                this.columnSuspenseRefId = new global::System.Data.DataColumn("SuspenseRefId", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuspenseRefId);
                this.columnSuspenseType = new global::System.Data.DataColumn("SuspenseType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuspenseType);
                this.columnSuspenseTime = new global::System.Data.DataColumn("SuspenseTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuspenseTime);
                this.columnSuspenseConfirmed = new global::System.Data.DataColumn("SuspenseConfirmed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuspenseConfirmed);
                this.columnActiveFlag = new global::System.Data.DataColumn("ActiveFlag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActiveFlag);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBusinessDate,
                                this.columnExchangeId,
                                this.columnCMID,
                                this.columnSuspenseType,
                                this.columnSuspenseTime}, true));
                this.columnClearingMemberSuspenseStatusId.AutoIncrement = true;
                this.columnClearingMemberSuspenseStatusId.AutoIncrementSeed = -1;
                this.columnClearingMemberSuspenseStatusId.AutoIncrementStep = -1;
                this.columnClearingMemberSuspenseStatusId.AllowDBNull = false;
                this.columnClearingMemberSuspenseStatusId.ReadOnly = true;
                this.columnBusinessDate.AllowDBNull = false;
                this.columnExchangeId.AllowDBNull = false;
                this.columnCMID.AllowDBNull = false;
                this.columnSuspenseOriginator.AllowDBNull = false;
                this.columnSuspenseOriginator.MaxLength = 1;
                this.columnSuspenseType.AllowDBNull = false;
                this.columnSuspenseType.MaxLength = 1;
                this.columnSuspenseTime.AllowDBNull = false;
                this.columnSuspenseConfirmed.AllowDBNull = false;
                this.columnSuspenseConfirmed.MaxLength = 1;
                this.columnActiveFlag.AllowDBNull = false;
                this.columnActiveFlag.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ClearingMemberSuspenseStatusRow NewClearingMemberSuspenseStatusRow() {
                return ((ClearingMemberSuspenseStatusRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ClearingMemberSuspenseStatusRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ClearingMemberSuspenseStatusRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ClearingMemberSuspenseStatusRowChanged != null)) {
                    this.ClearingMemberSuspenseStatusRowChanged(this, new ClearingMemberSuspenseStatusRowChangeEvent(((ClearingMemberSuspenseStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ClearingMemberSuspenseStatusRowChanging != null)) {
                    this.ClearingMemberSuspenseStatusRowChanging(this, new ClearingMemberSuspenseStatusRowChangeEvent(((ClearingMemberSuspenseStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ClearingMemberSuspenseStatusRowDeleted != null)) {
                    this.ClearingMemberSuspenseStatusRowDeleted(this, new ClearingMemberSuspenseStatusRowChangeEvent(((ClearingMemberSuspenseStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ClearingMemberSuspenseStatusRowDeleting != null)) {
                    this.ClearingMemberSuspenseStatusRowDeleting(this, new ClearingMemberSuspenseStatusRowChangeEvent(((ClearingMemberSuspenseStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveClearingMemberSuspenseStatusRow(ClearingMemberSuspenseStatusRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ClearingMemberSuspenseStatusDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ClearingHouseSuspenseDataTable : global::System.Data.TypedTableBase<ClearingHouseSuspenseRow> {
            
            private global::System.Data.DataColumn columnClearingHouseSuspenseId;
            
            private global::System.Data.DataColumn columnBusinessDate;
            
            private global::System.Data.DataColumn columnExchangeId;
            
            private global::System.Data.DataColumn columnSuspenseNo;
            
            private global::System.Data.DataColumn columnSuspenseTime;
            
            private global::System.Data.DataColumn columnSendTime;
            
            private global::System.Data.DataColumn columnCMID;
            
            private global::System.Data.DataColumn columnSuspenseType;
            
            private global::System.Data.DataColumn columnDescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ClearingHouseSuspenseDataTable() {
                this.TableName = "ClearingHouseSuspense";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ClearingHouseSuspenseDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected ClearingHouseSuspenseDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ClearingHouseSuspenseIdColumn {
                get {
                    return this.columnClearingHouseSuspenseId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BusinessDateColumn {
                get {
                    return this.columnBusinessDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ExchangeIdColumn {
                get {
                    return this.columnExchangeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SuspenseNoColumn {
                get {
                    return this.columnSuspenseNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SuspenseTimeColumn {
                get {
                    return this.columnSuspenseTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SendTimeColumn {
                get {
                    return this.columnSendTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CMIDColumn {
                get {
                    return this.columnCMID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SuspenseTypeColumn {
                get {
                    return this.columnSuspenseType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ClearingHouseSuspenseRow this[int index] {
                get {
                    return ((ClearingHouseSuspenseRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ClearingHouseSuspenseRowChangeEventHandler ClearingHouseSuspenseRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ClearingHouseSuspenseRowChangeEventHandler ClearingHouseSuspenseRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ClearingHouseSuspenseRowChangeEventHandler ClearingHouseSuspenseRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ClearingHouseSuspenseRowChangeEventHandler ClearingHouseSuspenseRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddClearingHouseSuspenseRow(ClearingHouseSuspenseRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ClearingHouseSuspenseRow AddClearingHouseSuspenseRow(System.DateTime BusinessDate, decimal ExchangeId, int SuspenseNo, System.DateTime SuspenseTime, System.DateTime SendTime, ClearingMemberRow parentClearingMemberRowByFK_ClearingHouseSuspense_ClearingMember, string SuspenseType, string Description) {
                ClearingHouseSuspenseRow rowClearingHouseSuspenseRow = ((ClearingHouseSuspenseRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        BusinessDate,
                        ExchangeId,
                        SuspenseNo,
                        SuspenseTime,
                        SendTime,
                        null,
                        SuspenseType,
                        Description};
                if ((parentClearingMemberRowByFK_ClearingHouseSuspense_ClearingMember != null)) {
                    columnValuesArray[6] = parentClearingMemberRowByFK_ClearingHouseSuspense_ClearingMember[3];
                }
                rowClearingHouseSuspenseRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowClearingHouseSuspenseRow);
                return rowClearingHouseSuspenseRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ClearingHouseSuspenseRow FindByBusinessDateExchangeIdSuspenseNo(System.DateTime BusinessDate, decimal ExchangeId, int SuspenseNo) {
                return ((ClearingHouseSuspenseRow)(this.Rows.Find(new object[] {
                            BusinessDate,
                            ExchangeId,
                            SuspenseNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ClearingHouseSuspenseDataTable cln = ((ClearingHouseSuspenseDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ClearingHouseSuspenseDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnClearingHouseSuspenseId = base.Columns["ClearingHouseSuspenseId"];
                this.columnBusinessDate = base.Columns["BusinessDate"];
                this.columnExchangeId = base.Columns["ExchangeId"];
                this.columnSuspenseNo = base.Columns["SuspenseNo"];
                this.columnSuspenseTime = base.Columns["SuspenseTime"];
                this.columnSendTime = base.Columns["SendTime"];
                this.columnCMID = base.Columns["CMID"];
                this.columnSuspenseType = base.Columns["SuspenseType"];
                this.columnDescription = base.Columns["Description"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnClearingHouseSuspenseId = new global::System.Data.DataColumn("ClearingHouseSuspenseId", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClearingHouseSuspenseId);
                this.columnBusinessDate = new global::System.Data.DataColumn("BusinessDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessDate);
                this.columnExchangeId = new global::System.Data.DataColumn("ExchangeId", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExchangeId);
                this.columnSuspenseNo = new global::System.Data.DataColumn("SuspenseNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuspenseNo);
                this.columnSuspenseTime = new global::System.Data.DataColumn("SuspenseTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuspenseTime);
                this.columnSendTime = new global::System.Data.DataColumn("SendTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSendTime);
                this.columnCMID = new global::System.Data.DataColumn("CMID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMID);
                this.columnSuspenseType = new global::System.Data.DataColumn("SuspenseType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuspenseType);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBusinessDate,
                                this.columnExchangeId,
                                this.columnSuspenseNo}, true));
                this.columnClearingHouseSuspenseId.AutoIncrement = true;
                this.columnClearingHouseSuspenseId.AutoIncrementSeed = -1;
                this.columnClearingHouseSuspenseId.AutoIncrementStep = -1;
                this.columnClearingHouseSuspenseId.AllowDBNull = false;
                this.columnClearingHouseSuspenseId.ReadOnly = true;
                this.columnBusinessDate.AllowDBNull = false;
                this.columnExchangeId.AllowDBNull = false;
                this.columnSuspenseNo.AllowDBNull = false;
                this.columnSuspenseTime.AllowDBNull = false;
                this.columnCMID.AllowDBNull = false;
                this.columnSuspenseType.AllowDBNull = false;
                this.columnSuspenseType.MaxLength = 1;
                this.columnDescription.MaxLength = 40;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ClearingHouseSuspenseRow NewClearingHouseSuspenseRow() {
                return ((ClearingHouseSuspenseRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ClearingHouseSuspenseRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ClearingHouseSuspenseRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ClearingHouseSuspenseRowChanged != null)) {
                    this.ClearingHouseSuspenseRowChanged(this, new ClearingHouseSuspenseRowChangeEvent(((ClearingHouseSuspenseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ClearingHouseSuspenseRowChanging != null)) {
                    this.ClearingHouseSuspenseRowChanging(this, new ClearingHouseSuspenseRowChangeEvent(((ClearingHouseSuspenseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ClearingHouseSuspenseRowDeleted != null)) {
                    this.ClearingHouseSuspenseRowDeleted(this, new ClearingHouseSuspenseRowChangeEvent(((ClearingHouseSuspenseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ClearingHouseSuspenseRowDeleting != null)) {
                    this.ClearingHouseSuspenseRowDeleting(this, new ClearingHouseSuspenseRowChangeEvent(((ClearingHouseSuspenseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveClearingHouseSuspenseRow(ClearingHouseSuspenseRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ClearingHouseSuspenseDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ClearingMemberDataTable : global::System.Data.TypedTableBase<ClearingMemberRow> {
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnApprovalStatus;
            
            private global::System.Data.DataColumn columnEffectiveStartDate;
            
            private global::System.Data.DataColumn columnCMID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnPPKP;
            
            private global::System.Data.DataColumn columnWebsite;
            
            private global::System.Data.DataColumn columnCMStatus;
            
            private global::System.Data.DataColumn columnAgreementNo;
            
            private global::System.Data.DataColumn columnAgreementDate;
            
            private global::System.Data.DataColumn columnExchangeStatus;
            
            private global::System.Data.DataColumn columnCertNo;
            
            private global::System.Data.DataColumn columnCertDate;
            
            private global::System.Data.DataColumn columnSPATraderNo;
            
            private global::System.Data.DataColumn columnSPATraderDate;
            
            private global::System.Data.DataColumn columnSPABrokerNo;
            
            private global::System.Data.DataColumn columnSPABrokerDate;
            
            private global::System.Data.DataColumn columnPALNLicense;
            
            private global::System.Data.DataColumn columnCompAnniversary;
            
            private global::System.Data.DataColumn columnCompImageID;
            
            private global::System.Data.DataColumn columnAgreementType;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnLastUpdatedBy;
            
            private global::System.Data.DataColumn columnLastUpdatedDate;
            
            private global::System.Data.DataColumn columnEffectiveEndDate;
            
            private global::System.Data.DataColumn columnApprovalDesc;
            
            private global::System.Data.DataColumn columnOriginalID;
            
            private global::System.Data.DataColumn columnActionFlag;
            
            private global::System.Data.DataColumn columnInitialMarginMultiplier;
            
            private global::System.Data.DataColumn columnMinReqInitialMarginIDR;
            
            private global::System.Data.DataColumn columnMinReqInitialMarginUSD;
            
            private global::System.Data.DataColumn columntypeMM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ClearingMemberDataTable() {
                this.TableName = "ClearingMember";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ClearingMemberDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected ClearingMemberDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ApprovalStatusColumn {
                get {
                    return this.columnApprovalStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EffectiveStartDateColumn {
                get {
                    return this.columnEffectiveStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CMIDColumn {
                get {
                    return this.columnCMID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PPKPColumn {
                get {
                    return this.columnPPKP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn WebsiteColumn {
                get {
                    return this.columnWebsite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CMStatusColumn {
                get {
                    return this.columnCMStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AgreementNoColumn {
                get {
                    return this.columnAgreementNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AgreementDateColumn {
                get {
                    return this.columnAgreementDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ExchangeStatusColumn {
                get {
                    return this.columnExchangeStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CertNoColumn {
                get {
                    return this.columnCertNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CertDateColumn {
                get {
                    return this.columnCertDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SPATraderNoColumn {
                get {
                    return this.columnSPATraderNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SPATraderDateColumn {
                get {
                    return this.columnSPATraderDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SPABrokerNoColumn {
                get {
                    return this.columnSPABrokerNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SPABrokerDateColumn {
                get {
                    return this.columnSPABrokerDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PALNLicenseColumn {
                get {
                    return this.columnPALNLicense;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CompAnniversaryColumn {
                get {
                    return this.columnCompAnniversary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CompImageIDColumn {
                get {
                    return this.columnCompImageID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AgreementTypeColumn {
                get {
                    return this.columnAgreementType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LastUpdatedByColumn {
                get {
                    return this.columnLastUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LastUpdatedDateColumn {
                get {
                    return this.columnLastUpdatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EffectiveEndDateColumn {
                get {
                    return this.columnEffectiveEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ApprovalDescColumn {
                get {
                    return this.columnApprovalDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OriginalIDColumn {
                get {
                    return this.columnOriginalID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ActionFlagColumn {
                get {
                    return this.columnActionFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn InitialMarginMultiplierColumn {
                get {
                    return this.columnInitialMarginMultiplier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MinReqInitialMarginIDRColumn {
                get {
                    return this.columnMinReqInitialMarginIDR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MinReqInitialMarginUSDColumn {
                get {
                    return this.columnMinReqInitialMarginUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn typeMMColumn {
                get {
                    return this.columntypeMM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ClearingMemberRow this[int index] {
                get {
                    return ((ClearingMemberRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ClearingMemberRowChangeEventHandler ClearingMemberRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ClearingMemberRowChangeEventHandler ClearingMemberRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ClearingMemberRowChangeEventHandler ClearingMemberRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ClearingMemberRowChangeEventHandler ClearingMemberRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddClearingMemberRow(ClearingMemberRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ClearingMemberRow AddClearingMemberRow(
                        string Code, 
                        string ApprovalStatus, 
                        System.DateTime EffectiveStartDate, 
                        string Name, 
                        string PPKP, 
                        string Website, 
                        string CMStatus, 
                        string AgreementNo, 
                        System.DateTime AgreementDate, 
                        string ExchangeStatus, 
                        string CertNo, 
                        System.DateTime CertDate, 
                        string SPATraderNo, 
                        System.DateTime SPATraderDate, 
                        string SPABrokerNo, 
                        System.DateTime SPABrokerDate, 
                        string PALNLicense, 
                        System.DateTime CompAnniversary, 
                        decimal CompImageID, 
                        string AgreementType, 
                        string CreatedBy, 
                        System.DateTime CreatedDate, 
                        string LastUpdatedBy, 
                        System.DateTime LastUpdatedDate, 
                        System.DateTime EffectiveEndDate, 
                        string ApprovalDesc, 
                        decimal OriginalID, 
                        string ActionFlag, 
                        decimal InitialMarginMultiplier, 
                        decimal MinReqInitialMarginIDR, 
                        decimal MinReqInitialMarginUSD, 
                        string typeMM) {
                ClearingMemberRow rowClearingMemberRow = ((ClearingMemberRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Code,
                        ApprovalStatus,
                        EffectiveStartDate,
                        null,
                        Name,
                        PPKP,
                        Website,
                        CMStatus,
                        AgreementNo,
                        AgreementDate,
                        ExchangeStatus,
                        CertNo,
                        CertDate,
                        SPATraderNo,
                        SPATraderDate,
                        SPABrokerNo,
                        SPABrokerDate,
                        PALNLicense,
                        CompAnniversary,
                        CompImageID,
                        AgreementType,
                        CreatedBy,
                        CreatedDate,
                        LastUpdatedBy,
                        LastUpdatedDate,
                        EffectiveEndDate,
                        ApprovalDesc,
                        OriginalID,
                        ActionFlag,
                        InitialMarginMultiplier,
                        MinReqInitialMarginIDR,
                        MinReqInitialMarginUSD,
                        typeMM};
                rowClearingMemberRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowClearingMemberRow);
                return rowClearingMemberRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ClearingMemberRow FindByCodeApprovalStatusEffectiveStartDate(string Code, string ApprovalStatus, System.DateTime EffectiveStartDate) {
                return ((ClearingMemberRow)(this.Rows.Find(new object[] {
                            Code,
                            ApprovalStatus,
                            EffectiveStartDate})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ClearingMemberDataTable cln = ((ClearingMemberDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ClearingMemberDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnCode = base.Columns["Code"];
                this.columnApprovalStatus = base.Columns["ApprovalStatus"];
                this.columnEffectiveStartDate = base.Columns["EffectiveStartDate"];
                this.columnCMID = base.Columns["CMID"];
                this.columnName = base.Columns["Name"];
                this.columnPPKP = base.Columns["PPKP"];
                this.columnWebsite = base.Columns["Website"];
                this.columnCMStatus = base.Columns["CMStatus"];
                this.columnAgreementNo = base.Columns["AgreementNo"];
                this.columnAgreementDate = base.Columns["AgreementDate"];
                this.columnExchangeStatus = base.Columns["ExchangeStatus"];
                this.columnCertNo = base.Columns["CertNo"];
                this.columnCertDate = base.Columns["CertDate"];
                this.columnSPATraderNo = base.Columns["SPATraderNo"];
                this.columnSPATraderDate = base.Columns["SPATraderDate"];
                this.columnSPABrokerNo = base.Columns["SPABrokerNo"];
                this.columnSPABrokerDate = base.Columns["SPABrokerDate"];
                this.columnPALNLicense = base.Columns["PALNLicense"];
                this.columnCompAnniversary = base.Columns["CompAnniversary"];
                this.columnCompImageID = base.Columns["CompImageID"];
                this.columnAgreementType = base.Columns["AgreementType"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnLastUpdatedBy = base.Columns["LastUpdatedBy"];
                this.columnLastUpdatedDate = base.Columns["LastUpdatedDate"];
                this.columnEffectiveEndDate = base.Columns["EffectiveEndDate"];
                this.columnApprovalDesc = base.Columns["ApprovalDesc"];
                this.columnOriginalID = base.Columns["OriginalID"];
                this.columnActionFlag = base.Columns["ActionFlag"];
                this.columnInitialMarginMultiplier = base.Columns["InitialMarginMultiplier"];
                this.columnMinReqInitialMarginIDR = base.Columns["MinReqInitialMarginIDR"];
                this.columnMinReqInitialMarginUSD = base.Columns["MinReqInitialMarginUSD"];
                this.columntypeMM = base.Columns["typeMM"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnApprovalStatus = new global::System.Data.DataColumn("ApprovalStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovalStatus);
                this.columnEffectiveStartDate = new global::System.Data.DataColumn("EffectiveStartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectiveStartDate);
                this.columnCMID = new global::System.Data.DataColumn("CMID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnPPKP = new global::System.Data.DataColumn("PPKP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPPKP);
                this.columnWebsite = new global::System.Data.DataColumn("Website", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWebsite);
                this.columnCMStatus = new global::System.Data.DataColumn("CMStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMStatus);
                this.columnAgreementNo = new global::System.Data.DataColumn("AgreementNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgreementNo);
                this.columnAgreementDate = new global::System.Data.DataColumn("AgreementDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgreementDate);
                this.columnExchangeStatus = new global::System.Data.DataColumn("ExchangeStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExchangeStatus);
                this.columnCertNo = new global::System.Data.DataColumn("CertNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCertNo);
                this.columnCertDate = new global::System.Data.DataColumn("CertDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCertDate);
                this.columnSPATraderNo = new global::System.Data.DataColumn("SPATraderNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPATraderNo);
                this.columnSPATraderDate = new global::System.Data.DataColumn("SPATraderDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPATraderDate);
                this.columnSPABrokerNo = new global::System.Data.DataColumn("SPABrokerNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPABrokerNo);
                this.columnSPABrokerDate = new global::System.Data.DataColumn("SPABrokerDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPABrokerDate);
                this.columnPALNLicense = new global::System.Data.DataColumn("PALNLicense", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPALNLicense);
                this.columnCompAnniversary = new global::System.Data.DataColumn("CompAnniversary", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompAnniversary);
                this.columnCompImageID = new global::System.Data.DataColumn("CompImageID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompImageID);
                this.columnAgreementType = new global::System.Data.DataColumn("AgreementType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgreementType);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnLastUpdatedBy = new global::System.Data.DataColumn("LastUpdatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdatedBy);
                this.columnLastUpdatedDate = new global::System.Data.DataColumn("LastUpdatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdatedDate);
                this.columnEffectiveEndDate = new global::System.Data.DataColumn("EffectiveEndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectiveEndDate);
                this.columnApprovalDesc = new global::System.Data.DataColumn("ApprovalDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovalDesc);
                this.columnOriginalID = new global::System.Data.DataColumn("OriginalID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalID);
                this.columnActionFlag = new global::System.Data.DataColumn("ActionFlag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActionFlag);
                this.columnInitialMarginMultiplier = new global::System.Data.DataColumn("InitialMarginMultiplier", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInitialMarginMultiplier);
                this.columnMinReqInitialMarginIDR = new global::System.Data.DataColumn("MinReqInitialMarginIDR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinReqInitialMarginIDR);
                this.columnMinReqInitialMarginUSD = new global::System.Data.DataColumn("MinReqInitialMarginUSD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinReqInitialMarginUSD);
                this.columntypeMM = new global::System.Data.DataColumn("typeMM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntypeMM);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCode,
                                this.columnApprovalStatus,
                                this.columnEffectiveStartDate}, true));
                this.columnCode.AllowDBNull = false;
                this.columnCode.MaxLength = 20;
                this.columnApprovalStatus.AllowDBNull = false;
                this.columnApprovalStatus.MaxLength = 1;
                this.columnEffectiveStartDate.AllowDBNull = false;
                this.columnCMID.AutoIncrement = true;
                this.columnCMID.AutoIncrementSeed = -1;
                this.columnCMID.AutoIncrementStep = -1;
                this.columnCMID.AllowDBNull = false;
                this.columnCMID.ReadOnly = true;
                this.columnName.MaxLength = 50;
                this.columnPPKP.MaxLength = 50;
                this.columnWebsite.MaxLength = 50;
                this.columnCMStatus.MaxLength = 1;
                this.columnAgreementNo.MaxLength = 100;
                this.columnExchangeStatus.MaxLength = 1;
                this.columnCertNo.MaxLength = 100;
                this.columnSPATraderNo.MaxLength = 100;
                this.columnSPABrokerNo.MaxLength = 100;
                this.columnPALNLicense.MaxLength = 100;
                this.columnAgreementType.MaxLength = 1;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 50;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnLastUpdatedBy.AllowDBNull = false;
                this.columnLastUpdatedBy.MaxLength = 50;
                this.columnLastUpdatedDate.AllowDBNull = false;
                this.columnApprovalDesc.MaxLength = 100;
                this.columnActionFlag.MaxLength = 1;
                this.columnInitialMarginMultiplier.AllowDBNull = false;
                this.columnMinReqInitialMarginIDR.AllowDBNull = false;
                this.columnMinReqInitialMarginUSD.AllowDBNull = false;
                this.columntypeMM.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ClearingMemberRow NewClearingMemberRow() {
                return ((ClearingMemberRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ClearingMemberRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ClearingMemberRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ClearingMemberRowChanged != null)) {
                    this.ClearingMemberRowChanged(this, new ClearingMemberRowChangeEvent(((ClearingMemberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ClearingMemberRowChanging != null)) {
                    this.ClearingMemberRowChanging(this, new ClearingMemberRowChangeEvent(((ClearingMemberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ClearingMemberRowDeleted != null)) {
                    this.ClearingMemberRowDeleted(this, new ClearingMemberRowChangeEvent(((ClearingMemberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ClearingMemberRowDeleting != null)) {
                    this.ClearingMemberRowDeleting(this, new ClearingMemberRowChangeEvent(((ClearingMemberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveClearingMemberRow(ClearingMemberRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ClearingMemberDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CommodityDataTable : global::System.Data.TypedTableBase<CommodityRow> {
            
            private global::System.Data.DataColumn columnProductID;
            
            private global::System.Data.DataColumn columnExchangeId;
            
            private global::System.Data.DataColumn columnEffectiveStartDate;
            
            private global::System.Data.DataColumn columnApprovalStatus;
            
            private global::System.Data.DataColumn columnCommodityCode;
            
            private global::System.Data.DataColumn columnCommodityID;
            
            private global::System.Data.DataColumn columnReffCommID;
            
            private global::System.Data.DataColumn columnUnit;
            
            private global::System.Data.DataColumn columnPEG;
            
            private global::System.Data.DataColumn columnVMIRCACalType;
            
            private global::System.Data.DataColumn columnCrossCurr;
            
            private global::System.Data.DataColumn columnSettlementFactor;
            
            private global::System.Data.DataColumn columnDayRef;
            
            private global::System.Data.DataColumn columnDivisor;
            
            private global::System.Data.DataColumn columnCommName;
            
            private global::System.Data.DataColumn columnMarginTender;
            
            private global::System.Data.DataColumn columnMarginSpot;
            
            private global::System.Data.DataColumn columnMarginRemote;
            
            private global::System.Data.DataColumn columnCalSpreadRemoteMargin;
            
            private global::System.Data.DataColumn columnCrossCurrProduct;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnHomeCurrencyID;
            
            private global::System.Data.DataColumn columnLastUpdatedBy;
            
            private global::System.Data.DataColumn columnLastUpdatedDate;
            
            private global::System.Data.DataColumn columnEffectiveEndDate;
            
            private global::System.Data.DataColumn columnApprovalDesc;
            
            private global::System.Data.DataColumn columnIsKIE;
            
            private global::System.Data.DataColumn columnSettlementType;
            
            private global::System.Data.DataColumn columnContractSize;
            
            private global::System.Data.DataColumn columnIsIncentive;
            
            private global::System.Data.DataColumn columnOriginalCommodityID;
            
            private global::System.Data.DataColumn columnActionFlag;
            
            private global::System.Data.DataColumn columnTenderReqType;
            
            private global::System.Data.DataColumn columnModeK1;
            
            private global::System.Data.DataColumn columnValueK1;
            
            private global::System.Data.DataColumn columnContractRefK1;
            
            private global::System.Data.DataColumn columnModeK2;
            
            private global::System.Data.DataColumn columnValueK2;
            
            private global::System.Data.DataColumn columnContractRefK2;
            
            private global::System.Data.DataColumn columnModeD;
            
            private global::System.Data.DataColumn columnValueD;
            
            private global::System.Data.DataColumn columnContractRefD;
            
            private global::System.Data.DataColumn columnModeIM;
            
            private global::System.Data.DataColumn columnPercentageSpotIM;
            
            private global::System.Data.DataColumn columnPercentageRemoteIM;
            
            private global::System.Data.DataColumn columnModeFee;
            
            private global::System.Data.DataColumn columnisMarketMaker;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CommodityDataTable() {
                this.TableName = "Commodity";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal CommodityDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected CommodityDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ProductIDColumn {
                get {
                    return this.columnProductID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ExchangeIdColumn {
                get {
                    return this.columnExchangeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EffectiveStartDateColumn {
                get {
                    return this.columnEffectiveStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ApprovalStatusColumn {
                get {
                    return this.columnApprovalStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CommodityCodeColumn {
                get {
                    return this.columnCommodityCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CommodityIDColumn {
                get {
                    return this.columnCommodityID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ReffCommIDColumn {
                get {
                    return this.columnReffCommID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn UnitColumn {
                get {
                    return this.columnUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PEGColumn {
                get {
                    return this.columnPEG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn VMIRCACalTypeColumn {
                get {
                    return this.columnVMIRCACalType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CrossCurrColumn {
                get {
                    return this.columnCrossCurr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SettlementFactorColumn {
                get {
                    return this.columnSettlementFactor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DayRefColumn {
                get {
                    return this.columnDayRef;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DivisorColumn {
                get {
                    return this.columnDivisor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CommNameColumn {
                get {
                    return this.columnCommName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MarginTenderColumn {
                get {
                    return this.columnMarginTender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MarginSpotColumn {
                get {
                    return this.columnMarginSpot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MarginRemoteColumn {
                get {
                    return this.columnMarginRemote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CalSpreadRemoteMarginColumn {
                get {
                    return this.columnCalSpreadRemoteMargin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CrossCurrProductColumn {
                get {
                    return this.columnCrossCurrProduct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn HomeCurrencyIDColumn {
                get {
                    return this.columnHomeCurrencyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LastUpdatedByColumn {
                get {
                    return this.columnLastUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LastUpdatedDateColumn {
                get {
                    return this.columnLastUpdatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EffectiveEndDateColumn {
                get {
                    return this.columnEffectiveEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ApprovalDescColumn {
                get {
                    return this.columnApprovalDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IsKIEColumn {
                get {
                    return this.columnIsKIE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SettlementTypeColumn {
                get {
                    return this.columnSettlementType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ContractSizeColumn {
                get {
                    return this.columnContractSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IsIncentiveColumn {
                get {
                    return this.columnIsIncentive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OriginalCommodityIDColumn {
                get {
                    return this.columnOriginalCommodityID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ActionFlagColumn {
                get {
                    return this.columnActionFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TenderReqTypeColumn {
                get {
                    return this.columnTenderReqType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ModeK1Column {
                get {
                    return this.columnModeK1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ValueK1Column {
                get {
                    return this.columnValueK1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ContractRefK1Column {
                get {
                    return this.columnContractRefK1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ModeK2Column {
                get {
                    return this.columnModeK2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ValueK2Column {
                get {
                    return this.columnValueK2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ContractRefK2Column {
                get {
                    return this.columnContractRefK2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ModeDColumn {
                get {
                    return this.columnModeD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ValueDColumn {
                get {
                    return this.columnValueD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ContractRefDColumn {
                get {
                    return this.columnContractRefD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ModeIMColumn {
                get {
                    return this.columnModeIM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PercentageSpotIMColumn {
                get {
                    return this.columnPercentageSpotIM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PercentageRemoteIMColumn {
                get {
                    return this.columnPercentageRemoteIM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ModeFeeColumn {
                get {
                    return this.columnModeFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn isMarketMakerColumn {
                get {
                    return this.columnisMarketMaker;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CommodityRow this[int index] {
                get {
                    return ((CommodityRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CommodityRowChangeEventHandler CommodityRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CommodityRowChangeEventHandler CommodityRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CommodityRowChangeEventHandler CommodityRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CommodityRowChangeEventHandler CommodityRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddCommodityRow(CommodityRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CommodityRow AddCommodityRow(
                        decimal ProductID, 
                        decimal ExchangeId, 
                        System.DateTime EffectiveStartDate, 
                        string ApprovalStatus, 
                        string CommodityCode, 
                        CommodityRow parentCommodityRowByR_416, 
                        string Unit, 
                        decimal PEG, 
                        string VMIRCACalType, 
                        string CrossCurr, 
                        string SettlementFactor, 
                        int DayRef, 
                        decimal Divisor, 
                        string CommName, 
                        decimal MarginTender, 
                        decimal MarginSpot, 
                        decimal MarginRemote, 
                        decimal CalSpreadRemoteMargin, 
                        string CrossCurrProduct, 
                        string CreatedBy, 
                        System.DateTime CreatedDate, 
                        decimal HomeCurrencyID, 
                        string LastUpdatedBy, 
                        System.DateTime LastUpdatedDate, 
                        System.DateTime EffectiveEndDate, 
                        string ApprovalDesc, 
                        string IsKIE, 
                        string SettlementType, 
                        decimal ContractSize, 
                        string IsIncentive, 
                        decimal OriginalCommodityID, 
                        string ActionFlag, 
                        string TenderReqType, 
                        string ModeK1, 
                        decimal ValueK1, 
                        decimal ContractRefK1, 
                        string ModeK2, 
                        decimal ValueK2, 
                        decimal ContractRefK2, 
                        string ModeD, 
                        decimal ValueD, 
                        decimal ContractRefD, 
                        string ModeIM, 
                        decimal PercentageSpotIM, 
                        decimal PercentageRemoteIM, 
                        string ModeFee, 
                        string isMarketMaker) {
                CommodityRow rowCommodityRow = ((CommodityRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ProductID,
                        ExchangeId,
                        EffectiveStartDate,
                        ApprovalStatus,
                        CommodityCode,
                        null,
                        null,
                        Unit,
                        PEG,
                        VMIRCACalType,
                        CrossCurr,
                        SettlementFactor,
                        DayRef,
                        Divisor,
                        CommName,
                        MarginTender,
                        MarginSpot,
                        MarginRemote,
                        CalSpreadRemoteMargin,
                        CrossCurrProduct,
                        CreatedBy,
                        CreatedDate,
                        HomeCurrencyID,
                        LastUpdatedBy,
                        LastUpdatedDate,
                        EffectiveEndDate,
                        ApprovalDesc,
                        IsKIE,
                        SettlementType,
                        ContractSize,
                        IsIncentive,
                        OriginalCommodityID,
                        ActionFlag,
                        TenderReqType,
                        ModeK1,
                        ValueK1,
                        ContractRefK1,
                        ModeK2,
                        ValueK2,
                        ContractRefK2,
                        ModeD,
                        ValueD,
                        ContractRefD,
                        ModeIM,
                        PercentageSpotIM,
                        PercentageRemoteIM,
                        ModeFee,
                        isMarketMaker};
                if ((parentCommodityRowByR_416 != null)) {
                    columnValuesArray[6] = parentCommodityRowByR_416[5];
                }
                rowCommodityRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCommodityRow);
                return rowCommodityRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CommodityRow FindByProductIDExchangeIdEffectiveStartDateApprovalStatus(decimal ProductID, decimal ExchangeId, System.DateTime EffectiveStartDate, string ApprovalStatus) {
                return ((CommodityRow)(this.Rows.Find(new object[] {
                            ProductID,
                            ExchangeId,
                            EffectiveStartDate,
                            ApprovalStatus})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CommodityDataTable cln = ((CommodityDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CommodityDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnProductID = base.Columns["ProductID"];
                this.columnExchangeId = base.Columns["ExchangeId"];
                this.columnEffectiveStartDate = base.Columns["EffectiveStartDate"];
                this.columnApprovalStatus = base.Columns["ApprovalStatus"];
                this.columnCommodityCode = base.Columns["CommodityCode"];
                this.columnCommodityID = base.Columns["CommodityID"];
                this.columnReffCommID = base.Columns["ReffCommID"];
                this.columnUnit = base.Columns["Unit"];
                this.columnPEG = base.Columns["PEG"];
                this.columnVMIRCACalType = base.Columns["VMIRCACalType"];
                this.columnCrossCurr = base.Columns["CrossCurr"];
                this.columnSettlementFactor = base.Columns["SettlementFactor"];
                this.columnDayRef = base.Columns["DayRef"];
                this.columnDivisor = base.Columns["Divisor"];
                this.columnCommName = base.Columns["CommName"];
                this.columnMarginTender = base.Columns["MarginTender"];
                this.columnMarginSpot = base.Columns["MarginSpot"];
                this.columnMarginRemote = base.Columns["MarginRemote"];
                this.columnCalSpreadRemoteMargin = base.Columns["CalSpreadRemoteMargin"];
                this.columnCrossCurrProduct = base.Columns["CrossCurrProduct"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnHomeCurrencyID = base.Columns["HomeCurrencyID"];
                this.columnLastUpdatedBy = base.Columns["LastUpdatedBy"];
                this.columnLastUpdatedDate = base.Columns["LastUpdatedDate"];
                this.columnEffectiveEndDate = base.Columns["EffectiveEndDate"];
                this.columnApprovalDesc = base.Columns["ApprovalDesc"];
                this.columnIsKIE = base.Columns["IsKIE"];
                this.columnSettlementType = base.Columns["SettlementType"];
                this.columnContractSize = base.Columns["ContractSize"];
                this.columnIsIncentive = base.Columns["IsIncentive"];
                this.columnOriginalCommodityID = base.Columns["OriginalCommodityID"];
                this.columnActionFlag = base.Columns["ActionFlag"];
                this.columnTenderReqType = base.Columns["TenderReqType"];
                this.columnModeK1 = base.Columns["ModeK1"];
                this.columnValueK1 = base.Columns["ValueK1"];
                this.columnContractRefK1 = base.Columns["ContractRefK1"];
                this.columnModeK2 = base.Columns["ModeK2"];
                this.columnValueK2 = base.Columns["ValueK2"];
                this.columnContractRefK2 = base.Columns["ContractRefK2"];
                this.columnModeD = base.Columns["ModeD"];
                this.columnValueD = base.Columns["ValueD"];
                this.columnContractRefD = base.Columns["ContractRefD"];
                this.columnModeIM = base.Columns["ModeIM"];
                this.columnPercentageSpotIM = base.Columns["PercentageSpotIM"];
                this.columnPercentageRemoteIM = base.Columns["PercentageRemoteIM"];
                this.columnModeFee = base.Columns["ModeFee"];
                this.columnisMarketMaker = base.Columns["isMarketMaker"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnProductID = new global::System.Data.DataColumn("ProductID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductID);
                this.columnExchangeId = new global::System.Data.DataColumn("ExchangeId", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExchangeId);
                this.columnEffectiveStartDate = new global::System.Data.DataColumn("EffectiveStartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectiveStartDate);
                this.columnApprovalStatus = new global::System.Data.DataColumn("ApprovalStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovalStatus);
                this.columnCommodityCode = new global::System.Data.DataColumn("CommodityCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommodityCode);
                this.columnCommodityID = new global::System.Data.DataColumn("CommodityID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommodityID);
                this.columnReffCommID = new global::System.Data.DataColumn("ReffCommID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReffCommID);
                this.columnUnit = new global::System.Data.DataColumn("Unit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit);
                this.columnPEG = new global::System.Data.DataColumn("PEG", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPEG);
                this.columnVMIRCACalType = new global::System.Data.DataColumn("VMIRCACalType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVMIRCACalType);
                this.columnCrossCurr = new global::System.Data.DataColumn("CrossCurr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCrossCurr);
                this.columnSettlementFactor = new global::System.Data.DataColumn("SettlementFactor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSettlementFactor);
                this.columnDayRef = new global::System.Data.DataColumn("DayRef", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDayRef);
                this.columnDivisor = new global::System.Data.DataColumn("Divisor", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDivisor);
                this.columnCommName = new global::System.Data.DataColumn("CommName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommName);
                this.columnMarginTender = new global::System.Data.DataColumn("MarginTender", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarginTender);
                this.columnMarginSpot = new global::System.Data.DataColumn("MarginSpot", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarginSpot);
                this.columnMarginRemote = new global::System.Data.DataColumn("MarginRemote", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarginRemote);
                this.columnCalSpreadRemoteMargin = new global::System.Data.DataColumn("CalSpreadRemoteMargin", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCalSpreadRemoteMargin);
                this.columnCrossCurrProduct = new global::System.Data.DataColumn("CrossCurrProduct", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCrossCurrProduct);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnHomeCurrencyID = new global::System.Data.DataColumn("HomeCurrencyID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHomeCurrencyID);
                this.columnLastUpdatedBy = new global::System.Data.DataColumn("LastUpdatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdatedBy);
                this.columnLastUpdatedDate = new global::System.Data.DataColumn("LastUpdatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdatedDate);
                this.columnEffectiveEndDate = new global::System.Data.DataColumn("EffectiveEndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectiveEndDate);
                this.columnApprovalDesc = new global::System.Data.DataColumn("ApprovalDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovalDesc);
                this.columnIsKIE = new global::System.Data.DataColumn("IsKIE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsKIE);
                this.columnSettlementType = new global::System.Data.DataColumn("SettlementType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSettlementType);
                this.columnContractSize = new global::System.Data.DataColumn("ContractSize", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractSize);
                this.columnIsIncentive = new global::System.Data.DataColumn("IsIncentive", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsIncentive);
                this.columnOriginalCommodityID = new global::System.Data.DataColumn("OriginalCommodityID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalCommodityID);
                this.columnActionFlag = new global::System.Data.DataColumn("ActionFlag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActionFlag);
                this.columnTenderReqType = new global::System.Data.DataColumn("TenderReqType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenderReqType);
                this.columnModeK1 = new global::System.Data.DataColumn("ModeK1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModeK1);
                this.columnValueK1 = new global::System.Data.DataColumn("ValueK1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueK1);
                this.columnContractRefK1 = new global::System.Data.DataColumn("ContractRefK1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractRefK1);
                this.columnModeK2 = new global::System.Data.DataColumn("ModeK2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModeK2);
                this.columnValueK2 = new global::System.Data.DataColumn("ValueK2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueK2);
                this.columnContractRefK2 = new global::System.Data.DataColumn("ContractRefK2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractRefK2);
                this.columnModeD = new global::System.Data.DataColumn("ModeD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModeD);
                this.columnValueD = new global::System.Data.DataColumn("ValueD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueD);
                this.columnContractRefD = new global::System.Data.DataColumn("ContractRefD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractRefD);
                this.columnModeIM = new global::System.Data.DataColumn("ModeIM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModeIM);
                this.columnPercentageSpotIM = new global::System.Data.DataColumn("PercentageSpotIM", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPercentageSpotIM);
                this.columnPercentageRemoteIM = new global::System.Data.DataColumn("PercentageRemoteIM", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPercentageRemoteIM);
                this.columnModeFee = new global::System.Data.DataColumn("ModeFee", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModeFee);
                this.columnisMarketMaker = new global::System.Data.DataColumn("isMarketMaker", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisMarketMaker);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProductID,
                                this.columnExchangeId,
                                this.columnEffectiveStartDate,
                                this.columnApprovalStatus}, true));
                this.columnProductID.AllowDBNull = false;
                this.columnExchangeId.AllowDBNull = false;
                this.columnEffectiveStartDate.AllowDBNull = false;
                this.columnApprovalStatus.AllowDBNull = false;
                this.columnApprovalStatus.MaxLength = 1;
                this.columnCommodityCode.AllowDBNull = false;
                this.columnCommodityCode.MaxLength = 20;
                this.columnCommodityID.AutoIncrement = true;
                this.columnCommodityID.AutoIncrementSeed = -1;
                this.columnCommodityID.AutoIncrementStep = -1;
                this.columnCommodityID.AllowDBNull = false;
                this.columnCommodityID.ReadOnly = true;
                this.columnUnit.MaxLength = 20;
                this.columnVMIRCACalType.MaxLength = 1;
                this.columnCrossCurr.MaxLength = 3;
                this.columnSettlementFactor.MaxLength = 20;
                this.columnCommName.MaxLength = 50;
                this.columnCrossCurrProduct.MaxLength = 3;
                this.columnCreatedBy.MaxLength = 50;
                this.columnLastUpdatedBy.MaxLength = 50;
                this.columnApprovalDesc.MaxLength = 100;
                this.columnIsKIE.MaxLength = 1;
                this.columnSettlementType.MaxLength = 20;
                this.columnIsIncentive.MaxLength = 1;
                this.columnActionFlag.MaxLength = 1;
                this.columnTenderReqType.MaxLength = 1;
                this.columnModeK1.MaxLength = 3;
                this.columnModeK2.MaxLength = 3;
                this.columnModeD.MaxLength = 3;
                this.columnModeIM.MaxLength = 3;
                this.columnModeFee.MaxLength = 3;
                this.columnisMarketMaker.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CommodityRow NewCommodityRow() {
                return ((CommodityRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CommodityRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CommodityRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CommodityRowChanged != null)) {
                    this.CommodityRowChanged(this, new CommodityRowChangeEvent(((CommodityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CommodityRowChanging != null)) {
                    this.CommodityRowChanging(this, new CommodityRowChangeEvent(((CommodityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CommodityRowDeleted != null)) {
                    this.CommodityRowDeleted(this, new CommodityRowChangeEvent(((CommodityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CommodityRowDeleting != null)) {
                    this.CommodityRowDeleting(this, new CommodityRowChangeEvent(((CommodityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveCommodityRow(CommodityRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CommodityDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ContractDataTable : global::System.Data.TypedTableBase<ContractRow> {
            
            private global::System.Data.DataColumn columnCommodityID;
            
            private global::System.Data.DataColumn columnContractMonth;
            
            private global::System.Data.DataColumn columnContractYear;
            
            private global::System.Data.DataColumn columnApprovalStatus;
            
            private global::System.Data.DataColumn columnEffectiveStartDate;
            
            private global::System.Data.DataColumn columnContractID;
            
            private global::System.Data.DataColumn columnContractSize;
            
            private global::System.Data.DataColumn columnSettlementType;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnUnit;
            
            private global::System.Data.DataColumn columnStartDate;
            
            private global::System.Data.DataColumn columnEndSpot;
            
            private global::System.Data.DataColumn columnStartSpot;
            
            private global::System.Data.DataColumn columnPEG;
            
            private global::System.Data.DataColumn columnVMIRCACalType;
            
            private global::System.Data.DataColumn columnSettlementFactor;
            
            private global::System.Data.DataColumn columnDayRef;
            
            private global::System.Data.DataColumn columnDivisor;
            
            private global::System.Data.DataColumn columnMarginTender;
            
            private global::System.Data.DataColumn columnMarginSpot;
            
            private global::System.Data.DataColumn columnMarginRemote;
            
            private global::System.Data.DataColumn columnCalSpreadRemoteMargin;
            
            private global::System.Data.DataColumn columnIsKIE;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnLastUpdatedBy;
            
            private global::System.Data.DataColumn columnLastUpdatedDate;
            
            private global::System.Data.DataColumn columnEffectiveEndDate;
            
            private global::System.Data.DataColumn columnApprovalDesc;
            
            private global::System.Data.DataColumn columnHomeCurrencyID;
            
            private global::System.Data.DataColumn columnCrossCurr;
            
            private global::System.Data.DataColumn columnCrossCurrProduct;
            
            private global::System.Data.DataColumn columnOriginalContractID;
            
            private global::System.Data.DataColumn columnActionFlag;
            
            private global::System.Data.DataColumn columnTenderReqType;
            
            private global::System.Data.DataColumn columnSubCategoryID;
            
            private global::System.Data.DataColumn columnModeK1;
            
            private global::System.Data.DataColumn columnValueK1;
            
            private global::System.Data.DataColumn columnContractRefK1;
            
            private global::System.Data.DataColumn columnModeK2;
            
            private global::System.Data.DataColumn columnValueK2;
            
            private global::System.Data.DataColumn columnContractRefK2;
            
            private global::System.Data.DataColumn columnModeD;
            
            private global::System.Data.DataColumn columnValueD;
            
            private global::System.Data.DataColumn columnContractRefD;
            
            private global::System.Data.DataColumn columnModeIM;
            
            private global::System.Data.DataColumn columnPercentageSpotIM;
            
            private global::System.Data.DataColumn columnPercentageRemoteIM;
            
            private global::System.Data.DataColumn columnModeFee;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ContractDataTable() {
                this.TableName = "Contract";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ContractDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected ContractDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CommodityIDColumn {
                get {
                    return this.columnCommodityID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ContractMonthColumn {
                get {
                    return this.columnContractMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ContractYearColumn {
                get {
                    return this.columnContractYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ApprovalStatusColumn {
                get {
                    return this.columnApprovalStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EffectiveStartDateColumn {
                get {
                    return this.columnEffectiveStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ContractIDColumn {
                get {
                    return this.columnContractID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ContractSizeColumn {
                get {
                    return this.columnContractSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SettlementTypeColumn {
                get {
                    return this.columnSettlementType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn UnitColumn {
                get {
                    return this.columnUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn StartDateColumn {
                get {
                    return this.columnStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EndSpotColumn {
                get {
                    return this.columnEndSpot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn StartSpotColumn {
                get {
                    return this.columnStartSpot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PEGColumn {
                get {
                    return this.columnPEG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn VMIRCACalTypeColumn {
                get {
                    return this.columnVMIRCACalType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SettlementFactorColumn {
                get {
                    return this.columnSettlementFactor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DayRefColumn {
                get {
                    return this.columnDayRef;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DivisorColumn {
                get {
                    return this.columnDivisor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MarginTenderColumn {
                get {
                    return this.columnMarginTender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MarginSpotColumn {
                get {
                    return this.columnMarginSpot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MarginRemoteColumn {
                get {
                    return this.columnMarginRemote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CalSpreadRemoteMarginColumn {
                get {
                    return this.columnCalSpreadRemoteMargin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IsKIEColumn {
                get {
                    return this.columnIsKIE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LastUpdatedByColumn {
                get {
                    return this.columnLastUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LastUpdatedDateColumn {
                get {
                    return this.columnLastUpdatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EffectiveEndDateColumn {
                get {
                    return this.columnEffectiveEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ApprovalDescColumn {
                get {
                    return this.columnApprovalDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn HomeCurrencyIDColumn {
                get {
                    return this.columnHomeCurrencyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CrossCurrColumn {
                get {
                    return this.columnCrossCurr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CrossCurrProductColumn {
                get {
                    return this.columnCrossCurrProduct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OriginalContractIDColumn {
                get {
                    return this.columnOriginalContractID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ActionFlagColumn {
                get {
                    return this.columnActionFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TenderReqTypeColumn {
                get {
                    return this.columnTenderReqType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SubCategoryIDColumn {
                get {
                    return this.columnSubCategoryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ModeK1Column {
                get {
                    return this.columnModeK1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ValueK1Column {
                get {
                    return this.columnValueK1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ContractRefK1Column {
                get {
                    return this.columnContractRefK1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ModeK2Column {
                get {
                    return this.columnModeK2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ValueK2Column {
                get {
                    return this.columnValueK2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ContractRefK2Column {
                get {
                    return this.columnContractRefK2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ModeDColumn {
                get {
                    return this.columnModeD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ValueDColumn {
                get {
                    return this.columnValueD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ContractRefDColumn {
                get {
                    return this.columnContractRefD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ModeIMColumn {
                get {
                    return this.columnModeIM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PercentageSpotIMColumn {
                get {
                    return this.columnPercentageSpotIM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PercentageRemoteIMColumn {
                get {
                    return this.columnPercentageRemoteIM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ModeFeeColumn {
                get {
                    return this.columnModeFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ContractRow this[int index] {
                get {
                    return ((ContractRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ContractRowChangeEventHandler ContractRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ContractRowChangeEventHandler ContractRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ContractRowChangeEventHandler ContractRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ContractRowChangeEventHandler ContractRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddContractRow(ContractRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ContractRow AddContractRow(
                        decimal CommodityID, 
                        int ContractMonth, 
                        int ContractYear, 
                        string ApprovalStatus, 
                        System.DateTime EffectiveStartDate, 
                        decimal ContractSize, 
                        string SettlementType, 
                        string Description, 
                        string Unit, 
                        System.DateTime StartDate, 
                        System.DateTime EndSpot, 
                        System.DateTime StartSpot, 
                        decimal PEG, 
                        string VMIRCACalType, 
                        string SettlementFactor, 
                        int DayRef, 
                        decimal Divisor, 
                        decimal MarginTender, 
                        decimal MarginSpot, 
                        decimal MarginRemote, 
                        decimal CalSpreadRemoteMargin, 
                        string IsKIE, 
                        string CreatedBy, 
                        System.DateTime CreatedDate, 
                        string LastUpdatedBy, 
                        System.DateTime LastUpdatedDate, 
                        System.DateTime EffectiveEndDate, 
                        string ApprovalDesc, 
                        decimal HomeCurrencyID, 
                        string CrossCurr, 
                        string CrossCurrProduct, 
                        decimal OriginalContractID, 
                        string ActionFlag, 
                        string TenderReqType, 
                        decimal SubCategoryID, 
                        string ModeK1, 
                        decimal ValueK1, 
                        decimal ContractRefK1, 
                        string ModeK2, 
                        decimal ValueK2, 
                        decimal ContractRefK2, 
                        string ModeD, 
                        decimal ValueD, 
                        decimal ContractRefD, 
                        string ModeIM, 
                        decimal PercentageSpotIM, 
                        decimal PercentageRemoteIM, 
                        string ModeFee) {
                ContractRow rowContractRow = ((ContractRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CommodityID,
                        ContractMonth,
                        ContractYear,
                        ApprovalStatus,
                        EffectiveStartDate,
                        null,
                        ContractSize,
                        SettlementType,
                        Description,
                        Unit,
                        StartDate,
                        EndSpot,
                        StartSpot,
                        PEG,
                        VMIRCACalType,
                        SettlementFactor,
                        DayRef,
                        Divisor,
                        MarginTender,
                        MarginSpot,
                        MarginRemote,
                        CalSpreadRemoteMargin,
                        IsKIE,
                        CreatedBy,
                        CreatedDate,
                        LastUpdatedBy,
                        LastUpdatedDate,
                        EffectiveEndDate,
                        ApprovalDesc,
                        HomeCurrencyID,
                        CrossCurr,
                        CrossCurrProduct,
                        OriginalContractID,
                        ActionFlag,
                        TenderReqType,
                        SubCategoryID,
                        ModeK1,
                        ValueK1,
                        ContractRefK1,
                        ModeK2,
                        ValueK2,
                        ContractRefK2,
                        ModeD,
                        ValueD,
                        ContractRefD,
                        ModeIM,
                        PercentageSpotIM,
                        PercentageRemoteIM,
                        ModeFee};
                rowContractRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowContractRow);
                return rowContractRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ContractRow FindByCommodityIDContractMonthContractYearApprovalStatusEffectiveStartDate(decimal CommodityID, int ContractMonth, int ContractYear, string ApprovalStatus, System.DateTime EffectiveStartDate) {
                return ((ContractRow)(this.Rows.Find(new object[] {
                            CommodityID,
                            ContractMonth,
                            ContractYear,
                            ApprovalStatus,
                            EffectiveStartDate})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ContractDataTable cln = ((ContractDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ContractDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnCommodityID = base.Columns["CommodityID"];
                this.columnContractMonth = base.Columns["ContractMonth"];
                this.columnContractYear = base.Columns["ContractYear"];
                this.columnApprovalStatus = base.Columns["ApprovalStatus"];
                this.columnEffectiveStartDate = base.Columns["EffectiveStartDate"];
                this.columnContractID = base.Columns["ContractID"];
                this.columnContractSize = base.Columns["ContractSize"];
                this.columnSettlementType = base.Columns["SettlementType"];
                this.columnDescription = base.Columns["Description"];
                this.columnUnit = base.Columns["Unit"];
                this.columnStartDate = base.Columns["StartDate"];
                this.columnEndSpot = base.Columns["EndSpot"];
                this.columnStartSpot = base.Columns["StartSpot"];
                this.columnPEG = base.Columns["PEG"];
                this.columnVMIRCACalType = base.Columns["VMIRCACalType"];
                this.columnSettlementFactor = base.Columns["SettlementFactor"];
                this.columnDayRef = base.Columns["DayRef"];
                this.columnDivisor = base.Columns["Divisor"];
                this.columnMarginTender = base.Columns["MarginTender"];
                this.columnMarginSpot = base.Columns["MarginSpot"];
                this.columnMarginRemote = base.Columns["MarginRemote"];
                this.columnCalSpreadRemoteMargin = base.Columns["CalSpreadRemoteMargin"];
                this.columnIsKIE = base.Columns["IsKIE"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnLastUpdatedBy = base.Columns["LastUpdatedBy"];
                this.columnLastUpdatedDate = base.Columns["LastUpdatedDate"];
                this.columnEffectiveEndDate = base.Columns["EffectiveEndDate"];
                this.columnApprovalDesc = base.Columns["ApprovalDesc"];
                this.columnHomeCurrencyID = base.Columns["HomeCurrencyID"];
                this.columnCrossCurr = base.Columns["CrossCurr"];
                this.columnCrossCurrProduct = base.Columns["CrossCurrProduct"];
                this.columnOriginalContractID = base.Columns["OriginalContractID"];
                this.columnActionFlag = base.Columns["ActionFlag"];
                this.columnTenderReqType = base.Columns["TenderReqType"];
                this.columnSubCategoryID = base.Columns["SubCategoryID"];
                this.columnModeK1 = base.Columns["ModeK1"];
                this.columnValueK1 = base.Columns["ValueK1"];
                this.columnContractRefK1 = base.Columns["ContractRefK1"];
                this.columnModeK2 = base.Columns["ModeK2"];
                this.columnValueK2 = base.Columns["ValueK2"];
                this.columnContractRefK2 = base.Columns["ContractRefK2"];
                this.columnModeD = base.Columns["ModeD"];
                this.columnValueD = base.Columns["ValueD"];
                this.columnContractRefD = base.Columns["ContractRefD"];
                this.columnModeIM = base.Columns["ModeIM"];
                this.columnPercentageSpotIM = base.Columns["PercentageSpotIM"];
                this.columnPercentageRemoteIM = base.Columns["PercentageRemoteIM"];
                this.columnModeFee = base.Columns["ModeFee"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnCommodityID = new global::System.Data.DataColumn("CommodityID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommodityID);
                this.columnContractMonth = new global::System.Data.DataColumn("ContractMonth", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractMonth);
                this.columnContractYear = new global::System.Data.DataColumn("ContractYear", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractYear);
                this.columnApprovalStatus = new global::System.Data.DataColumn("ApprovalStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovalStatus);
                this.columnEffectiveStartDate = new global::System.Data.DataColumn("EffectiveStartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectiveStartDate);
                this.columnContractID = new global::System.Data.DataColumn("ContractID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractID);
                this.columnContractSize = new global::System.Data.DataColumn("ContractSize", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractSize);
                this.columnSettlementType = new global::System.Data.DataColumn("SettlementType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSettlementType);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnUnit = new global::System.Data.DataColumn("Unit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit);
                this.columnStartDate = new global::System.Data.DataColumn("StartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartDate);
                this.columnEndSpot = new global::System.Data.DataColumn("EndSpot", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndSpot);
                this.columnStartSpot = new global::System.Data.DataColumn("StartSpot", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartSpot);
                this.columnPEG = new global::System.Data.DataColumn("PEG", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPEG);
                this.columnVMIRCACalType = new global::System.Data.DataColumn("VMIRCACalType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVMIRCACalType);
                this.columnSettlementFactor = new global::System.Data.DataColumn("SettlementFactor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSettlementFactor);
                this.columnDayRef = new global::System.Data.DataColumn("DayRef", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDayRef);
                this.columnDivisor = new global::System.Data.DataColumn("Divisor", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDivisor);
                this.columnMarginTender = new global::System.Data.DataColumn("MarginTender", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarginTender);
                this.columnMarginSpot = new global::System.Data.DataColumn("MarginSpot", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarginSpot);
                this.columnMarginRemote = new global::System.Data.DataColumn("MarginRemote", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarginRemote);
                this.columnCalSpreadRemoteMargin = new global::System.Data.DataColumn("CalSpreadRemoteMargin", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCalSpreadRemoteMargin);
                this.columnIsKIE = new global::System.Data.DataColumn("IsKIE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsKIE);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnLastUpdatedBy = new global::System.Data.DataColumn("LastUpdatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdatedBy);
                this.columnLastUpdatedDate = new global::System.Data.DataColumn("LastUpdatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdatedDate);
                this.columnEffectiveEndDate = new global::System.Data.DataColumn("EffectiveEndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectiveEndDate);
                this.columnApprovalDesc = new global::System.Data.DataColumn("ApprovalDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovalDesc);
                this.columnHomeCurrencyID = new global::System.Data.DataColumn("HomeCurrencyID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHomeCurrencyID);
                this.columnCrossCurr = new global::System.Data.DataColumn("CrossCurr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCrossCurr);
                this.columnCrossCurrProduct = new global::System.Data.DataColumn("CrossCurrProduct", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCrossCurrProduct);
                this.columnOriginalContractID = new global::System.Data.DataColumn("OriginalContractID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalContractID);
                this.columnActionFlag = new global::System.Data.DataColumn("ActionFlag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActionFlag);
                this.columnTenderReqType = new global::System.Data.DataColumn("TenderReqType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenderReqType);
                this.columnSubCategoryID = new global::System.Data.DataColumn("SubCategoryID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubCategoryID);
                this.columnModeK1 = new global::System.Data.DataColumn("ModeK1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModeK1);
                this.columnValueK1 = new global::System.Data.DataColumn("ValueK1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueK1);
                this.columnContractRefK1 = new global::System.Data.DataColumn("ContractRefK1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractRefK1);
                this.columnModeK2 = new global::System.Data.DataColumn("ModeK2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModeK2);
                this.columnValueK2 = new global::System.Data.DataColumn("ValueK2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueK2);
                this.columnContractRefK2 = new global::System.Data.DataColumn("ContractRefK2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractRefK2);
                this.columnModeD = new global::System.Data.DataColumn("ModeD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModeD);
                this.columnValueD = new global::System.Data.DataColumn("ValueD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueD);
                this.columnContractRefD = new global::System.Data.DataColumn("ContractRefD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractRefD);
                this.columnModeIM = new global::System.Data.DataColumn("ModeIM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModeIM);
                this.columnPercentageSpotIM = new global::System.Data.DataColumn("PercentageSpotIM", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPercentageSpotIM);
                this.columnPercentageRemoteIM = new global::System.Data.DataColumn("PercentageRemoteIM", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPercentageRemoteIM);
                this.columnModeFee = new global::System.Data.DataColumn("ModeFee", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModeFee);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCommodityID,
                                this.columnContractMonth,
                                this.columnContractYear,
                                this.columnApprovalStatus,
                                this.columnEffectiveStartDate}, true));
                this.columnCommodityID.AllowDBNull = false;
                this.columnContractMonth.AllowDBNull = false;
                this.columnContractYear.AllowDBNull = false;
                this.columnApprovalStatus.AllowDBNull = false;
                this.columnApprovalStatus.MaxLength = 1;
                this.columnEffectiveStartDate.AllowDBNull = false;
                this.columnContractID.AutoIncrement = true;
                this.columnContractID.AutoIncrementSeed = -1;
                this.columnContractID.AutoIncrementStep = -1;
                this.columnContractID.AllowDBNull = false;
                this.columnContractID.ReadOnly = true;
                this.columnContractSize.AllowDBNull = false;
                this.columnSettlementType.AllowDBNull = false;
                this.columnSettlementType.MaxLength = 1;
                this.columnDescription.MaxLength = 500;
                this.columnUnit.AllowDBNull = false;
                this.columnUnit.MaxLength = 20;
                this.columnStartDate.AllowDBNull = false;
                this.columnEndSpot.AllowDBNull = false;
                this.columnStartSpot.AllowDBNull = false;
                this.columnVMIRCACalType.MaxLength = 1;
                this.columnSettlementFactor.MaxLength = 20;
                this.columnMarginSpot.AllowDBNull = false;
                this.columnMarginRemote.AllowDBNull = false;
                this.columnIsKIE.AllowDBNull = false;
                this.columnIsKIE.MaxLength = 1;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 50;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnLastUpdatedBy.AllowDBNull = false;
                this.columnLastUpdatedBy.MaxLength = 50;
                this.columnLastUpdatedDate.AllowDBNull = false;
                this.columnApprovalDesc.MaxLength = 100;
                this.columnCrossCurr.AllowDBNull = false;
                this.columnCrossCurr.MaxLength = 3;
                this.columnCrossCurrProduct.MaxLength = 3;
                this.columnActionFlag.MaxLength = 1;
                this.columnTenderReqType.MaxLength = 1;
                this.columnModeK1.MaxLength = 3;
                this.columnModeK2.MaxLength = 3;
                this.columnModeD.MaxLength = 3;
                this.columnModeIM.MaxLength = 3;
                this.columnModeFee.MaxLength = 3;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ContractRow NewContractRow() {
                return ((ContractRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ContractRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ContractRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ContractRowChanged != null)) {
                    this.ContractRowChanged(this, new ContractRowChangeEvent(((ContractRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ContractRowChanging != null)) {
                    this.ContractRowChanging(this, new ContractRowChangeEvent(((ContractRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ContractRowDeleted != null)) {
                    this.ContractRowDeleted(this, new ContractRowChangeEvent(((ContractRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ContractRowDeleting != null)) {
                    this.ContractRowDeleting(this, new ContractRowChangeEvent(((ContractRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveContractRow(ContractRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ContractDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SubCategoryDataTable : global::System.Data.TypedTableBase<SubCategoryRow> {
            
            private global::System.Data.DataColumn columnSubCategoryCode;
            
            private global::System.Data.DataColumn columnSubCategoryID;
            
            private global::System.Data.DataColumn columnCategoryID;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnLastUpdatedBy;
            
            private global::System.Data.DataColumn columnLastUpdatedDate;
            
            private global::System.Data.DataColumn columnActiveFlag;
            
            private global::System.Data.DataColumn columnAllowPriceIncrePct;
            
            private global::System.Data.DataColumn columnAllowPriceDecrePct;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SubCategoryDataTable() {
                this.TableName = "SubCategory";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SubCategoryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected SubCategoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SubCategoryCodeColumn {
                get {
                    return this.columnSubCategoryCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SubCategoryIDColumn {
                get {
                    return this.columnSubCategoryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CategoryIDColumn {
                get {
                    return this.columnCategoryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LastUpdatedByColumn {
                get {
                    return this.columnLastUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LastUpdatedDateColumn {
                get {
                    return this.columnLastUpdatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ActiveFlagColumn {
                get {
                    return this.columnActiveFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AllowPriceIncrePctColumn {
                get {
                    return this.columnAllowPriceIncrePct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AllowPriceDecrePctColumn {
                get {
                    return this.columnAllowPriceDecrePct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SubCategoryRow this[int index] {
                get {
                    return ((SubCategoryRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event SubCategoryRowChangeEventHandler SubCategoryRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event SubCategoryRowChangeEventHandler SubCategoryRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event SubCategoryRowChangeEventHandler SubCategoryRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event SubCategoryRowChangeEventHandler SubCategoryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddSubCategoryRow(SubCategoryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SubCategoryRow AddSubCategoryRow(string SubCategoryCode, decimal CategoryID, string Description, string CreatedBy, System.DateTime CreatedDate, string LastUpdatedBy, System.DateTime LastUpdatedDate, string ActiveFlag, decimal AllowPriceIncrePct, decimal AllowPriceDecrePct) {
                SubCategoryRow rowSubCategoryRow = ((SubCategoryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SubCategoryCode,
                        null,
                        CategoryID,
                        Description,
                        CreatedBy,
                        CreatedDate,
                        LastUpdatedBy,
                        LastUpdatedDate,
                        ActiveFlag,
                        AllowPriceIncrePct,
                        AllowPriceDecrePct};
                rowSubCategoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSubCategoryRow);
                return rowSubCategoryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SubCategoryRow FindBySubCategoryCode(string SubCategoryCode) {
                return ((SubCategoryRow)(this.Rows.Find(new object[] {
                            SubCategoryCode})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SubCategoryDataTable cln = ((SubCategoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SubCategoryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnSubCategoryCode = base.Columns["SubCategoryCode"];
                this.columnSubCategoryID = base.Columns["SubCategoryID"];
                this.columnCategoryID = base.Columns["CategoryID"];
                this.columnDescription = base.Columns["Description"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnLastUpdatedBy = base.Columns["LastUpdatedBy"];
                this.columnLastUpdatedDate = base.Columns["LastUpdatedDate"];
                this.columnActiveFlag = base.Columns["ActiveFlag"];
                this.columnAllowPriceIncrePct = base.Columns["AllowPriceIncrePct"];
                this.columnAllowPriceDecrePct = base.Columns["AllowPriceDecrePct"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnSubCategoryCode = new global::System.Data.DataColumn("SubCategoryCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubCategoryCode);
                this.columnSubCategoryID = new global::System.Data.DataColumn("SubCategoryID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubCategoryID);
                this.columnCategoryID = new global::System.Data.DataColumn("CategoryID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryID);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnLastUpdatedBy = new global::System.Data.DataColumn("LastUpdatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdatedBy);
                this.columnLastUpdatedDate = new global::System.Data.DataColumn("LastUpdatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdatedDate);
                this.columnActiveFlag = new global::System.Data.DataColumn("ActiveFlag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActiveFlag);
                this.columnAllowPriceIncrePct = new global::System.Data.DataColumn("AllowPriceIncrePct", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllowPriceIncrePct);
                this.columnAllowPriceDecrePct = new global::System.Data.DataColumn("AllowPriceDecrePct", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllowPriceDecrePct);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSubCategoryCode}, true));
                this.columnSubCategoryCode.AllowDBNull = false;
                this.columnSubCategoryCode.Unique = true;
                this.columnSubCategoryCode.MaxLength = 20;
                this.columnSubCategoryID.AutoIncrement = true;
                this.columnSubCategoryID.AutoIncrementSeed = -1;
                this.columnSubCategoryID.AutoIncrementStep = -1;
                this.columnSubCategoryID.AllowDBNull = false;
                this.columnSubCategoryID.ReadOnly = true;
                this.columnCategoryID.AllowDBNull = false;
                this.columnDescription.MaxLength = 500;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 50;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnLastUpdatedBy.AllowDBNull = false;
                this.columnLastUpdatedBy.MaxLength = 50;
                this.columnLastUpdatedDate.AllowDBNull = false;
                this.columnActiveFlag.AllowDBNull = false;
                this.columnActiveFlag.MaxLength = 1;
                this.columnAllowPriceIncrePct.AllowDBNull = false;
                this.columnAllowPriceDecrePct.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SubCategoryRow NewSubCategoryRow() {
                return ((SubCategoryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SubCategoryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SubCategoryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SubCategoryRowChanged != null)) {
                    this.SubCategoryRowChanged(this, new SubCategoryRowChangeEvent(((SubCategoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SubCategoryRowChanging != null)) {
                    this.SubCategoryRowChanging(this, new SubCategoryRowChangeEvent(((SubCategoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SubCategoryRowDeleted != null)) {
                    this.SubCategoryRowDeleted(this, new SubCategoryRowChangeEvent(((SubCategoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SubCategoryRowDeleting != null)) {
                    this.SubCategoryRowDeleting(this, new SubCategoryRowChangeEvent(((SubCategoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveSubCategoryRow(SubCategoryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SubCategoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Get_Tradefeed_ExceptionDataTable : global::System.Data.TypedTableBase<Get_Tradefeed_ExceptionRow> {
            
            private global::System.Data.DataColumn columnCommodityCode;
            
            private global::System.Data.DataColumn columnContract_Year;
            
            private global::System.Data.DataColumn columnContract_Month;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Get_Tradefeed_ExceptionDataTable() {
                this.TableName = "Get_Tradefeed_Exception";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal Get_Tradefeed_ExceptionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected Get_Tradefeed_ExceptionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CommodityCodeColumn {
                get {
                    return this.columnCommodityCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Contract_YearColumn {
                get {
                    return this.columnContract_Year;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Contract_MonthColumn {
                get {
                    return this.columnContract_Month;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Get_Tradefeed_ExceptionRow this[int index] {
                get {
                    return ((Get_Tradefeed_ExceptionRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Get_Tradefeed_ExceptionRowChangeEventHandler Get_Tradefeed_ExceptionRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Get_Tradefeed_ExceptionRowChangeEventHandler Get_Tradefeed_ExceptionRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Get_Tradefeed_ExceptionRowChangeEventHandler Get_Tradefeed_ExceptionRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Get_Tradefeed_ExceptionRowChangeEventHandler Get_Tradefeed_ExceptionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddGet_Tradefeed_ExceptionRow(Get_Tradefeed_ExceptionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Get_Tradefeed_ExceptionRow AddGet_Tradefeed_ExceptionRow(string CommodityCode, string Contract_Year, string Contract_Month) {
                Get_Tradefeed_ExceptionRow rowGet_Tradefeed_ExceptionRow = ((Get_Tradefeed_ExceptionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CommodityCode,
                        Contract_Year,
                        Contract_Month};
                rowGet_Tradefeed_ExceptionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGet_Tradefeed_ExceptionRow);
                return rowGet_Tradefeed_ExceptionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Get_Tradefeed_ExceptionDataTable cln = ((Get_Tradefeed_ExceptionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Get_Tradefeed_ExceptionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnCommodityCode = base.Columns["CommodityCode"];
                this.columnContract_Year = base.Columns["Contract_Year"];
                this.columnContract_Month = base.Columns["Contract_Month"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnCommodityCode = new global::System.Data.DataColumn("CommodityCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommodityCode);
                this.columnContract_Year = new global::System.Data.DataColumn("Contract_Year", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContract_Year);
                this.columnContract_Month = new global::System.Data.DataColumn("Contract_Month", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContract_Month);
                this.columnCommodityCode.ReadOnly = true;
                this.columnCommodityCode.MaxLength = 8000;
                this.columnContract_Year.ReadOnly = true;
                this.columnContract_Year.MaxLength = 4;
                this.columnContract_Month.ReadOnly = true;
                this.columnContract_Month.MaxLength = 2;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Get_Tradefeed_ExceptionRow NewGet_Tradefeed_ExceptionRow() {
                return ((Get_Tradefeed_ExceptionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Get_Tradefeed_ExceptionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Get_Tradefeed_ExceptionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Get_Tradefeed_ExceptionRowChanged != null)) {
                    this.Get_Tradefeed_ExceptionRowChanged(this, new Get_Tradefeed_ExceptionRowChangeEvent(((Get_Tradefeed_ExceptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Get_Tradefeed_ExceptionRowChanging != null)) {
                    this.Get_Tradefeed_ExceptionRowChanging(this, new Get_Tradefeed_ExceptionRowChangeEvent(((Get_Tradefeed_ExceptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Get_Tradefeed_ExceptionRowDeleted != null)) {
                    this.Get_Tradefeed_ExceptionRowDeleted(this, new Get_Tradefeed_ExceptionRowChangeEvent(((Get_Tradefeed_ExceptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Get_Tradefeed_ExceptionRowDeleting != null)) {
                    this.Get_Tradefeed_ExceptionRowDeleting(this, new Get_Tradefeed_ExceptionRowChangeEvent(((Get_Tradefeed_ExceptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveGet_Tradefeed_ExceptionRow(Get_Tradefeed_ExceptionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Get_Tradefeed_ExceptionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class uspTradeFeedExceptionApproveAllDataTable : global::System.Data.TypedTableBase<uspTradeFeedExceptionApproveAllRow> {
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public uspTradeFeedExceptionApproveAllDataTable() {
                this.TableName = "uspTradeFeedExceptionApproveAll";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal uspTradeFeedExceptionApproveAllDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected uspTradeFeedExceptionApproveAllDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public uspTradeFeedExceptionApproveAllRow this[int index] {
                get {
                    return ((uspTradeFeedExceptionApproveAllRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event uspTradeFeedExceptionApproveAllRowChangeEventHandler uspTradeFeedExceptionApproveAllRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event uspTradeFeedExceptionApproveAllRowChangeEventHandler uspTradeFeedExceptionApproveAllRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event uspTradeFeedExceptionApproveAllRowChangeEventHandler uspTradeFeedExceptionApproveAllRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event uspTradeFeedExceptionApproveAllRowChangeEventHandler uspTradeFeedExceptionApproveAllRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AdduspTradeFeedExceptionApproveAllRow(uspTradeFeedExceptionApproveAllRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public uspTradeFeedExceptionApproveAllRow AdduspTradeFeedExceptionApproveAllRow() {
                uspTradeFeedExceptionApproveAllRow rowuspTradeFeedExceptionApproveAllRow = ((uspTradeFeedExceptionApproveAllRow)(this.NewRow()));
                object[] columnValuesArray = new object[0];
                rowuspTradeFeedExceptionApproveAllRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowuspTradeFeedExceptionApproveAllRow);
                return rowuspTradeFeedExceptionApproveAllRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                uspTradeFeedExceptionApproveAllDataTable cln = ((uspTradeFeedExceptionApproveAllDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new uspTradeFeedExceptionApproveAllDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public uspTradeFeedExceptionApproveAllRow NewuspTradeFeedExceptionApproveAllRow() {
                return ((uspTradeFeedExceptionApproveAllRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new uspTradeFeedExceptionApproveAllRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(uspTradeFeedExceptionApproveAllRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.uspTradeFeedExceptionApproveAllRowChanged != null)) {
                    this.uspTradeFeedExceptionApproveAllRowChanged(this, new uspTradeFeedExceptionApproveAllRowChangeEvent(((uspTradeFeedExceptionApproveAllRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.uspTradeFeedExceptionApproveAllRowChanging != null)) {
                    this.uspTradeFeedExceptionApproveAllRowChanging(this, new uspTradeFeedExceptionApproveAllRowChangeEvent(((uspTradeFeedExceptionApproveAllRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.uspTradeFeedExceptionApproveAllRowDeleted != null)) {
                    this.uspTradeFeedExceptionApproveAllRowDeleted(this, new uspTradeFeedExceptionApproveAllRowChangeEvent(((uspTradeFeedExceptionApproveAllRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.uspTradeFeedExceptionApproveAllRowDeleting != null)) {
                    this.uspTradeFeedExceptionApproveAllRowDeleting(this, new uspTradeFeedExceptionApproveAllRowChangeEvent(((uspTradeFeedExceptionApproveAllRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveuspTradeFeedExceptionApproveAllRow(uspTradeFeedExceptionApproveAllRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "uspTradeFeedExceptionApproveAllDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class iDfsFasPalnDataTable : global::System.Data.TypedTableBase<iDfsFasPalnRow> {
            
            private global::System.Data.DataColumn columnCMID;
            
            private global::System.Data.DataColumn columnBusinessDate;
            
            private global::System.Data.DataColumn columnPALN;
            
            private global::System.Data.DataColumn columnName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public iDfsFasPalnDataTable() {
                this.TableName = "iDfsFasPaln";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal iDfsFasPalnDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected iDfsFasPalnDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CMIDColumn {
                get {
                    return this.columnCMID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BusinessDateColumn {
                get {
                    return this.columnBusinessDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PALNColumn {
                get {
                    return this.columnPALN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public iDfsFasPalnRow this[int index] {
                get {
                    return ((iDfsFasPalnRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event iDfsFasPalnRowChangeEventHandler iDfsFasPalnRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event iDfsFasPalnRowChangeEventHandler iDfsFasPalnRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event iDfsFasPalnRowChangeEventHandler iDfsFasPalnRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event iDfsFasPalnRowChangeEventHandler iDfsFasPalnRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddiDfsFasPalnRow(iDfsFasPalnRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public iDfsFasPalnRow AddiDfsFasPalnRow(decimal CMID, System.DateTime BusinessDate, decimal PALN, string Name) {
                iDfsFasPalnRow rowiDfsFasPalnRow = ((iDfsFasPalnRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CMID,
                        BusinessDate,
                        PALN,
                        Name};
                rowiDfsFasPalnRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowiDfsFasPalnRow);
                return rowiDfsFasPalnRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public iDfsFasPalnRow FindByCMIDBusinessDate(decimal CMID, System.DateTime BusinessDate) {
                return ((iDfsFasPalnRow)(this.Rows.Find(new object[] {
                            CMID,
                            BusinessDate})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                iDfsFasPalnDataTable cln = ((iDfsFasPalnDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new iDfsFasPalnDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnCMID = base.Columns["CMID"];
                this.columnBusinessDate = base.Columns["BusinessDate"];
                this.columnPALN = base.Columns["PALN"];
                this.columnName = base.Columns["Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnCMID = new global::System.Data.DataColumn("CMID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMID);
                this.columnBusinessDate = new global::System.Data.DataColumn("BusinessDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessDate);
                this.columnPALN = new global::System.Data.DataColumn("PALN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPALN);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCMID,
                                this.columnBusinessDate}, true));
                this.columnCMID.AllowDBNull = false;
                this.columnBusinessDate.AllowDBNull = false;
                this.columnName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public iDfsFasPalnRow NewiDfsFasPalnRow() {
                return ((iDfsFasPalnRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new iDfsFasPalnRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(iDfsFasPalnRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.iDfsFasPalnRowChanged != null)) {
                    this.iDfsFasPalnRowChanged(this, new iDfsFasPalnRowChangeEvent(((iDfsFasPalnRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.iDfsFasPalnRowChanging != null)) {
                    this.iDfsFasPalnRowChanging(this, new iDfsFasPalnRowChangeEvent(((iDfsFasPalnRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.iDfsFasPalnRowDeleted != null)) {
                    this.iDfsFasPalnRowDeleted(this, new iDfsFasPalnRowChangeEvent(((iDfsFasPalnRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.iDfsFasPalnRowDeleting != null)) {
                    this.iDfsFasPalnRowDeleting(this, new iDfsFasPalnRowChangeEvent(((iDfsFasPalnRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveiDfsFasPalnRow(iDfsFasPalnRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "iDfsFasPalnDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class irca_parameterDataTable : global::System.Data.TypedTableBase<irca_parameterRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnpair;
            
            private global::System.Data.DataColumn columnparameter;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public irca_parameterDataTable() {
                this.TableName = "irca_parameter";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal irca_parameterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected irca_parameterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn pairColumn {
                get {
                    return this.columnpair;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn parameterColumn {
                get {
                    return this.columnparameter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public irca_parameterRow this[int index] {
                get {
                    return ((irca_parameterRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event irca_parameterRowChangeEventHandler irca_parameterRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event irca_parameterRowChangeEventHandler irca_parameterRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event irca_parameterRowChangeEventHandler irca_parameterRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event irca_parameterRowChangeEventHandler irca_parameterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Addirca_parameterRow(irca_parameterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public irca_parameterRow Addirca_parameterRow(string pair, int parameter) {
                irca_parameterRow rowirca_parameterRow = ((irca_parameterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        pair,
                        parameter};
                rowirca_parameterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowirca_parameterRow);
                return rowirca_parameterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public irca_parameterRow FindByid(long id) {
                return ((irca_parameterRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                irca_parameterDataTable cln = ((irca_parameterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new irca_parameterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnpair = base.Columns["pair"];
                this.columnparameter = base.Columns["parameter"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnpair = new global::System.Data.DataColumn("pair", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpair);
                this.columnparameter = new global::System.Data.DataColumn("parameter", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparameter);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnpair.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public irca_parameterRow Newirca_parameterRow() {
                return ((irca_parameterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new irca_parameterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(irca_parameterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.irca_parameterRowChanged != null)) {
                    this.irca_parameterRowChanged(this, new irca_parameterRowChangeEvent(((irca_parameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.irca_parameterRowChanging != null)) {
                    this.irca_parameterRowChanging(this, new irca_parameterRowChangeEvent(((irca_parameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.irca_parameterRowDeleted != null)) {
                    this.irca_parameterRowDeleted(this, new irca_parameterRowChangeEvent(((irca_parameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.irca_parameterRowDeleting != null)) {
                    this.irca_parameterRowDeleting(this, new irca_parameterRowChangeEvent(((irca_parameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Removeirca_parameterRow(irca_parameterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "irca_parameterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class irca_productDataTable : global::System.Data.TypedTableBase<irca_productRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnproduct;
            
            private global::System.Data.DataColumn columnpair;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public irca_productDataTable() {
                this.TableName = "irca_product";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal irca_productDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected irca_productDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn productColumn {
                get {
                    return this.columnproduct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn pairColumn {
                get {
                    return this.columnpair;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public irca_productRow this[int index] {
                get {
                    return ((irca_productRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event irca_productRowChangeEventHandler irca_productRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event irca_productRowChangeEventHandler irca_productRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event irca_productRowChangeEventHandler irca_productRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event irca_productRowChangeEventHandler irca_productRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Addirca_productRow(irca_productRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public irca_productRow Addirca_productRow(string product, string pair) {
                irca_productRow rowirca_productRow = ((irca_productRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        product,
                        pair};
                rowirca_productRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowirca_productRow);
                return rowirca_productRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public irca_productRow FindByid(long id) {
                return ((irca_productRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                irca_productDataTable cln = ((irca_productDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new irca_productDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnproduct = base.Columns["product"];
                this.columnpair = base.Columns["pair"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnproduct = new global::System.Data.DataColumn("product", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct);
                this.columnpair = new global::System.Data.DataColumn("pair", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpair);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnproduct.MaxLength = 100;
                this.columnpair.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public irca_productRow Newirca_productRow() {
                return ((irca_productRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new irca_productRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(irca_productRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.irca_productRowChanged != null)) {
                    this.irca_productRowChanged(this, new irca_productRowChangeEvent(((irca_productRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.irca_productRowChanging != null)) {
                    this.irca_productRowChanging(this, new irca_productRowChangeEvent(((irca_productRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.irca_productRowDeleted != null)) {
                    this.irca_productRowDeleted(this, new irca_productRowChangeEvent(((irca_productRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.irca_productRowDeleting != null)) {
                    this.irca_productRowDeleting(this, new irca_productRowChangeEvent(((irca_productRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Removeirca_productRow(irca_productRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "irca_productDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class IRCADataTable : global::System.Data.TypedTableBase<IRCARow> {
            
            private global::System.Data.DataColumn columnCommodityID;
            
            private global::System.Data.DataColumn columnEffectiveStartDate;
            
            private global::System.Data.DataColumn columnApprovalStatus;
            
            private global::System.Data.DataColumn columnIRCAValue;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnLastUpdatedBy;
            
            private global::System.Data.DataColumn columnLastUpdatedDate;
            
            private global::System.Data.DataColumn columnEffectiveEndDate;
            
            private global::System.Data.DataColumn columnApprovalDesc;
            
            private global::System.Data.DataColumn columnOriginalID;
            
            private global::System.Data.DataColumn columnActionFlag;
            
            private global::System.Data.DataColumn columnIRCAID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public IRCADataTable() {
                this.TableName = "IRCA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal IRCADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected IRCADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CommodityIDColumn {
                get {
                    return this.columnCommodityID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EffectiveStartDateColumn {
                get {
                    return this.columnEffectiveStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ApprovalStatusColumn {
                get {
                    return this.columnApprovalStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IRCAValueColumn {
                get {
                    return this.columnIRCAValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LastUpdatedByColumn {
                get {
                    return this.columnLastUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LastUpdatedDateColumn {
                get {
                    return this.columnLastUpdatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EffectiveEndDateColumn {
                get {
                    return this.columnEffectiveEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ApprovalDescColumn {
                get {
                    return this.columnApprovalDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OriginalIDColumn {
                get {
                    return this.columnOriginalID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ActionFlagColumn {
                get {
                    return this.columnActionFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IRCAIDColumn {
                get {
                    return this.columnIRCAID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public IRCARow this[int index] {
                get {
                    return ((IRCARow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event IRCARowChangeEventHandler IRCARowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event IRCARowChangeEventHandler IRCARowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event IRCARowChangeEventHandler IRCARowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event IRCARowChangeEventHandler IRCARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddIRCARow(IRCARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public IRCARow AddIRCARow(CommodityRow parentCommodityRowByR_372, System.DateTime EffectiveStartDate, string ApprovalStatus, decimal IRCAValue, string CreatedBy, System.DateTime CreatedDate, string LastUpdatedBy, System.DateTime LastUpdatedDate, System.DateTime EffectiveEndDate, string ApprovalDesc, decimal OriginalID, string ActionFlag) {
                IRCARow rowIRCARow = ((IRCARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        EffectiveStartDate,
                        ApprovalStatus,
                        IRCAValue,
                        CreatedBy,
                        CreatedDate,
                        LastUpdatedBy,
                        LastUpdatedDate,
                        EffectiveEndDate,
                        ApprovalDesc,
                        OriginalID,
                        ActionFlag,
                        null};
                if ((parentCommodityRowByR_372 != null)) {
                    columnValuesArray[0] = parentCommodityRowByR_372[5];
                }
                rowIRCARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowIRCARow);
                return rowIRCARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public IRCARow FindByCommodityIDEffectiveStartDateApprovalStatus(decimal CommodityID, System.DateTime EffectiveStartDate, string ApprovalStatus) {
                return ((IRCARow)(this.Rows.Find(new object[] {
                            CommodityID,
                            EffectiveStartDate,
                            ApprovalStatus})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                IRCADataTable cln = ((IRCADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new IRCADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnCommodityID = base.Columns["CommodityID"];
                this.columnEffectiveStartDate = base.Columns["EffectiveStartDate"];
                this.columnApprovalStatus = base.Columns["ApprovalStatus"];
                this.columnIRCAValue = base.Columns["IRCAValue"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnLastUpdatedBy = base.Columns["LastUpdatedBy"];
                this.columnLastUpdatedDate = base.Columns["LastUpdatedDate"];
                this.columnEffectiveEndDate = base.Columns["EffectiveEndDate"];
                this.columnApprovalDesc = base.Columns["ApprovalDesc"];
                this.columnOriginalID = base.Columns["OriginalID"];
                this.columnActionFlag = base.Columns["ActionFlag"];
                this.columnIRCAID = base.Columns["IRCAID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnCommodityID = new global::System.Data.DataColumn("CommodityID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommodityID);
                this.columnEffectiveStartDate = new global::System.Data.DataColumn("EffectiveStartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectiveStartDate);
                this.columnApprovalStatus = new global::System.Data.DataColumn("ApprovalStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovalStatus);
                this.columnIRCAValue = new global::System.Data.DataColumn("IRCAValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIRCAValue);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnLastUpdatedBy = new global::System.Data.DataColumn("LastUpdatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdatedBy);
                this.columnLastUpdatedDate = new global::System.Data.DataColumn("LastUpdatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdatedDate);
                this.columnEffectiveEndDate = new global::System.Data.DataColumn("EffectiveEndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectiveEndDate);
                this.columnApprovalDesc = new global::System.Data.DataColumn("ApprovalDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovalDesc);
                this.columnOriginalID = new global::System.Data.DataColumn("OriginalID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalID);
                this.columnActionFlag = new global::System.Data.DataColumn("ActionFlag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActionFlag);
                this.columnIRCAID = new global::System.Data.DataColumn("IRCAID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIRCAID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCommodityID,
                                this.columnEffectiveStartDate,
                                this.columnApprovalStatus}, true));
                this.columnCommodityID.AllowDBNull = false;
                this.columnEffectiveStartDate.AllowDBNull = false;
                this.columnApprovalStatus.AllowDBNull = false;
                this.columnApprovalStatus.MaxLength = 1;
                this.columnIRCAValue.AllowDBNull = false;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 50;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnLastUpdatedBy.AllowDBNull = false;
                this.columnLastUpdatedBy.MaxLength = 50;
                this.columnLastUpdatedDate.AllowDBNull = false;
                this.columnApprovalDesc.MaxLength = 100;
                this.columnActionFlag.MaxLength = 1;
                this.columnIRCAID.AutoIncrement = true;
                this.columnIRCAID.AutoIncrementSeed = -1;
                this.columnIRCAID.AutoIncrementStep = -1;
                this.columnIRCAID.AllowDBNull = false;
                this.columnIRCAID.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public IRCARow NewIRCARow() {
                return ((IRCARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new IRCARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(IRCARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.IRCARowChanged != null)) {
                    this.IRCARowChanged(this, new IRCARowChangeEvent(((IRCARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.IRCARowChanging != null)) {
                    this.IRCARowChanging(this, new IRCARowChangeEvent(((IRCARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.IRCARowDeleted != null)) {
                    this.IRCARowDeleted(this, new IRCARowChangeEvent(((IRCARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.IRCARowDeleting != null)) {
                    this.IRCARowDeleting(this, new IRCARowChangeEvent(((IRCARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveIRCARow(IRCARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "IRCADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class iDfsFasPaln1DataTable : global::System.Data.TypedTableBase<iDfsFasPaln1Row> {
            
            private global::System.Data.DataColumn columnCMID;
            
            private global::System.Data.DataColumn columnBusinessDate;
            
            private global::System.Data.DataColumn columnPALN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public iDfsFasPaln1DataTable() {
                this.TableName = "iDfsFasPaln1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal iDfsFasPaln1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected iDfsFasPaln1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CMIDColumn {
                get {
                    return this.columnCMID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BusinessDateColumn {
                get {
                    return this.columnBusinessDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PALNColumn {
                get {
                    return this.columnPALN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public iDfsFasPaln1Row this[int index] {
                get {
                    return ((iDfsFasPaln1Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event iDfsFasPaln1RowChangeEventHandler iDfsFasPaln1RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event iDfsFasPaln1RowChangeEventHandler iDfsFasPaln1RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event iDfsFasPaln1RowChangeEventHandler iDfsFasPaln1RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event iDfsFasPaln1RowChangeEventHandler iDfsFasPaln1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddiDfsFasPaln1Row(iDfsFasPaln1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public iDfsFasPaln1Row AddiDfsFasPaln1Row(decimal CMID, System.DateTime BusinessDate, decimal PALN) {
                iDfsFasPaln1Row rowiDfsFasPaln1Row = ((iDfsFasPaln1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CMID,
                        BusinessDate,
                        PALN};
                rowiDfsFasPaln1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowiDfsFasPaln1Row);
                return rowiDfsFasPaln1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public iDfsFasPaln1Row FindByCMIDBusinessDate(decimal CMID, System.DateTime BusinessDate) {
                return ((iDfsFasPaln1Row)(this.Rows.Find(new object[] {
                            CMID,
                            BusinessDate})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                iDfsFasPaln1DataTable cln = ((iDfsFasPaln1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new iDfsFasPaln1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnCMID = base.Columns["CMID"];
                this.columnBusinessDate = base.Columns["BusinessDate"];
                this.columnPALN = base.Columns["PALN"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnCMID = new global::System.Data.DataColumn("CMID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMID);
                this.columnBusinessDate = new global::System.Data.DataColumn("BusinessDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessDate);
                this.columnPALN = new global::System.Data.DataColumn("PALN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPALN);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCMID,
                                this.columnBusinessDate}, true));
                this.columnCMID.AllowDBNull = false;
                this.columnBusinessDate.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public iDfsFasPaln1Row NewiDfsFasPaln1Row() {
                return ((iDfsFasPaln1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new iDfsFasPaln1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(iDfsFasPaln1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.iDfsFasPaln1RowChanged != null)) {
                    this.iDfsFasPaln1RowChanged(this, new iDfsFasPaln1RowChangeEvent(((iDfsFasPaln1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.iDfsFasPaln1RowChanging != null)) {
                    this.iDfsFasPaln1RowChanging(this, new iDfsFasPaln1RowChangeEvent(((iDfsFasPaln1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.iDfsFasPaln1RowDeleted != null)) {
                    this.iDfsFasPaln1RowDeleted(this, new iDfsFasPaln1RowChangeEvent(((iDfsFasPaln1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.iDfsFasPaln1RowDeleting != null)) {
                    this.iDfsFasPaln1RowDeleting(this, new iDfsFasPaln1RowChangeEvent(((iDfsFasPaln1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveiDfsFasPaln1Row(iDfsFasPaln1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "iDfsFasPaln1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class fee_palnDataTable : global::System.Data.TypedTableBase<fee_palnRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columntrader_id;
            
            private global::System.Data.DataColumn columnbusinessDate;
            
            private global::System.Data.DataColumn columntotalFee;
            
            private global::System.Data.DataColumn columntotalFeeUsd;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public fee_palnDataTable() {
                this.TableName = "fee_paln";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal fee_palnDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected fee_palnDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn trader_idColumn {
                get {
                    return this.columntrader_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn businessDateColumn {
                get {
                    return this.columnbusinessDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn totalFeeColumn {
                get {
                    return this.columntotalFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn totalFeeUsdColumn {
                get {
                    return this.columntotalFeeUsd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public fee_palnRow this[int index] {
                get {
                    return ((fee_palnRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event fee_palnRowChangeEventHandler fee_palnRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event fee_palnRowChangeEventHandler fee_palnRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event fee_palnRowChangeEventHandler fee_palnRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event fee_palnRowChangeEventHandler fee_palnRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Addfee_palnRow(fee_palnRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public fee_palnRow Addfee_palnRow(string trader_id, System.DateTime businessDate, decimal totalFee, decimal totalFeeUsd) {
                fee_palnRow rowfee_palnRow = ((fee_palnRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        trader_id,
                        businessDate,
                        totalFee,
                        totalFeeUsd};
                rowfee_palnRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowfee_palnRow);
                return rowfee_palnRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public fee_palnRow FindByid(int id) {
                return ((fee_palnRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                fee_palnDataTable cln = ((fee_palnDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new fee_palnDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columntrader_id = base.Columns["trader_id"];
                this.columnbusinessDate = base.Columns["businessDate"];
                this.columntotalFee = base.Columns["totalFee"];
                this.columntotalFeeUsd = base.Columns["totalFeeUsd"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columntrader_id = new global::System.Data.DataColumn("trader_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntrader_id);
                this.columnbusinessDate = new global::System.Data.DataColumn("businessDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbusinessDate);
                this.columntotalFee = new global::System.Data.DataColumn("totalFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotalFee);
                this.columntotalFeeUsd = new global::System.Data.DataColumn("totalFeeUsd", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotalFeeUsd);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columntrader_id.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public fee_palnRow Newfee_palnRow() {
                return ((fee_palnRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new fee_palnRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(fee_palnRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.fee_palnRowChanged != null)) {
                    this.fee_palnRowChanged(this, new fee_palnRowChangeEvent(((fee_palnRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.fee_palnRowChanging != null)) {
                    this.fee_palnRowChanging(this, new fee_palnRowChangeEvent(((fee_palnRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.fee_palnRowDeleted != null)) {
                    this.fee_palnRowDeleted(this, new fee_palnRowChangeEvent(((fee_palnRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.fee_palnRowDeleting != null)) {
                    this.fee_palnRowDeleting(this, new fee_palnRowChangeEvent(((fee_palnRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Removefee_palnRow(fee_palnRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "fee_palnDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RateJisdorDataTable : global::System.Data.TypedTableBase<RateJisdorRow> {
            
            private global::System.Data.DataColumn columnBusinessDate;
            
            private global::System.Data.DataColumn columnRate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public RateJisdorDataTable() {
                this.TableName = "RateJisdor";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal RateJisdorDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected RateJisdorDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BusinessDateColumn {
                get {
                    return this.columnBusinessDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RateColumn {
                get {
                    return this.columnRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public RateJisdorRow this[int index] {
                get {
                    return ((RateJisdorRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event RateJisdorRowChangeEventHandler RateJisdorRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event RateJisdorRowChangeEventHandler RateJisdorRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event RateJisdorRowChangeEventHandler RateJisdorRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event RateJisdorRowChangeEventHandler RateJisdorRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddRateJisdorRow(RateJisdorRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public RateJisdorRow AddRateJisdorRow(System.DateTime BusinessDate, decimal Rate) {
                RateJisdorRow rowRateJisdorRow = ((RateJisdorRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BusinessDate,
                        Rate};
                rowRateJisdorRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRateJisdorRow);
                return rowRateJisdorRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public RateJisdorRow FindByBusinessDate(System.DateTime BusinessDate) {
                return ((RateJisdorRow)(this.Rows.Find(new object[] {
                            BusinessDate})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                RateJisdorDataTable cln = ((RateJisdorDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RateJisdorDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnBusinessDate = base.Columns["BusinessDate"];
                this.columnRate = base.Columns["Rate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnBusinessDate = new global::System.Data.DataColumn("BusinessDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessDate);
                this.columnRate = new global::System.Data.DataColumn("Rate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBusinessDate}, true));
                this.columnBusinessDate.AllowDBNull = false;
                this.columnBusinessDate.Unique = true;
                this.columnRate.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public RateJisdorRow NewRateJisdorRow() {
                return ((RateJisdorRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RateJisdorRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(RateJisdorRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RateJisdorRowChanged != null)) {
                    this.RateJisdorRowChanged(this, new RateJisdorRowChangeEvent(((RateJisdorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RateJisdorRowChanging != null)) {
                    this.RateJisdorRowChanging(this, new RateJisdorRowChangeEvent(((RateJisdorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RateJisdorRowDeleted != null)) {
                    this.RateJisdorRowDeleted(this, new RateJisdorRowChangeEvent(((RateJisdorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RateJisdorRowDeleting != null)) {
                    this.RateJisdorRowDeleting(this, new RateJisdorRowChangeEvent(((RateJisdorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveRateJisdorRow(RateJisdorRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RateJisdorDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DataTable1Row : global::System.Data.DataRow {
            
            private DataTable1DataTable tableDataTable1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal DataTable1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDataTable1 = ((DataTable1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int totaltradefeed {
                get {
                    try {
                        return ((int)(this[this.tableDataTable1.totaltradefeedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'totaltradefeed\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.totaltradefeedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal lot {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.lotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'lot\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.lotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IstotaltradefeedNull() {
                return this.IsNull(this.tableDataTable1.totaltradefeedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SettotaltradefeedNull() {
                this[this.tableDataTable1.totaltradefeedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IslotNull() {
                return this.IsNull(this.tableDataTable1.lotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetlotNull() {
                this[this.tableDataTable1.lotColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Validation_SettlementPrice_ExceptionsRow : global::System.Data.DataRow {
            
            private Validation_SettlementPrice_ExceptionsDataTable tableValidation_SettlementPrice_Exceptions;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal Validation_SettlementPrice_ExceptionsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableValidation_SettlementPrice_Exceptions = ((Validation_SettlementPrice_ExceptionsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int count_sp {
                get {
                    try {
                        return ((int)(this[this.tableValidation_SettlementPrice_Exceptions.count_spColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'count_sp\' in table \'Validation_SettlementPrice_Exceptions\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableValidation_SettlementPrice_Exceptions.count_spColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int count_ex {
                get {
                    try {
                        return ((int)(this[this.tableValidation_SettlementPrice_Exceptions.count_exColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'count_ex\' in table \'Validation_SettlementPrice_Exceptions\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableValidation_SettlementPrice_Exceptions.count_exColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Iscount_spNull() {
                return this.IsNull(this.tableValidation_SettlementPrice_Exceptions.count_spColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setcount_spNull() {
                this[this.tableValidation_SettlementPrice_Exceptions.count_spColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Iscount_exNull() {
                return this.IsNull(this.tableValidation_SettlementPrice_Exceptions.count_exColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setcount_exNull() {
                this[this.tableValidation_SettlementPrice_Exceptions.count_exColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TradefeedExceptionRow : global::System.Data.DataRow {
            
            private TradefeedExceptionDataTable tableTradefeedException;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal TradefeedExceptionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTradefeedException = ((TradefeedExceptionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal TradeFeedID {
                get {
                    return ((decimal)(this[this.tableTradefeedException.TradeFeedIDColumn]));
                }
                set {
                    this[this.tableTradefeedException.TradeFeedIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime BusinessDate {
                get {
                    return ((global::System.DateTime)(this[this.tableTradefeedException.BusinessDateColumn]));
                }
                set {
                    this[this.tableTradefeedException.BusinessDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ExchangeID {
                get {
                    return ((decimal)(this[this.tableTradefeedException.ExchangeIDColumn]));
                }
                set {
                    this[this.tableTradefeedException.ExchangeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ApprovalStatus {
                get {
                    return ((string)(this[this.tableTradefeedException.ApprovalStatusColumn]));
                }
                set {
                    this[this.tableTradefeedException.ApprovalStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Message {
                get {
                    try {
                        return ((string)(this[this.tableTradefeedException.MessageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Message\' in table \'TradefeedException\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTradefeedException.MessageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ApprovalDesc {
                get {
                    try {
                        return ((string)(this[this.tableTradefeedException.ApprovalDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApprovalDesc\' in table \'TradefeedException\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTradefeedException.ApprovalDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableTradefeedException.CreatedByColumn]));
                }
                set {
                    this[this.tableTradefeedException.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableTradefeedException.CreatedDateColumn]));
                }
                set {
                    this[this.tableTradefeedException.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LastUpdatedBy {
                get {
                    return ((string)(this[this.tableTradefeedException.LastUpdatedByColumn]));
                }
                set {
                    this[this.tableTradefeedException.LastUpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime LastUpdatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableTradefeedException.LastUpdatedDateColumn]));
                }
                set {
                    this[this.tableTradefeedException.LastUpdatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int ForceApproveOperationsType {
                get {
                    return ((int)(this[this.tableTradefeedException.ForceApproveOperationsTypeColumn]));
                }
                set {
                    this[this.tableTradefeedException.ForceApproveOperationsTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMessageNull() {
                return this.IsNull(this.tableTradefeedException.MessageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMessageNull() {
                this[this.tableTradefeedException.MessageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsApprovalDescNull() {
                return this.IsNull(this.tableTradefeedException.ApprovalDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetApprovalDescNull() {
                this[this.tableTradefeedException.ApprovalDescColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ParameterRow : global::System.Data.DataRow {
            
            private ParameterDataTable tableParameter;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ParameterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableParameter = ((ParameterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Code {
                get {
                    return ((string)(this[this.tableParameter.CodeColumn]));
                }
                set {
                    this[this.tableParameter.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime EffectiveStartDate {
                get {
                    return ((global::System.DateTime)(this[this.tableParameter.EffectiveStartDateColumn]));
                }
                set {
                    this[this.tableParameter.EffectiveStartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ApprovalStatus {
                get {
                    return ((string)(this[this.tableParameter.ApprovalStatusColumn]));
                }
                set {
                    this[this.tableParameter.ApprovalStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal NumericValue {
                get {
                    try {
                        return ((decimal)(this[this.tableParameter.NumericValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumericValue\' in table \'Parameter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableParameter.NumericValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime DateValue {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableParameter.DateValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateValue\' in table \'Parameter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableParameter.DateValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string StringValue {
                get {
                    try {
                        return ((string)(this[this.tableParameter.StringValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StringValue\' in table \'Parameter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableParameter.StringValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableParameter.CreatedByColumn]));
                }
                set {
                    this[this.tableParameter.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableParameter.CreatedDateColumn]));
                }
                set {
                    this[this.tableParameter.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LastUpdatedBy {
                get {
                    return ((string)(this[this.tableParameter.LastUpdatedByColumn]));
                }
                set {
                    this[this.tableParameter.LastUpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime LastUpdatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableParameter.LastUpdatedDateColumn]));
                }
                set {
                    this[this.tableParameter.LastUpdatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime EffectiveEndDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableParameter.EffectiveEndDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EffectiveEndDate\' in table \'Parameter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableParameter.EffectiveEndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ApprovalDesc {
                get {
                    try {
                        return ((string)(this[this.tableParameter.ApprovalDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApprovalDesc\' in table \'Parameter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableParameter.ApprovalDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ParameterID {
                get {
                    return ((decimal)(this[this.tableParameter.ParameterIDColumn]));
                }
                set {
                    this[this.tableParameter.ParameterIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ActionFlag {
                get {
                    try {
                        return ((string)(this[this.tableParameter.ActionFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActionFlag\' in table \'Parameter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableParameter.ActionFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal OriginalID {
                get {
                    try {
                        return ((decimal)(this[this.tableParameter.OriginalIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalID\' in table \'Parameter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableParameter.OriginalIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsNumericValueNull() {
                return this.IsNull(this.tableParameter.NumericValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetNumericValueNull() {
                this[this.tableParameter.NumericValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDateValueNull() {
                return this.IsNull(this.tableParameter.DateValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDateValueNull() {
                this[this.tableParameter.DateValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsStringValueNull() {
                return this.IsNull(this.tableParameter.StringValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetStringValueNull() {
                this[this.tableParameter.StringValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsEffectiveEndDateNull() {
                return this.IsNull(this.tableParameter.EffectiveEndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetEffectiveEndDateNull() {
                this[this.tableParameter.EffectiveEndDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsApprovalDescNull() {
                return this.IsNull(this.tableParameter.ApprovalDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetApprovalDescNull() {
                this[this.tableParameter.ApprovalDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsActionFlagNull() {
                return this.IsNull(this.tableParameter.ActionFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetActionFlagNull() {
                this[this.tableParameter.ActionFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsOriginalIDNull() {
                return this.IsNull(this.tableParameter.OriginalIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetOriginalIDNull() {
                this[this.tableParameter.OriginalIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class uspRptDailyShortageSummaryRow : global::System.Data.DataRow {
            
            private uspRptDailyShortageSummaryDataTable tableuspRptDailyShortageSummary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal uspRptDailyShortageSummaryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableuspRptDailyShortageSummary = ((uspRptDailyShortageSummaryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Code {
                get {
                    return ((string)(this[this.tableuspRptDailyShortageSummary.CodeColumn]));
                }
                set {
                    this[this.tableuspRptDailyShortageSummary.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableuspRptDailyShortageSummary.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'uspRptDailyShortageSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableuspRptDailyShortageSummary.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal SegShortageExcessIDR {
                get {
                    try {
                        return ((decimal)(this[this.tableuspRptDailyShortageSummary.SegShortageExcessIDRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SegShortageExcessIDR\' in table \'uspRptDailyShortageSummary\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableuspRptDailyShortageSummary.SegShortageExcessIDRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal UnsegShortageExcessIDR {
                get {
                    try {
                        return ((decimal)(this[this.tableuspRptDailyShortageSummary.UnsegShortageExcessIDRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnsegShortageExcessIDR\' in table \'uspRptDailyShortageSummar" +
                                "y\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableuspRptDailyShortageSummary.UnsegShortageExcessIDRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal SegShortageExcessUSD {
                get {
                    try {
                        return ((decimal)(this[this.tableuspRptDailyShortageSummary.SegShortageExcessUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SegShortageExcessUSD\' in table \'uspRptDailyShortageSummary\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableuspRptDailyShortageSummary.SegShortageExcessUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal UnsegShortageExcessUSD {
                get {
                    try {
                        return ((decimal)(this[this.tableuspRptDailyShortageSummary.UnsegShortageExcessUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnsegShortageExcessUSD\' in table \'uspRptDailyShortageSummar" +
                                "y\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableuspRptDailyShortageSummary.UnsegShortageExcessUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Ekuivalen {
                get {
                    try {
                        return ((decimal)(this[this.tableuspRptDailyShortageSummary.EkuivalenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ekuivalen\' in table \'uspRptDailyShortageSummary\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableuspRptDailyShortageSummary.EkuivalenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal TotalEkuivalen {
                get {
                    try {
                        return ((decimal)(this[this.tableuspRptDailyShortageSummary.TotalEkuivalenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalEkuivalen\' in table \'uspRptDailyShortageSummary\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableuspRptDailyShortageSummary.TotalEkuivalenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LimitGroupDesc {
                get {
                    try {
                        return ((string)(this[this.tableuspRptDailyShortageSummary.LimitGroupDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LimitGroupDesc\' in table \'uspRptDailyShortageSummary\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableuspRptDailyShortageSummary.LimitGroupDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string StatusSuspensi {
                get {
                    try {
                        return ((string)(this[this.tableuspRptDailyShortageSummary.StatusSuspensiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StatusSuspensi\' in table \'uspRptDailyShortageSummary\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableuspRptDailyShortageSummary.StatusSuspensiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal KursKIE {
                get {
                    try {
                        return ((decimal)(this[this.tableuspRptDailyShortageSummary.KursKIEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KursKIE\' in table \'uspRptDailyShortageSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableuspRptDailyShortageSummary.KursKIEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal SegShortageExcessIDR_negative {
                get {
                    try {
                        return ((decimal)(this[this.tableuspRptDailyShortageSummary.SegShortageExcessIDR_negativeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SegShortageExcessIDR_negative\' in table \'uspRptDailyShortag" +
                                "eSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableuspRptDailyShortageSummary.SegShortageExcessIDR_negativeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal UnsegShortageExcessIDR_negative {
                get {
                    try {
                        return ((decimal)(this[this.tableuspRptDailyShortageSummary.UnsegShortageExcessIDR_negativeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnsegShortageExcessIDR_negative\' in table \'uspRptDailyShort" +
                                "ageSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableuspRptDailyShortageSummary.UnsegShortageExcessIDR_negativeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal SegShortageExcessUSD_negative {
                get {
                    try {
                        return ((decimal)(this[this.tableuspRptDailyShortageSummary.SegShortageExcessUSD_negativeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SegShortageExcessUSD_negative\' in table \'uspRptDailyShortag" +
                                "eSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableuspRptDailyShortageSummary.SegShortageExcessUSD_negativeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal UnsegShortageExcessUSD_negative {
                get {
                    try {
                        return ((decimal)(this[this.tableuspRptDailyShortageSummary.UnsegShortageExcessUSD_negativeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnsegShortageExcessUSD_negative\' in table \'uspRptDailyShort" +
                                "ageSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableuspRptDailyShortageSummary.UnsegShortageExcessUSD_negativeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableuspRptDailyShortageSummary.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetNameNull() {
                this[this.tableuspRptDailyShortageSummary.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSegShortageExcessIDRNull() {
                return this.IsNull(this.tableuspRptDailyShortageSummary.SegShortageExcessIDRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSegShortageExcessIDRNull() {
                this[this.tableuspRptDailyShortageSummary.SegShortageExcessIDRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsUnsegShortageExcessIDRNull() {
                return this.IsNull(this.tableuspRptDailyShortageSummary.UnsegShortageExcessIDRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetUnsegShortageExcessIDRNull() {
                this[this.tableuspRptDailyShortageSummary.UnsegShortageExcessIDRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSegShortageExcessUSDNull() {
                return this.IsNull(this.tableuspRptDailyShortageSummary.SegShortageExcessUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSegShortageExcessUSDNull() {
                this[this.tableuspRptDailyShortageSummary.SegShortageExcessUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsUnsegShortageExcessUSDNull() {
                return this.IsNull(this.tableuspRptDailyShortageSummary.UnsegShortageExcessUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetUnsegShortageExcessUSDNull() {
                this[this.tableuspRptDailyShortageSummary.UnsegShortageExcessUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsEkuivalenNull() {
                return this.IsNull(this.tableuspRptDailyShortageSummary.EkuivalenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetEkuivalenNull() {
                this[this.tableuspRptDailyShortageSummary.EkuivalenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTotalEkuivalenNull() {
                return this.IsNull(this.tableuspRptDailyShortageSummary.TotalEkuivalenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTotalEkuivalenNull() {
                this[this.tableuspRptDailyShortageSummary.TotalEkuivalenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLimitGroupDescNull() {
                return this.IsNull(this.tableuspRptDailyShortageSummary.LimitGroupDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLimitGroupDescNull() {
                this[this.tableuspRptDailyShortageSummary.LimitGroupDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsStatusSuspensiNull() {
                return this.IsNull(this.tableuspRptDailyShortageSummary.StatusSuspensiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetStatusSuspensiNull() {
                this[this.tableuspRptDailyShortageSummary.StatusSuspensiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsKursKIENull() {
                return this.IsNull(this.tableuspRptDailyShortageSummary.KursKIEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetKursKIENull() {
                this[this.tableuspRptDailyShortageSummary.KursKIEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSegShortageExcessIDR_negativeNull() {
                return this.IsNull(this.tableuspRptDailyShortageSummary.SegShortageExcessIDR_negativeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSegShortageExcessIDR_negativeNull() {
                this[this.tableuspRptDailyShortageSummary.SegShortageExcessIDR_negativeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsUnsegShortageExcessIDR_negativeNull() {
                return this.IsNull(this.tableuspRptDailyShortageSummary.UnsegShortageExcessIDR_negativeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetUnsegShortageExcessIDR_negativeNull() {
                this[this.tableuspRptDailyShortageSummary.UnsegShortageExcessIDR_negativeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSegShortageExcessUSD_negativeNull() {
                return this.IsNull(this.tableuspRptDailyShortageSummary.SegShortageExcessUSD_negativeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSegShortageExcessUSD_negativeNull() {
                this[this.tableuspRptDailyShortageSummary.SegShortageExcessUSD_negativeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsUnsegShortageExcessUSD_negativeNull() {
                return this.IsNull(this.tableuspRptDailyShortageSummary.UnsegShortageExcessUSD_negativeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetUnsegShortageExcessUSD_negativeNull() {
                this[this.tableuspRptDailyShortageSummary.UnsegShortageExcessUSD_negativeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ClearingMemberSuspenseStatusRow : global::System.Data.DataRow {
            
            private ClearingMemberSuspenseStatusDataTable tableClearingMemberSuspenseStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ClearingMemberSuspenseStatusRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableClearingMemberSuspenseStatus = ((ClearingMemberSuspenseStatusDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ClearingMemberSuspenseStatusId {
                get {
                    return ((decimal)(this[this.tableClearingMemberSuspenseStatus.ClearingMemberSuspenseStatusIdColumn]));
                }
                set {
                    this[this.tableClearingMemberSuspenseStatus.ClearingMemberSuspenseStatusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime BusinessDate {
                get {
                    return ((global::System.DateTime)(this[this.tableClearingMemberSuspenseStatus.BusinessDateColumn]));
                }
                set {
                    this[this.tableClearingMemberSuspenseStatus.BusinessDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ExchangeId {
                get {
                    return ((decimal)(this[this.tableClearingMemberSuspenseStatus.ExchangeIdColumn]));
                }
                set {
                    this[this.tableClearingMemberSuspenseStatus.ExchangeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal CMID {
                get {
                    return ((decimal)(this[this.tableClearingMemberSuspenseStatus.CMIDColumn]));
                }
                set {
                    this[this.tableClearingMemberSuspenseStatus.CMIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SuspenseOriginator {
                get {
                    return ((string)(this[this.tableClearingMemberSuspenseStatus.SuspenseOriginatorColumn]));
                }
                set {
                    this[this.tableClearingMemberSuspenseStatus.SuspenseOriginatorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal SuspenseRefId {
                get {
                    try {
                        return ((decimal)(this[this.tableClearingMemberSuspenseStatus.SuspenseRefIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SuspenseRefId\' in table \'ClearingMemberSuspenseStatus\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableClearingMemberSuspenseStatus.SuspenseRefIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SuspenseType {
                get {
                    return ((string)(this[this.tableClearingMemberSuspenseStatus.SuspenseTypeColumn]));
                }
                set {
                    this[this.tableClearingMemberSuspenseStatus.SuspenseTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime SuspenseTime {
                get {
                    return ((global::System.DateTime)(this[this.tableClearingMemberSuspenseStatus.SuspenseTimeColumn]));
                }
                set {
                    this[this.tableClearingMemberSuspenseStatus.SuspenseTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SuspenseConfirmed {
                get {
                    return ((string)(this[this.tableClearingMemberSuspenseStatus.SuspenseConfirmedColumn]));
                }
                set {
                    this[this.tableClearingMemberSuspenseStatus.SuspenseConfirmedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ActiveFlag {
                get {
                    return ((string)(this[this.tableClearingMemberSuspenseStatus.ActiveFlagColumn]));
                }
                set {
                    this[this.tableClearingMemberSuspenseStatus.ActiveFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ClearingMemberRow ClearingMemberRow {
                get {
                    return ((ClearingMemberRow)(this.GetParentRow(this.Table.ParentRelations["FK_ClearingMemberSuspenseStatus_ClearingMember"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ClearingMemberSuspenseStatus_ClearingMember"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSuspenseRefIdNull() {
                return this.IsNull(this.tableClearingMemberSuspenseStatus.SuspenseRefIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSuspenseRefIdNull() {
                this[this.tableClearingMemberSuspenseStatus.SuspenseRefIdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ClearingHouseSuspenseRow : global::System.Data.DataRow {
            
            private ClearingHouseSuspenseDataTable tableClearingHouseSuspense;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ClearingHouseSuspenseRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableClearingHouseSuspense = ((ClearingHouseSuspenseDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ClearingHouseSuspenseId {
                get {
                    return ((decimal)(this[this.tableClearingHouseSuspense.ClearingHouseSuspenseIdColumn]));
                }
                set {
                    this[this.tableClearingHouseSuspense.ClearingHouseSuspenseIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime BusinessDate {
                get {
                    return ((global::System.DateTime)(this[this.tableClearingHouseSuspense.BusinessDateColumn]));
                }
                set {
                    this[this.tableClearingHouseSuspense.BusinessDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ExchangeId {
                get {
                    return ((decimal)(this[this.tableClearingHouseSuspense.ExchangeIdColumn]));
                }
                set {
                    this[this.tableClearingHouseSuspense.ExchangeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int SuspenseNo {
                get {
                    return ((int)(this[this.tableClearingHouseSuspense.SuspenseNoColumn]));
                }
                set {
                    this[this.tableClearingHouseSuspense.SuspenseNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime SuspenseTime {
                get {
                    return ((global::System.DateTime)(this[this.tableClearingHouseSuspense.SuspenseTimeColumn]));
                }
                set {
                    this[this.tableClearingHouseSuspense.SuspenseTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime SendTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableClearingHouseSuspense.SendTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SendTime\' in table \'ClearingHouseSuspense\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClearingHouseSuspense.SendTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal CMID {
                get {
                    return ((decimal)(this[this.tableClearingHouseSuspense.CMIDColumn]));
                }
                set {
                    this[this.tableClearingHouseSuspense.CMIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SuspenseType {
                get {
                    return ((string)(this[this.tableClearingHouseSuspense.SuspenseTypeColumn]));
                }
                set {
                    this[this.tableClearingHouseSuspense.SuspenseTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableClearingHouseSuspense.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'ClearingHouseSuspense\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClearingHouseSuspense.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ClearingMemberRow ClearingMemberRow {
                get {
                    return ((ClearingMemberRow)(this.GetParentRow(this.Table.ParentRelations["FK_ClearingHouseSuspense_ClearingMember"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ClearingHouseSuspense_ClearingMember"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSendTimeNull() {
                return this.IsNull(this.tableClearingHouseSuspense.SendTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSendTimeNull() {
                this[this.tableClearingHouseSuspense.SendTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableClearingHouseSuspense.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tableClearingHouseSuspense.DescriptionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ClearingMemberRow : global::System.Data.DataRow {
            
            private ClearingMemberDataTable tableClearingMember;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ClearingMemberRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableClearingMember = ((ClearingMemberDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Code {
                get {
                    return ((string)(this[this.tableClearingMember.CodeColumn]));
                }
                set {
                    this[this.tableClearingMember.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ApprovalStatus {
                get {
                    return ((string)(this[this.tableClearingMember.ApprovalStatusColumn]));
                }
                set {
                    this[this.tableClearingMember.ApprovalStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime EffectiveStartDate {
                get {
                    return ((global::System.DateTime)(this[this.tableClearingMember.EffectiveStartDateColumn]));
                }
                set {
                    this[this.tableClearingMember.EffectiveStartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal CMID {
                get {
                    return ((decimal)(this[this.tableClearingMember.CMIDColumn]));
                }
                set {
                    this[this.tableClearingMember.CMIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableClearingMember.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'ClearingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClearingMember.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PPKP {
                get {
                    try {
                        return ((string)(this[this.tableClearingMember.PPKPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PPKP\' in table \'ClearingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClearingMember.PPKPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Website {
                get {
                    try {
                        return ((string)(this[this.tableClearingMember.WebsiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Website\' in table \'ClearingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClearingMember.WebsiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CMStatus {
                get {
                    try {
                        return ((string)(this[this.tableClearingMember.CMStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CMStatus\' in table \'ClearingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClearingMember.CMStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string AgreementNo {
                get {
                    try {
                        return ((string)(this[this.tableClearingMember.AgreementNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgreementNo\' in table \'ClearingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClearingMember.AgreementNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime AgreementDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableClearingMember.AgreementDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgreementDate\' in table \'ClearingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClearingMember.AgreementDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ExchangeStatus {
                get {
                    try {
                        return ((string)(this[this.tableClearingMember.ExchangeStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExchangeStatus\' in table \'ClearingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClearingMember.ExchangeStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CertNo {
                get {
                    try {
                        return ((string)(this[this.tableClearingMember.CertNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CertNo\' in table \'ClearingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClearingMember.CertNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime CertDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableClearingMember.CertDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CertDate\' in table \'ClearingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClearingMember.CertDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SPATraderNo {
                get {
                    try {
                        return ((string)(this[this.tableClearingMember.SPATraderNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SPATraderNo\' in table \'ClearingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClearingMember.SPATraderNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime SPATraderDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableClearingMember.SPATraderDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SPATraderDate\' in table \'ClearingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClearingMember.SPATraderDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SPABrokerNo {
                get {
                    try {
                        return ((string)(this[this.tableClearingMember.SPABrokerNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SPABrokerNo\' in table \'ClearingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClearingMember.SPABrokerNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime SPABrokerDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableClearingMember.SPABrokerDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SPABrokerDate\' in table \'ClearingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClearingMember.SPABrokerDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PALNLicense {
                get {
                    try {
                        return ((string)(this[this.tableClearingMember.PALNLicenseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PALNLicense\' in table \'ClearingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClearingMember.PALNLicenseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime CompAnniversary {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableClearingMember.CompAnniversaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompAnniversary\' in table \'ClearingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClearingMember.CompAnniversaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal CompImageID {
                get {
                    try {
                        return ((decimal)(this[this.tableClearingMember.CompImageIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompImageID\' in table \'ClearingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClearingMember.CompImageIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string AgreementType {
                get {
                    try {
                        return ((string)(this[this.tableClearingMember.AgreementTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgreementType\' in table \'ClearingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClearingMember.AgreementTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableClearingMember.CreatedByColumn]));
                }
                set {
                    this[this.tableClearingMember.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableClearingMember.CreatedDateColumn]));
                }
                set {
                    this[this.tableClearingMember.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LastUpdatedBy {
                get {
                    return ((string)(this[this.tableClearingMember.LastUpdatedByColumn]));
                }
                set {
                    this[this.tableClearingMember.LastUpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime LastUpdatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableClearingMember.LastUpdatedDateColumn]));
                }
                set {
                    this[this.tableClearingMember.LastUpdatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime EffectiveEndDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableClearingMember.EffectiveEndDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EffectiveEndDate\' in table \'ClearingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClearingMember.EffectiveEndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ApprovalDesc {
                get {
                    try {
                        return ((string)(this[this.tableClearingMember.ApprovalDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApprovalDesc\' in table \'ClearingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClearingMember.ApprovalDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal OriginalID {
                get {
                    try {
                        return ((decimal)(this[this.tableClearingMember.OriginalIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalID\' in table \'ClearingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClearingMember.OriginalIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ActionFlag {
                get {
                    try {
                        return ((string)(this[this.tableClearingMember.ActionFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActionFlag\' in table \'ClearingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClearingMember.ActionFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal InitialMarginMultiplier {
                get {
                    return ((decimal)(this[this.tableClearingMember.InitialMarginMultiplierColumn]));
                }
                set {
                    this[this.tableClearingMember.InitialMarginMultiplierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal MinReqInitialMarginIDR {
                get {
                    return ((decimal)(this[this.tableClearingMember.MinReqInitialMarginIDRColumn]));
                }
                set {
                    this[this.tableClearingMember.MinReqInitialMarginIDRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal MinReqInitialMarginUSD {
                get {
                    return ((decimal)(this[this.tableClearingMember.MinReqInitialMarginUSDColumn]));
                }
                set {
                    this[this.tableClearingMember.MinReqInitialMarginUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string typeMM {
                get {
                    try {
                        return ((string)(this[this.tableClearingMember.typeMMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'typeMM\' in table \'ClearingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClearingMember.typeMMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableClearingMember.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetNameNull() {
                this[this.tableClearingMember.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPPKPNull() {
                return this.IsNull(this.tableClearingMember.PPKPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPPKPNull() {
                this[this.tableClearingMember.PPKPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsWebsiteNull() {
                return this.IsNull(this.tableClearingMember.WebsiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetWebsiteNull() {
                this[this.tableClearingMember.WebsiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCMStatusNull() {
                return this.IsNull(this.tableClearingMember.CMStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCMStatusNull() {
                this[this.tableClearingMember.CMStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAgreementNoNull() {
                return this.IsNull(this.tableClearingMember.AgreementNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAgreementNoNull() {
                this[this.tableClearingMember.AgreementNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAgreementDateNull() {
                return this.IsNull(this.tableClearingMember.AgreementDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAgreementDateNull() {
                this[this.tableClearingMember.AgreementDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsExchangeStatusNull() {
                return this.IsNull(this.tableClearingMember.ExchangeStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetExchangeStatusNull() {
                this[this.tableClearingMember.ExchangeStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCertNoNull() {
                return this.IsNull(this.tableClearingMember.CertNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCertNoNull() {
                this[this.tableClearingMember.CertNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCertDateNull() {
                return this.IsNull(this.tableClearingMember.CertDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCertDateNull() {
                this[this.tableClearingMember.CertDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSPATraderNoNull() {
                return this.IsNull(this.tableClearingMember.SPATraderNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSPATraderNoNull() {
                this[this.tableClearingMember.SPATraderNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSPATraderDateNull() {
                return this.IsNull(this.tableClearingMember.SPATraderDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSPATraderDateNull() {
                this[this.tableClearingMember.SPATraderDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSPABrokerNoNull() {
                return this.IsNull(this.tableClearingMember.SPABrokerNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSPABrokerNoNull() {
                this[this.tableClearingMember.SPABrokerNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSPABrokerDateNull() {
                return this.IsNull(this.tableClearingMember.SPABrokerDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSPABrokerDateNull() {
                this[this.tableClearingMember.SPABrokerDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPALNLicenseNull() {
                return this.IsNull(this.tableClearingMember.PALNLicenseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPALNLicenseNull() {
                this[this.tableClearingMember.PALNLicenseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCompAnniversaryNull() {
                return this.IsNull(this.tableClearingMember.CompAnniversaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCompAnniversaryNull() {
                this[this.tableClearingMember.CompAnniversaryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCompImageIDNull() {
                return this.IsNull(this.tableClearingMember.CompImageIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCompImageIDNull() {
                this[this.tableClearingMember.CompImageIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAgreementTypeNull() {
                return this.IsNull(this.tableClearingMember.AgreementTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAgreementTypeNull() {
                this[this.tableClearingMember.AgreementTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsEffectiveEndDateNull() {
                return this.IsNull(this.tableClearingMember.EffectiveEndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetEffectiveEndDateNull() {
                this[this.tableClearingMember.EffectiveEndDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsApprovalDescNull() {
                return this.IsNull(this.tableClearingMember.ApprovalDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetApprovalDescNull() {
                this[this.tableClearingMember.ApprovalDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsOriginalIDNull() {
                return this.IsNull(this.tableClearingMember.OriginalIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetOriginalIDNull() {
                this[this.tableClearingMember.OriginalIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsActionFlagNull() {
                return this.IsNull(this.tableClearingMember.ActionFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetActionFlagNull() {
                this[this.tableClearingMember.ActionFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IstypeMMNull() {
                return this.IsNull(this.tableClearingMember.typeMMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SettypeMMNull() {
                this[this.tableClearingMember.typeMMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ClearingMemberSuspenseStatusRow[] GetClearingMemberSuspenseStatusRows() {
                if ((this.Table.ChildRelations["FK_ClearingMemberSuspenseStatus_ClearingMember"] == null)) {
                    return new ClearingMemberSuspenseStatusRow[0];
                }
                else {
                    return ((ClearingMemberSuspenseStatusRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ClearingMemberSuspenseStatus_ClearingMember"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ClearingHouseSuspenseRow[] GetClearingHouseSuspenseRows() {
                if ((this.Table.ChildRelations["FK_ClearingHouseSuspense_ClearingMember"] == null)) {
                    return new ClearingHouseSuspenseRow[0];
                }
                else {
                    return ((ClearingHouseSuspenseRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ClearingHouseSuspense_ClearingMember"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CommodityRow : global::System.Data.DataRow {
            
            private CommodityDataTable tableCommodity;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal CommodityRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCommodity = ((CommodityDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ProductID {
                get {
                    return ((decimal)(this[this.tableCommodity.ProductIDColumn]));
                }
                set {
                    this[this.tableCommodity.ProductIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ExchangeId {
                get {
                    return ((decimal)(this[this.tableCommodity.ExchangeIdColumn]));
                }
                set {
                    this[this.tableCommodity.ExchangeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime EffectiveStartDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCommodity.EffectiveStartDateColumn]));
                }
                set {
                    this[this.tableCommodity.EffectiveStartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ApprovalStatus {
                get {
                    return ((string)(this[this.tableCommodity.ApprovalStatusColumn]));
                }
                set {
                    this[this.tableCommodity.ApprovalStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CommodityCode {
                get {
                    return ((string)(this[this.tableCommodity.CommodityCodeColumn]));
                }
                set {
                    this[this.tableCommodity.CommodityCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal CommodityID {
                get {
                    return ((decimal)(this[this.tableCommodity.CommodityIDColumn]));
                }
                set {
                    this[this.tableCommodity.CommodityIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ReffCommID {
                get {
                    try {
                        return ((decimal)(this[this.tableCommodity.ReffCommIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReffCommID\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.ReffCommIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Unit {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.UnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.UnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal PEG {
                get {
                    try {
                        return ((decimal)(this[this.tableCommodity.PEGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PEG\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.PEGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string VMIRCACalType {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.VMIRCACalTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VMIRCACalType\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.VMIRCACalTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CrossCurr {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.CrossCurrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CrossCurr\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.CrossCurrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SettlementFactor {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.SettlementFactorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SettlementFactor\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.SettlementFactorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int DayRef {
                get {
                    try {
                        return ((int)(this[this.tableCommodity.DayRefColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DayRef\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.DayRefColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Divisor {
                get {
                    try {
                        return ((decimal)(this[this.tableCommodity.DivisorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Divisor\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.DivisorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CommName {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.CommNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommName\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.CommNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal MarginTender {
                get {
                    try {
                        return ((decimal)(this[this.tableCommodity.MarginTenderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarginTender\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.MarginTenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal MarginSpot {
                get {
                    try {
                        return ((decimal)(this[this.tableCommodity.MarginSpotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarginSpot\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.MarginSpotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal MarginRemote {
                get {
                    try {
                        return ((decimal)(this[this.tableCommodity.MarginRemoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarginRemote\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.MarginRemoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal CalSpreadRemoteMargin {
                get {
                    try {
                        return ((decimal)(this[this.tableCommodity.CalSpreadRemoteMarginColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CalSpreadRemoteMargin\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.CalSpreadRemoteMarginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CrossCurrProduct {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.CrossCurrProductColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CrossCurrProduct\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.CrossCurrProductColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CreatedBy {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime CreatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCommodity.CreatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedDate\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal HomeCurrencyID {
                get {
                    try {
                        return ((decimal)(this[this.tableCommodity.HomeCurrencyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HomeCurrencyID\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.HomeCurrencyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LastUpdatedBy {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.LastUpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastUpdatedBy\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.LastUpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime LastUpdatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCommodity.LastUpdatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastUpdatedDate\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.LastUpdatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime EffectiveEndDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCommodity.EffectiveEndDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EffectiveEndDate\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.EffectiveEndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ApprovalDesc {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.ApprovalDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApprovalDesc\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.ApprovalDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string IsKIE {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.IsKIEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsKIE\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.IsKIEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SettlementType {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.SettlementTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SettlementType\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.SettlementTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ContractSize {
                get {
                    try {
                        return ((decimal)(this[this.tableCommodity.ContractSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractSize\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.ContractSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string IsIncentive {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.IsIncentiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsIncentive\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.IsIncentiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal OriginalCommodityID {
                get {
                    try {
                        return ((decimal)(this[this.tableCommodity.OriginalCommodityIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalCommodityID\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.OriginalCommodityIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ActionFlag {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.ActionFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActionFlag\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.ActionFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string TenderReqType {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.TenderReqTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TenderReqType\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.TenderReqTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ModeK1 {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.ModeK1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModeK1\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.ModeK1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ValueK1 {
                get {
                    try {
                        return ((decimal)(this[this.tableCommodity.ValueK1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueK1\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.ValueK1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ContractRefK1 {
                get {
                    try {
                        return ((decimal)(this[this.tableCommodity.ContractRefK1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractRefK1\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.ContractRefK1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ModeK2 {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.ModeK2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModeK2\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.ModeK2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ValueK2 {
                get {
                    try {
                        return ((decimal)(this[this.tableCommodity.ValueK2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueK2\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.ValueK2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ContractRefK2 {
                get {
                    try {
                        return ((decimal)(this[this.tableCommodity.ContractRefK2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractRefK2\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.ContractRefK2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ModeD {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.ModeDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModeD\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.ModeDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ValueD {
                get {
                    try {
                        return ((decimal)(this[this.tableCommodity.ValueDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueD\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.ValueDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ContractRefD {
                get {
                    try {
                        return ((decimal)(this[this.tableCommodity.ContractRefDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractRefD\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.ContractRefDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ModeIM {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.ModeIMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModeIM\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.ModeIMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal PercentageSpotIM {
                get {
                    try {
                        return ((decimal)(this[this.tableCommodity.PercentageSpotIMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PercentageSpotIM\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.PercentageSpotIMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal PercentageRemoteIM {
                get {
                    try {
                        return ((decimal)(this[this.tableCommodity.PercentageRemoteIMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PercentageRemoteIM\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.PercentageRemoteIMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ModeFee {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.ModeFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModeFee\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.ModeFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string isMarketMaker {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.isMarketMakerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isMarketMaker\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.isMarketMakerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CommodityRow CommodityRowParent {
                get {
                    return ((CommodityRow)(this.GetParentRow(this.Table.ParentRelations["R_416"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["R_416"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsReffCommIDNull() {
                return this.IsNull(this.tableCommodity.ReffCommIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetReffCommIDNull() {
                this[this.tableCommodity.ReffCommIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsUnitNull() {
                return this.IsNull(this.tableCommodity.UnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetUnitNull() {
                this[this.tableCommodity.UnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPEGNull() {
                return this.IsNull(this.tableCommodity.PEGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPEGNull() {
                this[this.tableCommodity.PEGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsVMIRCACalTypeNull() {
                return this.IsNull(this.tableCommodity.VMIRCACalTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetVMIRCACalTypeNull() {
                this[this.tableCommodity.VMIRCACalTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCrossCurrNull() {
                return this.IsNull(this.tableCommodity.CrossCurrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCrossCurrNull() {
                this[this.tableCommodity.CrossCurrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSettlementFactorNull() {
                return this.IsNull(this.tableCommodity.SettlementFactorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSettlementFactorNull() {
                this[this.tableCommodity.SettlementFactorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDayRefNull() {
                return this.IsNull(this.tableCommodity.DayRefColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDayRefNull() {
                this[this.tableCommodity.DayRefColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDivisorNull() {
                return this.IsNull(this.tableCommodity.DivisorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDivisorNull() {
                this[this.tableCommodity.DivisorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCommNameNull() {
                return this.IsNull(this.tableCommodity.CommNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCommNameNull() {
                this[this.tableCommodity.CommNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMarginTenderNull() {
                return this.IsNull(this.tableCommodity.MarginTenderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMarginTenderNull() {
                this[this.tableCommodity.MarginTenderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMarginSpotNull() {
                return this.IsNull(this.tableCommodity.MarginSpotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMarginSpotNull() {
                this[this.tableCommodity.MarginSpotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMarginRemoteNull() {
                return this.IsNull(this.tableCommodity.MarginRemoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMarginRemoteNull() {
                this[this.tableCommodity.MarginRemoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCalSpreadRemoteMarginNull() {
                return this.IsNull(this.tableCommodity.CalSpreadRemoteMarginColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCalSpreadRemoteMarginNull() {
                this[this.tableCommodity.CalSpreadRemoteMarginColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCrossCurrProductNull() {
                return this.IsNull(this.tableCommodity.CrossCurrProductColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCrossCurrProductNull() {
                this[this.tableCommodity.CrossCurrProductColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableCommodity.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCreatedByNull() {
                this[this.tableCommodity.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCreatedDateNull() {
                return this.IsNull(this.tableCommodity.CreatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCreatedDateNull() {
                this[this.tableCommodity.CreatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsHomeCurrencyIDNull() {
                return this.IsNull(this.tableCommodity.HomeCurrencyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetHomeCurrencyIDNull() {
                this[this.tableCommodity.HomeCurrencyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLastUpdatedByNull() {
                return this.IsNull(this.tableCommodity.LastUpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLastUpdatedByNull() {
                this[this.tableCommodity.LastUpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLastUpdatedDateNull() {
                return this.IsNull(this.tableCommodity.LastUpdatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLastUpdatedDateNull() {
                this[this.tableCommodity.LastUpdatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsEffectiveEndDateNull() {
                return this.IsNull(this.tableCommodity.EffectiveEndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetEffectiveEndDateNull() {
                this[this.tableCommodity.EffectiveEndDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsApprovalDescNull() {
                return this.IsNull(this.tableCommodity.ApprovalDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetApprovalDescNull() {
                this[this.tableCommodity.ApprovalDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsIsKIENull() {
                return this.IsNull(this.tableCommodity.IsKIEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetIsKIENull() {
                this[this.tableCommodity.IsKIEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSettlementTypeNull() {
                return this.IsNull(this.tableCommodity.SettlementTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSettlementTypeNull() {
                this[this.tableCommodity.SettlementTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsContractSizeNull() {
                return this.IsNull(this.tableCommodity.ContractSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetContractSizeNull() {
                this[this.tableCommodity.ContractSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsIsIncentiveNull() {
                return this.IsNull(this.tableCommodity.IsIncentiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetIsIncentiveNull() {
                this[this.tableCommodity.IsIncentiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsOriginalCommodityIDNull() {
                return this.IsNull(this.tableCommodity.OriginalCommodityIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetOriginalCommodityIDNull() {
                this[this.tableCommodity.OriginalCommodityIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsActionFlagNull() {
                return this.IsNull(this.tableCommodity.ActionFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetActionFlagNull() {
                this[this.tableCommodity.ActionFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTenderReqTypeNull() {
                return this.IsNull(this.tableCommodity.TenderReqTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTenderReqTypeNull() {
                this[this.tableCommodity.TenderReqTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsModeK1Null() {
                return this.IsNull(this.tableCommodity.ModeK1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetModeK1Null() {
                this[this.tableCommodity.ModeK1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsValueK1Null() {
                return this.IsNull(this.tableCommodity.ValueK1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetValueK1Null() {
                this[this.tableCommodity.ValueK1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsContractRefK1Null() {
                return this.IsNull(this.tableCommodity.ContractRefK1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetContractRefK1Null() {
                this[this.tableCommodity.ContractRefK1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsModeK2Null() {
                return this.IsNull(this.tableCommodity.ModeK2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetModeK2Null() {
                this[this.tableCommodity.ModeK2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsValueK2Null() {
                return this.IsNull(this.tableCommodity.ValueK2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetValueK2Null() {
                this[this.tableCommodity.ValueK2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsContractRefK2Null() {
                return this.IsNull(this.tableCommodity.ContractRefK2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetContractRefK2Null() {
                this[this.tableCommodity.ContractRefK2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsModeDNull() {
                return this.IsNull(this.tableCommodity.ModeDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetModeDNull() {
                this[this.tableCommodity.ModeDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsValueDNull() {
                return this.IsNull(this.tableCommodity.ValueDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetValueDNull() {
                this[this.tableCommodity.ValueDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsContractRefDNull() {
                return this.IsNull(this.tableCommodity.ContractRefDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetContractRefDNull() {
                this[this.tableCommodity.ContractRefDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsModeIMNull() {
                return this.IsNull(this.tableCommodity.ModeIMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetModeIMNull() {
                this[this.tableCommodity.ModeIMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPercentageSpotIMNull() {
                return this.IsNull(this.tableCommodity.PercentageSpotIMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPercentageSpotIMNull() {
                this[this.tableCommodity.PercentageSpotIMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPercentageRemoteIMNull() {
                return this.IsNull(this.tableCommodity.PercentageRemoteIMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPercentageRemoteIMNull() {
                this[this.tableCommodity.PercentageRemoteIMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsModeFeeNull() {
                return this.IsNull(this.tableCommodity.ModeFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetModeFeeNull() {
                this[this.tableCommodity.ModeFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsisMarketMakerNull() {
                return this.IsNull(this.tableCommodity.isMarketMakerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetisMarketMakerNull() {
                this[this.tableCommodity.isMarketMakerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CommodityRow[] GetCommodityRows() {
                if ((this.Table.ChildRelations["R_416"] == null)) {
                    return new CommodityRow[0];
                }
                else {
                    return ((CommodityRow[])(base.GetChildRows(this.Table.ChildRelations["R_416"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public IRCARow[] GetIRCARows() {
                if ((this.Table.ChildRelations["R_372"] == null)) {
                    return new IRCARow[0];
                }
                else {
                    return ((IRCARow[])(base.GetChildRows(this.Table.ChildRelations["R_372"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ContractRow : global::System.Data.DataRow {
            
            private ContractDataTable tableContract;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ContractRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableContract = ((ContractDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal CommodityID {
                get {
                    return ((decimal)(this[this.tableContract.CommodityIDColumn]));
                }
                set {
                    this[this.tableContract.CommodityIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int ContractMonth {
                get {
                    return ((int)(this[this.tableContract.ContractMonthColumn]));
                }
                set {
                    this[this.tableContract.ContractMonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int ContractYear {
                get {
                    return ((int)(this[this.tableContract.ContractYearColumn]));
                }
                set {
                    this[this.tableContract.ContractYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ApprovalStatus {
                get {
                    return ((string)(this[this.tableContract.ApprovalStatusColumn]));
                }
                set {
                    this[this.tableContract.ApprovalStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime EffectiveStartDate {
                get {
                    return ((global::System.DateTime)(this[this.tableContract.EffectiveStartDateColumn]));
                }
                set {
                    this[this.tableContract.EffectiveStartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ContractID {
                get {
                    return ((decimal)(this[this.tableContract.ContractIDColumn]));
                }
                set {
                    this[this.tableContract.ContractIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ContractSize {
                get {
                    return ((decimal)(this[this.tableContract.ContractSizeColumn]));
                }
                set {
                    this[this.tableContract.ContractSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SettlementType {
                get {
                    return ((string)(this[this.tableContract.SettlementTypeColumn]));
                }
                set {
                    this[this.tableContract.SettlementTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableContract.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Unit {
                get {
                    return ((string)(this[this.tableContract.UnitColumn]));
                }
                set {
                    this[this.tableContract.UnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime StartDate {
                get {
                    return ((global::System.DateTime)(this[this.tableContract.StartDateColumn]));
                }
                set {
                    this[this.tableContract.StartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime EndSpot {
                get {
                    return ((global::System.DateTime)(this[this.tableContract.EndSpotColumn]));
                }
                set {
                    this[this.tableContract.EndSpotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime StartSpot {
                get {
                    return ((global::System.DateTime)(this[this.tableContract.StartSpotColumn]));
                }
                set {
                    this[this.tableContract.StartSpotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal PEG {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.PEGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PEG\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.PEGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string VMIRCACalType {
                get {
                    try {
                        return ((string)(this[this.tableContract.VMIRCACalTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VMIRCACalType\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.VMIRCACalTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SettlementFactor {
                get {
                    try {
                        return ((string)(this[this.tableContract.SettlementFactorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SettlementFactor\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.SettlementFactorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int DayRef {
                get {
                    try {
                        return ((int)(this[this.tableContract.DayRefColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DayRef\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.DayRefColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Divisor {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.DivisorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Divisor\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.DivisorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal MarginTender {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.MarginTenderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarginTender\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.MarginTenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal MarginSpot {
                get {
                    return ((decimal)(this[this.tableContract.MarginSpotColumn]));
                }
                set {
                    this[this.tableContract.MarginSpotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal MarginRemote {
                get {
                    return ((decimal)(this[this.tableContract.MarginRemoteColumn]));
                }
                set {
                    this[this.tableContract.MarginRemoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal CalSpreadRemoteMargin {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.CalSpreadRemoteMarginColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CalSpreadRemoteMargin\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.CalSpreadRemoteMarginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string IsKIE {
                get {
                    return ((string)(this[this.tableContract.IsKIEColumn]));
                }
                set {
                    this[this.tableContract.IsKIEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableContract.CreatedByColumn]));
                }
                set {
                    this[this.tableContract.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableContract.CreatedDateColumn]));
                }
                set {
                    this[this.tableContract.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LastUpdatedBy {
                get {
                    return ((string)(this[this.tableContract.LastUpdatedByColumn]));
                }
                set {
                    this[this.tableContract.LastUpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime LastUpdatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableContract.LastUpdatedDateColumn]));
                }
                set {
                    this[this.tableContract.LastUpdatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime EffectiveEndDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableContract.EffectiveEndDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EffectiveEndDate\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.EffectiveEndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ApprovalDesc {
                get {
                    try {
                        return ((string)(this[this.tableContract.ApprovalDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApprovalDesc\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ApprovalDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal HomeCurrencyID {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.HomeCurrencyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HomeCurrencyID\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.HomeCurrencyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CrossCurr {
                get {
                    return ((string)(this[this.tableContract.CrossCurrColumn]));
                }
                set {
                    this[this.tableContract.CrossCurrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CrossCurrProduct {
                get {
                    try {
                        return ((string)(this[this.tableContract.CrossCurrProductColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CrossCurrProduct\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.CrossCurrProductColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal OriginalContractID {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.OriginalContractIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalContractID\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.OriginalContractIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ActionFlag {
                get {
                    try {
                        return ((string)(this[this.tableContract.ActionFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActionFlag\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ActionFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string TenderReqType {
                get {
                    try {
                        return ((string)(this[this.tableContract.TenderReqTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TenderReqType\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.TenderReqTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal SubCategoryID {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.SubCategoryIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubCategoryID\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.SubCategoryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ModeK1 {
                get {
                    try {
                        return ((string)(this[this.tableContract.ModeK1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModeK1\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ModeK1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ValueK1 {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.ValueK1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueK1\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ValueK1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ContractRefK1 {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.ContractRefK1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractRefK1\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ContractRefK1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ModeK2 {
                get {
                    try {
                        return ((string)(this[this.tableContract.ModeK2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModeK2\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ModeK2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ValueK2 {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.ValueK2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueK2\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ValueK2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ContractRefK2 {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.ContractRefK2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractRefK2\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ContractRefK2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ModeD {
                get {
                    try {
                        return ((string)(this[this.tableContract.ModeDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModeD\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ModeDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ValueD {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.ValueDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueD\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ValueDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ContractRefD {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.ContractRefDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractRefD\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ContractRefDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ModeIM {
                get {
                    try {
                        return ((string)(this[this.tableContract.ModeIMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModeIM\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ModeIMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal PercentageSpotIM {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.PercentageSpotIMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PercentageSpotIM\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.PercentageSpotIMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal PercentageRemoteIM {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.PercentageRemoteIMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PercentageRemoteIM\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.PercentageRemoteIMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ModeFee {
                get {
                    try {
                        return ((string)(this[this.tableContract.ModeFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModeFee\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ModeFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableContract.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tableContract.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPEGNull() {
                return this.IsNull(this.tableContract.PEGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPEGNull() {
                this[this.tableContract.PEGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsVMIRCACalTypeNull() {
                return this.IsNull(this.tableContract.VMIRCACalTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetVMIRCACalTypeNull() {
                this[this.tableContract.VMIRCACalTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSettlementFactorNull() {
                return this.IsNull(this.tableContract.SettlementFactorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSettlementFactorNull() {
                this[this.tableContract.SettlementFactorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDayRefNull() {
                return this.IsNull(this.tableContract.DayRefColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDayRefNull() {
                this[this.tableContract.DayRefColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDivisorNull() {
                return this.IsNull(this.tableContract.DivisorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDivisorNull() {
                this[this.tableContract.DivisorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMarginTenderNull() {
                return this.IsNull(this.tableContract.MarginTenderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMarginTenderNull() {
                this[this.tableContract.MarginTenderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCalSpreadRemoteMarginNull() {
                return this.IsNull(this.tableContract.CalSpreadRemoteMarginColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCalSpreadRemoteMarginNull() {
                this[this.tableContract.CalSpreadRemoteMarginColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsEffectiveEndDateNull() {
                return this.IsNull(this.tableContract.EffectiveEndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetEffectiveEndDateNull() {
                this[this.tableContract.EffectiveEndDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsApprovalDescNull() {
                return this.IsNull(this.tableContract.ApprovalDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetApprovalDescNull() {
                this[this.tableContract.ApprovalDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsHomeCurrencyIDNull() {
                return this.IsNull(this.tableContract.HomeCurrencyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetHomeCurrencyIDNull() {
                this[this.tableContract.HomeCurrencyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCrossCurrProductNull() {
                return this.IsNull(this.tableContract.CrossCurrProductColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCrossCurrProductNull() {
                this[this.tableContract.CrossCurrProductColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsOriginalContractIDNull() {
                return this.IsNull(this.tableContract.OriginalContractIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetOriginalContractIDNull() {
                this[this.tableContract.OriginalContractIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsActionFlagNull() {
                return this.IsNull(this.tableContract.ActionFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetActionFlagNull() {
                this[this.tableContract.ActionFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTenderReqTypeNull() {
                return this.IsNull(this.tableContract.TenderReqTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTenderReqTypeNull() {
                this[this.tableContract.TenderReqTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSubCategoryIDNull() {
                return this.IsNull(this.tableContract.SubCategoryIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSubCategoryIDNull() {
                this[this.tableContract.SubCategoryIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsModeK1Null() {
                return this.IsNull(this.tableContract.ModeK1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetModeK1Null() {
                this[this.tableContract.ModeK1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsValueK1Null() {
                return this.IsNull(this.tableContract.ValueK1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetValueK1Null() {
                this[this.tableContract.ValueK1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsContractRefK1Null() {
                return this.IsNull(this.tableContract.ContractRefK1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetContractRefK1Null() {
                this[this.tableContract.ContractRefK1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsModeK2Null() {
                return this.IsNull(this.tableContract.ModeK2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetModeK2Null() {
                this[this.tableContract.ModeK2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsValueK2Null() {
                return this.IsNull(this.tableContract.ValueK2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetValueK2Null() {
                this[this.tableContract.ValueK2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsContractRefK2Null() {
                return this.IsNull(this.tableContract.ContractRefK2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetContractRefK2Null() {
                this[this.tableContract.ContractRefK2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsModeDNull() {
                return this.IsNull(this.tableContract.ModeDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetModeDNull() {
                this[this.tableContract.ModeDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsValueDNull() {
                return this.IsNull(this.tableContract.ValueDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetValueDNull() {
                this[this.tableContract.ValueDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsContractRefDNull() {
                return this.IsNull(this.tableContract.ContractRefDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetContractRefDNull() {
                this[this.tableContract.ContractRefDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsModeIMNull() {
                return this.IsNull(this.tableContract.ModeIMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetModeIMNull() {
                this[this.tableContract.ModeIMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPercentageSpotIMNull() {
                return this.IsNull(this.tableContract.PercentageSpotIMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPercentageSpotIMNull() {
                this[this.tableContract.PercentageSpotIMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPercentageRemoteIMNull() {
                return this.IsNull(this.tableContract.PercentageRemoteIMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPercentageRemoteIMNull() {
                this[this.tableContract.PercentageRemoteIMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsModeFeeNull() {
                return this.IsNull(this.tableContract.ModeFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetModeFeeNull() {
                this[this.tableContract.ModeFeeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SubCategoryRow : global::System.Data.DataRow {
            
            private SubCategoryDataTable tableSubCategory;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SubCategoryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSubCategory = ((SubCategoryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SubCategoryCode {
                get {
                    return ((string)(this[this.tableSubCategory.SubCategoryCodeColumn]));
                }
                set {
                    this[this.tableSubCategory.SubCategoryCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal SubCategoryID {
                get {
                    return ((decimal)(this[this.tableSubCategory.SubCategoryIDColumn]));
                }
                set {
                    this[this.tableSubCategory.SubCategoryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal CategoryID {
                get {
                    return ((decimal)(this[this.tableSubCategory.CategoryIDColumn]));
                }
                set {
                    this[this.tableSubCategory.CategoryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableSubCategory.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'SubCategory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSubCategory.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableSubCategory.CreatedByColumn]));
                }
                set {
                    this[this.tableSubCategory.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableSubCategory.CreatedDateColumn]));
                }
                set {
                    this[this.tableSubCategory.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LastUpdatedBy {
                get {
                    return ((string)(this[this.tableSubCategory.LastUpdatedByColumn]));
                }
                set {
                    this[this.tableSubCategory.LastUpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime LastUpdatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableSubCategory.LastUpdatedDateColumn]));
                }
                set {
                    this[this.tableSubCategory.LastUpdatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ActiveFlag {
                get {
                    return ((string)(this[this.tableSubCategory.ActiveFlagColumn]));
                }
                set {
                    this[this.tableSubCategory.ActiveFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal AllowPriceIncrePct {
                get {
                    return ((decimal)(this[this.tableSubCategory.AllowPriceIncrePctColumn]));
                }
                set {
                    this[this.tableSubCategory.AllowPriceIncrePctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal AllowPriceDecrePct {
                get {
                    return ((decimal)(this[this.tableSubCategory.AllowPriceDecrePctColumn]));
                }
                set {
                    this[this.tableSubCategory.AllowPriceDecrePctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableSubCategory.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tableSubCategory.DescriptionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Get_Tradefeed_ExceptionRow : global::System.Data.DataRow {
            
            private Get_Tradefeed_ExceptionDataTable tableGet_Tradefeed_Exception;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal Get_Tradefeed_ExceptionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGet_Tradefeed_Exception = ((Get_Tradefeed_ExceptionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CommodityCode {
                get {
                    try {
                        return ((string)(this[this.tableGet_Tradefeed_Exception.CommodityCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommodityCode\' in table \'Get_Tradefeed_Exception\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGet_Tradefeed_Exception.CommodityCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Contract_Year {
                get {
                    try {
                        return ((string)(this[this.tableGet_Tradefeed_Exception.Contract_YearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Contract_Year\' in table \'Get_Tradefeed_Exception\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGet_Tradefeed_Exception.Contract_YearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Contract_Month {
                get {
                    try {
                        return ((string)(this[this.tableGet_Tradefeed_Exception.Contract_MonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Contract_Month\' in table \'Get_Tradefeed_Exception\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGet_Tradefeed_Exception.Contract_MonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCommodityCodeNull() {
                return this.IsNull(this.tableGet_Tradefeed_Exception.CommodityCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCommodityCodeNull() {
                this[this.tableGet_Tradefeed_Exception.CommodityCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsContract_YearNull() {
                return this.IsNull(this.tableGet_Tradefeed_Exception.Contract_YearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetContract_YearNull() {
                this[this.tableGet_Tradefeed_Exception.Contract_YearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsContract_MonthNull() {
                return this.IsNull(this.tableGet_Tradefeed_Exception.Contract_MonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetContract_MonthNull() {
                this[this.tableGet_Tradefeed_Exception.Contract_MonthColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class uspTradeFeedExceptionApproveAllRow : global::System.Data.DataRow {
            
            private uspTradeFeedExceptionApproveAllDataTable tableuspTradeFeedExceptionApproveAll;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal uspTradeFeedExceptionApproveAllRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableuspTradeFeedExceptionApproveAll = ((uspTradeFeedExceptionApproveAllDataTable)(this.Table));
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class iDfsFasPalnRow : global::System.Data.DataRow {
            
            private iDfsFasPalnDataTable tableiDfsFasPaln;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal iDfsFasPalnRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableiDfsFasPaln = ((iDfsFasPalnDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal CMID {
                get {
                    return ((decimal)(this[this.tableiDfsFasPaln.CMIDColumn]));
                }
                set {
                    this[this.tableiDfsFasPaln.CMIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime BusinessDate {
                get {
                    return ((global::System.DateTime)(this[this.tableiDfsFasPaln.BusinessDateColumn]));
                }
                set {
                    this[this.tableiDfsFasPaln.BusinessDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal PALN {
                get {
                    try {
                        return ((decimal)(this[this.tableiDfsFasPaln.PALNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PALN\' in table \'iDfsFasPaln\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableiDfsFasPaln.PALNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableiDfsFasPaln.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'iDfsFasPaln\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableiDfsFasPaln.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPALNNull() {
                return this.IsNull(this.tableiDfsFasPaln.PALNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPALNNull() {
                this[this.tableiDfsFasPaln.PALNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableiDfsFasPaln.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetNameNull() {
                this[this.tableiDfsFasPaln.NameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class irca_parameterRow : global::System.Data.DataRow {
            
            private irca_parameterDataTable tableirca_parameter;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal irca_parameterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableirca_parameter = ((irca_parameterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long id {
                get {
                    return ((long)(this[this.tableirca_parameter.idColumn]));
                }
                set {
                    this[this.tableirca_parameter.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string pair {
                get {
                    try {
                        return ((string)(this[this.tableirca_parameter.pairColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pair\' in table \'irca_parameter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableirca_parameter.pairColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int parameter {
                get {
                    try {
                        return ((int)(this[this.tableirca_parameter.parameterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'parameter\' in table \'irca_parameter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableirca_parameter.parameterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IspairNull() {
                return this.IsNull(this.tableirca_parameter.pairColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetpairNull() {
                this[this.tableirca_parameter.pairColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsparameterNull() {
                return this.IsNull(this.tableirca_parameter.parameterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetparameterNull() {
                this[this.tableirca_parameter.parameterColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class irca_productRow : global::System.Data.DataRow {
            
            private irca_productDataTable tableirca_product;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal irca_productRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableirca_product = ((irca_productDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long id {
                get {
                    return ((long)(this[this.tableirca_product.idColumn]));
                }
                set {
                    this[this.tableirca_product.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string product {
                get {
                    try {
                        return ((string)(this[this.tableirca_product.productColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product\' in table \'irca_product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableirca_product.productColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string pair {
                get {
                    try {
                        return ((string)(this[this.tableirca_product.pairColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pair\' in table \'irca_product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableirca_product.pairColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsproductNull() {
                return this.IsNull(this.tableirca_product.productColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetproductNull() {
                this[this.tableirca_product.productColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IspairNull() {
                return this.IsNull(this.tableirca_product.pairColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetpairNull() {
                this[this.tableirca_product.pairColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class IRCARow : global::System.Data.DataRow {
            
            private IRCADataTable tableIRCA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal IRCARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableIRCA = ((IRCADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal CommodityID {
                get {
                    return ((decimal)(this[this.tableIRCA.CommodityIDColumn]));
                }
                set {
                    this[this.tableIRCA.CommodityIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime EffectiveStartDate {
                get {
                    return ((global::System.DateTime)(this[this.tableIRCA.EffectiveStartDateColumn]));
                }
                set {
                    this[this.tableIRCA.EffectiveStartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ApprovalStatus {
                get {
                    return ((string)(this[this.tableIRCA.ApprovalStatusColumn]));
                }
                set {
                    this[this.tableIRCA.ApprovalStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal IRCAValue {
                get {
                    return ((decimal)(this[this.tableIRCA.IRCAValueColumn]));
                }
                set {
                    this[this.tableIRCA.IRCAValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableIRCA.CreatedByColumn]));
                }
                set {
                    this[this.tableIRCA.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableIRCA.CreatedDateColumn]));
                }
                set {
                    this[this.tableIRCA.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LastUpdatedBy {
                get {
                    return ((string)(this[this.tableIRCA.LastUpdatedByColumn]));
                }
                set {
                    this[this.tableIRCA.LastUpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime LastUpdatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableIRCA.LastUpdatedDateColumn]));
                }
                set {
                    this[this.tableIRCA.LastUpdatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime EffectiveEndDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableIRCA.EffectiveEndDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EffectiveEndDate\' in table \'IRCA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIRCA.EffectiveEndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ApprovalDesc {
                get {
                    try {
                        return ((string)(this[this.tableIRCA.ApprovalDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApprovalDesc\' in table \'IRCA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIRCA.ApprovalDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal OriginalID {
                get {
                    try {
                        return ((decimal)(this[this.tableIRCA.OriginalIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalID\' in table \'IRCA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIRCA.OriginalIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ActionFlag {
                get {
                    try {
                        return ((string)(this[this.tableIRCA.ActionFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActionFlag\' in table \'IRCA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIRCA.ActionFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal IRCAID {
                get {
                    return ((decimal)(this[this.tableIRCA.IRCAIDColumn]));
                }
                set {
                    this[this.tableIRCA.IRCAIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CommodityRow CommodityRow {
                get {
                    return ((CommodityRow)(this.GetParentRow(this.Table.ParentRelations["R_372"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["R_372"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsEffectiveEndDateNull() {
                return this.IsNull(this.tableIRCA.EffectiveEndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetEffectiveEndDateNull() {
                this[this.tableIRCA.EffectiveEndDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsApprovalDescNull() {
                return this.IsNull(this.tableIRCA.ApprovalDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetApprovalDescNull() {
                this[this.tableIRCA.ApprovalDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsOriginalIDNull() {
                return this.IsNull(this.tableIRCA.OriginalIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetOriginalIDNull() {
                this[this.tableIRCA.OriginalIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsActionFlagNull() {
                return this.IsNull(this.tableIRCA.ActionFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetActionFlagNull() {
                this[this.tableIRCA.ActionFlagColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class iDfsFasPaln1Row : global::System.Data.DataRow {
            
            private iDfsFasPaln1DataTable tableiDfsFasPaln1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal iDfsFasPaln1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableiDfsFasPaln1 = ((iDfsFasPaln1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal CMID {
                get {
                    return ((decimal)(this[this.tableiDfsFasPaln1.CMIDColumn]));
                }
                set {
                    this[this.tableiDfsFasPaln1.CMIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime BusinessDate {
                get {
                    return ((global::System.DateTime)(this[this.tableiDfsFasPaln1.BusinessDateColumn]));
                }
                set {
                    this[this.tableiDfsFasPaln1.BusinessDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal PALN {
                get {
                    try {
                        return ((decimal)(this[this.tableiDfsFasPaln1.PALNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PALN\' in table \'iDfsFasPaln1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableiDfsFasPaln1.PALNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPALNNull() {
                return this.IsNull(this.tableiDfsFasPaln1.PALNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPALNNull() {
                this[this.tableiDfsFasPaln1.PALNColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class fee_palnRow : global::System.Data.DataRow {
            
            private fee_palnDataTable tablefee_paln;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal fee_palnRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablefee_paln = ((fee_palnDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tablefee_paln.idColumn]));
                }
                set {
                    this[this.tablefee_paln.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string trader_id {
                get {
                    try {
                        return ((string)(this[this.tablefee_paln.trader_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'trader_id\' in table \'fee_paln\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefee_paln.trader_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime businessDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablefee_paln.businessDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'businessDate\' in table \'fee_paln\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefee_paln.businessDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal totalFee {
                get {
                    try {
                        return ((decimal)(this[this.tablefee_paln.totalFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'totalFee\' in table \'fee_paln\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefee_paln.totalFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal totalFeeUsd {
                get {
                    try {
                        return ((decimal)(this[this.tablefee_paln.totalFeeUsdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'totalFeeUsd\' in table \'fee_paln\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefee_paln.totalFeeUsdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Istrader_idNull() {
                return this.IsNull(this.tablefee_paln.trader_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Settrader_idNull() {
                this[this.tablefee_paln.trader_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsbusinessDateNull() {
                return this.IsNull(this.tablefee_paln.businessDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetbusinessDateNull() {
                this[this.tablefee_paln.businessDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IstotalFeeNull() {
                return this.IsNull(this.tablefee_paln.totalFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SettotalFeeNull() {
                this[this.tablefee_paln.totalFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IstotalFeeUsdNull() {
                return this.IsNull(this.tablefee_paln.totalFeeUsdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SettotalFeeUsdNull() {
                this[this.tablefee_paln.totalFeeUsdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class RateJisdorRow : global::System.Data.DataRow {
            
            private RateJisdorDataTable tableRateJisdor;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal RateJisdorRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRateJisdor = ((RateJisdorDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime BusinessDate {
                get {
                    return ((global::System.DateTime)(this[this.tableRateJisdor.BusinessDateColumn]));
                }
                set {
                    this[this.tableRateJisdor.BusinessDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Rate {
                get {
                    return ((decimal)(this[this.tableRateJisdor.RateColumn]));
                }
                set {
                    this[this.tableRateJisdor.RateColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class DataTable1RowChangeEvent : global::System.EventArgs {
            
            private DataTable1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataTable1RowChangeEvent(DataTable1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataTable1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class Validation_SettlementPrice_ExceptionsRowChangeEvent : global::System.EventArgs {
            
            private Validation_SettlementPrice_ExceptionsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Validation_SettlementPrice_ExceptionsRowChangeEvent(Validation_SettlementPrice_ExceptionsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Validation_SettlementPrice_ExceptionsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class TradefeedExceptionRowChangeEvent : global::System.EventArgs {
            
            private TradefeedExceptionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public TradefeedExceptionRowChangeEvent(TradefeedExceptionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public TradefeedExceptionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class ParameterRowChangeEvent : global::System.EventArgs {
            
            private ParameterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ParameterRowChangeEvent(ParameterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ParameterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class uspRptDailyShortageSummaryRowChangeEvent : global::System.EventArgs {
            
            private uspRptDailyShortageSummaryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public uspRptDailyShortageSummaryRowChangeEvent(uspRptDailyShortageSummaryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public uspRptDailyShortageSummaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class ClearingMemberSuspenseStatusRowChangeEvent : global::System.EventArgs {
            
            private ClearingMemberSuspenseStatusRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ClearingMemberSuspenseStatusRowChangeEvent(ClearingMemberSuspenseStatusRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ClearingMemberSuspenseStatusRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class ClearingHouseSuspenseRowChangeEvent : global::System.EventArgs {
            
            private ClearingHouseSuspenseRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ClearingHouseSuspenseRowChangeEvent(ClearingHouseSuspenseRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ClearingHouseSuspenseRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class ClearingMemberRowChangeEvent : global::System.EventArgs {
            
            private ClearingMemberRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ClearingMemberRowChangeEvent(ClearingMemberRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ClearingMemberRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class CommodityRowChangeEvent : global::System.EventArgs {
            
            private CommodityRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CommodityRowChangeEvent(CommodityRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CommodityRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class ContractRowChangeEvent : global::System.EventArgs {
            
            private ContractRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ContractRowChangeEvent(ContractRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ContractRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class SubCategoryRowChangeEvent : global::System.EventArgs {
            
            private SubCategoryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SubCategoryRowChangeEvent(SubCategoryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SubCategoryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class Get_Tradefeed_ExceptionRowChangeEvent : global::System.EventArgs {
            
            private Get_Tradefeed_ExceptionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Get_Tradefeed_ExceptionRowChangeEvent(Get_Tradefeed_ExceptionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Get_Tradefeed_ExceptionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class uspTradeFeedExceptionApproveAllRowChangeEvent : global::System.EventArgs {
            
            private uspTradeFeedExceptionApproveAllRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public uspTradeFeedExceptionApproveAllRowChangeEvent(uspTradeFeedExceptionApproveAllRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public uspTradeFeedExceptionApproveAllRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class iDfsFasPalnRowChangeEvent : global::System.EventArgs {
            
            private iDfsFasPalnRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public iDfsFasPalnRowChangeEvent(iDfsFasPalnRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public iDfsFasPalnRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class irca_parameterRowChangeEvent : global::System.EventArgs {
            
            private irca_parameterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public irca_parameterRowChangeEvent(irca_parameterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public irca_parameterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class irca_productRowChangeEvent : global::System.EventArgs {
            
            private irca_productRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public irca_productRowChangeEvent(irca_productRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public irca_productRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class IRCARowChangeEvent : global::System.EventArgs {
            
            private IRCARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public IRCARowChangeEvent(IRCARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public IRCARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class iDfsFasPaln1RowChangeEvent : global::System.EventArgs {
            
            private iDfsFasPaln1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public iDfsFasPaln1RowChangeEvent(iDfsFasPaln1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public iDfsFasPaln1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class fee_palnRowChangeEvent : global::System.EventArgs {
            
            private fee_palnRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public fee_palnRowChangeEvent(fee_palnRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public fee_palnRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class RateJisdorRowChangeEvent : global::System.EventArgs {
            
            private RateJisdorRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public RateJisdorRowChangeEvent(RateJisdorRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public RateJisdorRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace ServicesCekTradefeed.DataSet1TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DataTable1TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public DataTable1TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DataTable1";
            tableMapping.ColumnMappings.Add("totaltradefeed", "totaltradefeed");
            tableMapping.ColumnMappings.Add("lot", "lot");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ServicesCekTradefeed.Properties.Settings.Default.SKDConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ISNULL(COUNT(TradeFeedID),0) as totaltradefeed , ISNULL(SUM(Quantity),0) a" +
                "s lot FROM SKD.TradeFeed WHERE BusinessDate = @date AND ExchangeId = 1";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@date", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT ISNULL(COUNT(TradeFeedID),0) as totaltradefeed , ISNULL(SUM(Quantity),0) a" +
                "s lot FROM SKD.TradeFeed WHERE BusinessDate = @date AND ExchangeId = 2\r\n";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@date", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillBBJPRIMER(DataSet1.DataTable1DataTable dataTable, System.DateTime date) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(date));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.DataTable1DataTable GetDataBBJPRIMER(System.DateTime date) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(date));
            DataSet1.DataTable1DataTable dataTable = new DataSet1.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByBBJSPA(DataSet1.DataTable1DataTable dataTable, System.DateTime date) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(date));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSet1.DataTable1DataTable GetDataByBBJSPA(System.DateTime date) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(date));
            DataSet1.DataTable1DataTable dataTable = new DataSet1.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Validation_SettlementPrice_ExceptionsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public Validation_SettlementPrice_ExceptionsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Validation_SettlementPrice_Exceptions";
            tableMapping.ColumnMappings.Add("count_sp", "count_sp");
            tableMapping.ColumnMappings.Add("count_ex", "count_ex");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ServicesCekTradefeed.Properties.Settings.Default.SKDConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SKD.Validation_SettlementPrice_Exceptions";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@businessDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.Validation_SettlementPrice_ExceptionsDataTable dataTable, global::System.Nullable<global::System.DateTime> businessDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((businessDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(businessDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.Validation_SettlementPrice_ExceptionsDataTable GetData(global::System.Nullable<global::System.DateTime> businessDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((businessDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(businessDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            DataSet1.Validation_SettlementPrice_ExceptionsDataTable dataTable = new DataSet1.Validation_SettlementPrice_ExceptionsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TradefeedExceptionTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public TradefeedExceptionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TradefeedException";
            tableMapping.ColumnMappings.Add("TradeFeedID", "TradeFeedID");
            tableMapping.ColumnMappings.Add("BusinessDate", "BusinessDate");
            tableMapping.ColumnMappings.Add("ExchangeID", "ExchangeID");
            tableMapping.ColumnMappings.Add("ApprovalStatus", "ApprovalStatus");
            tableMapping.ColumnMappings.Add("Message", "Message");
            tableMapping.ColumnMappings.Add("ApprovalDesc", "ApprovalDesc");
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
            tableMapping.ColumnMappings.Add("CreatedDate", "CreatedDate");
            tableMapping.ColumnMappings.Add("LastUpdatedBy", "LastUpdatedBy");
            tableMapping.ColumnMappings.Add("LastUpdatedDate", "LastUpdatedDate");
            tableMapping.ColumnMappings.Add("ForceApproveOperationsType", "ForceApproveOperationsType");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [TradefeedException] WHERE (([TradeFeedID] = @Original_TradeFeedID) AND ([BusinessDate] = @Original_BusinessDate) AND ([ExchangeID] = @Original_ExchangeID) AND ([ApprovalStatus] = @Original_ApprovalStatus) AND ((@IsNull_Message = 1 AND [Message] IS NULL) OR ([Message] = @Original_Message)) AND ((@IsNull_ApprovalDesc = 1 AND [ApprovalDesc] IS NULL) OR ([ApprovalDesc] = @Original_ApprovalDesc)) AND ([CreatedBy] = @Original_CreatedBy) AND ([CreatedDate] = @Original_CreatedDate) AND ([LastUpdatedBy] = @Original_LastUpdatedBy) AND ([LastUpdatedDate] = @Original_LastUpdatedDate) AND ([ForceApproveOperationsType] = @Original_ForceApproveOperationsType))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TradeFeedID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "TradeFeedID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BusinessDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExchangeID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ExchangeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApprovalStatus", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Message", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Message", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Message", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Message", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ApprovalDesc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApprovalDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ForceApproveOperationsType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForceApproveOperationsType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [TradefeedException] ([TradeFeedID], [BusinessDate], [ExchangeID], [ApprovalStatus], [Message], [ApprovalDesc], [CreatedBy], [CreatedDate], [LastUpdatedBy], [LastUpdatedDate], [ForceApproveOperationsType]) VALUES (@TradeFeedID, @BusinessDate, @ExchangeID, @ApprovalStatus, @Message, @ApprovalDesc, @CreatedBy, @CreatedDate, @LastUpdatedBy, @LastUpdatedDate, @ForceApproveOperationsType);
SELECT TradeFeedID, BusinessDate, ExchangeID, ApprovalStatus, Message, ApprovalDesc, CreatedBy, CreatedDate, LastUpdatedBy, LastUpdatedDate, ForceApproveOperationsType FROM TradefeedException WHERE (ApprovalStatus = @ApprovalStatus) AND (BusinessDate = @BusinessDate) AND (ExchangeID = @ExchangeID) AND (TradeFeedID = @TradeFeedID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TradeFeedID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "TradeFeedID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExchangeID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ExchangeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovalStatus", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Message", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Message", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovalDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForceApproveOperationsType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForceApproveOperationsType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [TradefeedException] SET [TradeFeedID] = @TradeFeedID, [BusinessDate] = @BusinessDate, [ExchangeID] = @ExchangeID, [ApprovalStatus] = @ApprovalStatus, [Message] = @Message, [ApprovalDesc] = @ApprovalDesc, [CreatedBy] = @CreatedBy, [CreatedDate] = @CreatedDate, [LastUpdatedBy] = @LastUpdatedBy, [LastUpdatedDate] = @LastUpdatedDate, [ForceApproveOperationsType] = @ForceApproveOperationsType WHERE (([TradeFeedID] = @Original_TradeFeedID) AND ([BusinessDate] = @Original_BusinessDate) AND ([ExchangeID] = @Original_ExchangeID) AND ([ApprovalStatus] = @Original_ApprovalStatus) AND ((@IsNull_Message = 1 AND [Message] IS NULL) OR ([Message] = @Original_Message)) AND ((@IsNull_ApprovalDesc = 1 AND [ApprovalDesc] IS NULL) OR ([ApprovalDesc] = @Original_ApprovalDesc)) AND ([CreatedBy] = @Original_CreatedBy) AND ([CreatedDate] = @Original_CreatedDate) AND ([LastUpdatedBy] = @Original_LastUpdatedBy) AND ([LastUpdatedDate] = @Original_LastUpdatedDate) AND ([ForceApproveOperationsType] = @Original_ForceApproveOperationsType));
SELECT TradeFeedID, BusinessDate, ExchangeID, ApprovalStatus, Message, ApprovalDesc, CreatedBy, CreatedDate, LastUpdatedBy, LastUpdatedDate, ForceApproveOperationsType FROM TradefeedException WHERE (ApprovalStatus = @ApprovalStatus) AND (BusinessDate = @BusinessDate) AND (ExchangeID = @ExchangeID) AND (TradeFeedID = @TradeFeedID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TradeFeedID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "TradeFeedID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExchangeID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ExchangeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovalStatus", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Message", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Message", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovalDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForceApproveOperationsType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForceApproveOperationsType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TradeFeedID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "TradeFeedID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BusinessDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExchangeID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ExchangeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApprovalStatus", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Message", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Message", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Message", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Message", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ApprovalDesc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApprovalDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ForceApproveOperationsType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForceApproveOperationsType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ServicesCekTradefeed.Properties.Settings.Default.SKDConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TradefeedException.*\r\nFROM     TradefeedException";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT ApprovalDesc, ApprovalStatus, BusinessDate, CreatedBy, CreatedDate, Exchan" +
                "geID, ForceApproveOperationsType, LastUpdatedBy, LastUpdatedDate, Message, Trade" +
                "FeedID FROM TradefeedException WHERE (BusinessDate = @date) AND (ApprovalStatus " +
                "= \'P\')";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@date", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.TradefeedExceptionDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.TradefeedExceptionDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.TradefeedExceptionDataTable dataTable = new DataSet1.TradefeedExceptionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByStatus(DataSet1.TradefeedExceptionDataTable dataTable, System.DateTime date) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(date));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSet1.TradefeedExceptionDataTable GetDataByStatus(System.DateTime date) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(date));
            DataSet1.TradefeedExceptionDataTable dataTable = new DataSet1.TradefeedExceptionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.TradefeedExceptionDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "TradefeedException");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_TradeFeedID, System.DateTime Original_BusinessDate, decimal Original_ExchangeID, string Original_ApprovalStatus, string Original_Message, string Original_ApprovalDesc, string Original_CreatedBy, System.DateTime Original_CreatedDate, string Original_LastUpdatedBy, System.DateTime Original_LastUpdatedDate, int Original_ForceApproveOperationsType) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_TradeFeedID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_BusinessDate));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_ExchangeID));
            if ((Original_ApprovalStatus == null)) {
                throw new global::System.ArgumentNullException("Original_ApprovalStatus");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_ApprovalStatus));
            }
            if ((Original_Message == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Message));
            }
            if ((Original_ApprovalDesc == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_ApprovalDesc));
            }
            if ((Original_CreatedBy == null)) {
                throw new global::System.ArgumentNullException("Original_CreatedBy");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_CreatedBy));
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_CreatedDate));
            if ((Original_LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("Original_LastUpdatedBy");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_LastUpdatedBy));
            }
            this.Adapter.DeleteCommand.Parameters[11].Value = ((System.DateTime)(Original_LastUpdatedDate));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_ForceApproveOperationsType));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal TradeFeedID, System.DateTime BusinessDate, decimal ExchangeID, string ApprovalStatus, string Message, string ApprovalDesc, string CreatedBy, System.DateTime CreatedDate, string LastUpdatedBy, System.DateTime LastUpdatedDate, int ForceApproveOperationsType) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(TradeFeedID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(BusinessDate));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(ExchangeID));
            if ((ApprovalStatus == null)) {
                throw new global::System.ArgumentNullException("ApprovalStatus");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ApprovalStatus));
            }
            if ((Message == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Message));
            }
            if ((ApprovalDesc == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ApprovalDesc));
            }
            if ((CreatedBy == null)) {
                throw new global::System.ArgumentNullException("CreatedBy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(CreatedBy));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(CreatedDate));
            if ((LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("LastUpdatedBy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(LastUpdatedBy));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(LastUpdatedDate));
            this.Adapter.InsertCommand.Parameters[10].Value = ((int)(ForceApproveOperationsType));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal TradeFeedID, 
                    System.DateTime BusinessDate, 
                    decimal ExchangeID, 
                    string ApprovalStatus, 
                    string Message, 
                    string ApprovalDesc, 
                    string CreatedBy, 
                    System.DateTime CreatedDate, 
                    string LastUpdatedBy, 
                    System.DateTime LastUpdatedDate, 
                    int ForceApproveOperationsType, 
                    decimal Original_TradeFeedID, 
                    System.DateTime Original_BusinessDate, 
                    decimal Original_ExchangeID, 
                    string Original_ApprovalStatus, 
                    string Original_Message, 
                    string Original_ApprovalDesc, 
                    string Original_CreatedBy, 
                    System.DateTime Original_CreatedDate, 
                    string Original_LastUpdatedBy, 
                    System.DateTime Original_LastUpdatedDate, 
                    int Original_ForceApproveOperationsType) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(TradeFeedID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(BusinessDate));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(ExchangeID));
            if ((ApprovalStatus == null)) {
                throw new global::System.ArgumentNullException("ApprovalStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ApprovalStatus));
            }
            if ((Message == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Message));
            }
            if ((ApprovalDesc == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ApprovalDesc));
            }
            if ((CreatedBy == null)) {
                throw new global::System.ArgumentNullException("CreatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(CreatedBy));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(CreatedDate));
            if ((LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("LastUpdatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(LastUpdatedBy));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(LastUpdatedDate));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(ForceApproveOperationsType));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(Original_TradeFeedID));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_BusinessDate));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(Original_ExchangeID));
            if ((Original_ApprovalStatus == null)) {
                throw new global::System.ArgumentNullException("Original_ApprovalStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_ApprovalStatus));
            }
            if ((Original_Message == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_Message));
            }
            if ((Original_ApprovalDesc == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_ApprovalDesc));
            }
            if ((Original_CreatedBy == null)) {
                throw new global::System.ArgumentNullException("Original_CreatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_CreatedBy));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(Original_CreatedDate));
            if ((Original_LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("Original_LastUpdatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_LastUpdatedBy));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(Original_LastUpdatedDate));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Original_ForceApproveOperationsType));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Message, 
                    string ApprovalDesc, 
                    string CreatedBy, 
                    System.DateTime CreatedDate, 
                    string LastUpdatedBy, 
                    System.DateTime LastUpdatedDate, 
                    int ForceApproveOperationsType, 
                    decimal Original_TradeFeedID, 
                    System.DateTime Original_BusinessDate, 
                    decimal Original_ExchangeID, 
                    string Original_ApprovalStatus, 
                    string Original_Message, 
                    string Original_ApprovalDesc, 
                    string Original_CreatedBy, 
                    System.DateTime Original_CreatedDate, 
                    string Original_LastUpdatedBy, 
                    System.DateTime Original_LastUpdatedDate, 
                    int Original_ForceApproveOperationsType) {
            return this.Update(Original_TradeFeedID, Original_BusinessDate, Original_ExchangeID, Original_ApprovalStatus, Message, ApprovalDesc, CreatedBy, CreatedDate, LastUpdatedBy, LastUpdatedDate, ForceApproveOperationsType, Original_TradeFeedID, Original_BusinessDate, Original_ExchangeID, Original_ApprovalStatus, Original_Message, Original_ApprovalDesc, Original_CreatedBy, Original_CreatedDate, Original_LastUpdatedBy, Original_LastUpdatedDate, Original_ForceApproveOperationsType);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ParameterTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public ParameterTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Parameter";
            tableMapping.ColumnMappings.Add("Code", "Code");
            tableMapping.ColumnMappings.Add("EffectiveStartDate", "EffectiveStartDate");
            tableMapping.ColumnMappings.Add("ApprovalStatus", "ApprovalStatus");
            tableMapping.ColumnMappings.Add("NumericValue", "NumericValue");
            tableMapping.ColumnMappings.Add("DateValue", "DateValue");
            tableMapping.ColumnMappings.Add("StringValue", "StringValue");
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
            tableMapping.ColumnMappings.Add("CreatedDate", "CreatedDate");
            tableMapping.ColumnMappings.Add("LastUpdatedBy", "LastUpdatedBy");
            tableMapping.ColumnMappings.Add("LastUpdatedDate", "LastUpdatedDate");
            tableMapping.ColumnMappings.Add("EffectiveEndDate", "EffectiveEndDate");
            tableMapping.ColumnMappings.Add("ApprovalDesc", "ApprovalDesc");
            tableMapping.ColumnMappings.Add("ParameterID", "ParameterID");
            tableMapping.ColumnMappings.Add("ActionFlag", "ActionFlag");
            tableMapping.ColumnMappings.Add("OriginalID", "OriginalID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Parameter] WHERE (([Code] = @Original_Code) AND ([EffectiveStartDate] = @Original_EffectiveStartDate) AND ([ApprovalStatus] = @Original_ApprovalStatus) AND ((@IsNull_NumericValue = 1 AND [NumericValue] IS NULL) OR ([NumericValue] = @Original_NumericValue)) AND ((@IsNull_DateValue = 1 AND [DateValue] IS NULL) OR ([DateValue] = @Original_DateValue)) AND ((@IsNull_StringValue = 1 AND [StringValue] IS NULL) OR ([StringValue] = @Original_StringValue)) AND ([CreatedBy] = @Original_CreatedBy) AND ([CreatedDate] = @Original_CreatedDate) AND ([LastUpdatedBy] = @Original_LastUpdatedBy) AND ([LastUpdatedDate] = @Original_LastUpdatedDate) AND ((@IsNull_EffectiveEndDate = 1 AND [EffectiveEndDate] IS NULL) OR ([EffectiveEndDate] = @Original_EffectiveEndDate)) AND ((@IsNull_ApprovalDesc = 1 AND [ApprovalDesc] IS NULL) OR ([ApprovalDesc] = @Original_ApprovalDesc)) AND ([ParameterID] = @Original_ParameterID) AND ((@IsNull_ActionFlag = 1 AND [ActionFlag] IS NULL) OR ([ActionFlag] = @Original_ActionFlag)) AND ((@IsNull_OriginalID = 1 AND [OriginalID] IS NULL) OR ([OriginalID] = @Original_OriginalID)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EffectiveStartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveStartDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApprovalStatus", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NumericValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumericValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumericValue", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "NumericValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateValue", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StringValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StringValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StringValue", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StringValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EffectiveEndDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveEndDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EffectiveEndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveEndDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ApprovalDesc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApprovalDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ParameterID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ParameterID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ActionFlag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActionFlag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ActionFlag", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActionFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OriginalID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginalID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OriginalID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "OriginalID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Parameter] ([Code], [EffectiveStartDate], [ApprovalStatus], [NumericValue], [DateValue], [StringValue], [CreatedBy], [CreatedDate], [LastUpdatedBy], [LastUpdatedDate], [EffectiveEndDate], [ApprovalDesc], [ActionFlag], [OriginalID]) VALUES (@Code, @EffectiveStartDate, @ApprovalStatus, @NumericValue, @DateValue, @StringValue, @CreatedBy, @CreatedDate, @LastUpdatedBy, @LastUpdatedDate, @EffectiveEndDate, @ApprovalDesc, @ActionFlag, @OriginalID);
SELECT Code, EffectiveStartDate, ApprovalStatus, NumericValue, DateValue, StringValue, CreatedBy, CreatedDate, LastUpdatedBy, LastUpdatedDate, EffectiveEndDate, ApprovalDesc, ParameterID, ActionFlag, OriginalID FROM Parameter WHERE (ApprovalStatus = @ApprovalStatus) AND (Code = @Code) AND (EffectiveStartDate = @EffectiveStartDate)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EffectiveStartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveStartDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovalStatus", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumericValue", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "NumericValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateValue", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StringValue", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StringValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EffectiveEndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveEndDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovalDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActionFlag", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActionFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginalID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "OriginalID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [Parameter] SET [Code] = @Code, [EffectiveStartDate] = @EffectiveStartDate" +
                ", [ApprovalStatus] = @ApprovalStatus, [NumericValue] = @NumericValue, [DateValue" +
                "] = @DateValue, [StringValue] = @StringValue, [CreatedBy] = @CreatedBy, [Created" +
                "Date] = @CreatedDate, [LastUpdatedBy] = @LastUpdatedBy, [LastUpdatedDate] = @Las" +
                "tUpdatedDate, [EffectiveEndDate] = @EffectiveEndDate, [ApprovalDesc] = @Approval" +
                "Desc, [ActionFlag] = @ActionFlag, [OriginalID] = @OriginalID WHERE (([Code] = @O" +
                "riginal_Code) AND ([EffectiveStartDate] = @Original_EffectiveStartDate) AND ([Ap" +
                "provalStatus] = @Original_ApprovalStatus) AND ((@IsNull_NumericValue = 1 AND [Nu" +
                "mericValue] IS NULL) OR ([NumericValue] = @Original_NumericValue)) AND ((@IsNull" +
                "_DateValue = 1 AND [DateValue] IS NULL) OR ([DateValue] = @Original_DateValue)) " +
                "AND ((@IsNull_StringValue = 1 AND [StringValue] IS NULL) OR ([StringValue] = @Or" +
                "iginal_StringValue)) AND ([CreatedBy] = @Original_CreatedBy) AND ([CreatedDate] " +
                "= @Original_CreatedDate) AND ([LastUpdatedBy] = @Original_LastUpdatedBy) AND ([L" +
                "astUpdatedDate] = @Original_LastUpdatedDate) AND ((@IsNull_EffectiveEndDate = 1 " +
                "AND [EffectiveEndDate] IS NULL) OR ([EffectiveEndDate] = @Original_EffectiveEndD" +
                "ate)) AND ((@IsNull_ApprovalDesc = 1 AND [ApprovalDesc] IS NULL) OR ([ApprovalDe" +
                "sc] = @Original_ApprovalDesc)) AND ([ParameterID] = @Original_ParameterID) AND (" +
                "(@IsNull_ActionFlag = 1 AND [ActionFlag] IS NULL) OR ([ActionFlag] = @Original_A" +
                "ctionFlag)) AND ((@IsNull_OriginalID = 1 AND [OriginalID] IS NULL) OR ([Original" +
                "ID] = @Original_OriginalID)));\r\nSELECT Code, EffectiveStartDate, ApprovalStatus," +
                " NumericValue, DateValue, StringValue, CreatedBy, CreatedDate, LastUpdatedBy, La" +
                "stUpdatedDate, EffectiveEndDate, ApprovalDesc, ParameterID, ActionFlag, Original" +
                "ID FROM Parameter WHERE (ApprovalStatus = @ApprovalStatus) AND (Code = @Code) AN" +
                "D (EffectiveStartDate = @EffectiveStartDate)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EffectiveStartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveStartDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovalStatus", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumericValue", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "NumericValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateValue", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StringValue", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StringValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EffectiveEndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveEndDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovalDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActionFlag", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActionFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginalID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "OriginalID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EffectiveStartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveStartDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApprovalStatus", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NumericValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumericValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumericValue", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "NumericValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateValue", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StringValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StringValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StringValue", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StringValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EffectiveEndDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveEndDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EffectiveEndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveEndDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ApprovalDesc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApprovalDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ParameterID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ParameterID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ActionFlag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActionFlag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ActionFlag", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActionFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OriginalID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginalID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OriginalID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "OriginalID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ServicesCekTradefeed.Properties.Settings.Default.SKDConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Parameter.*\r\nFROM            Parameter";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT ActionFlag, ApprovalDesc, ApprovalStatus, Code, CreatedBy, CreatedDate, Da" +
                "teValue, EffectiveEndDate, EffectiveStartDate, LastUpdatedBy, LastUpdatedDate, N" +
                "umericValue, OriginalID, ParameterID, StringValue FROM Parameter WHERE (Code = \'" +
                "BusinessDate\')";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT ActionFlag, ApprovalDesc, ApprovalStatus, Code, CreatedBy, CreatedDate, Da" +
                "teValue, EffectiveEndDate, EffectiveStartDate, LastUpdatedBy, LastUpdatedDate, N" +
                "umericValue, OriginalID, ParameterID, StringValue FROM Parameter WHERE (Paramete" +
                "rID = 1)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT ActionFlag, ApprovalDesc, ApprovalStatus, Code, CreatedBy, CreatedDate, Da" +
                "teValue, EffectiveEndDate, EffectiveStartDate, LastUpdatedBy, LastUpdatedDate, N" +
                "umericValue, OriginalID, ParameterID, StringValue FROM Parameter WHERE (Paramete" +
                "rID = 1413)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.ParameterDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.ParameterDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.ParameterDataTable dataTable = new DataSet1.ParameterDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByBusinessDate(DataSet1.ParameterDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSet1.ParameterDataTable GetDataByBusinessDate() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            DataSet1.ParameterDataTable dataTable = new DataSet1.ParameterDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillById(DataSet1.ParameterDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSet1.ParameterDataTable GetDataById() {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            DataSet1.ParameterDataTable dataTable = new DataSet1.ParameterDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByLastEOD(DataSet1.ParameterDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSet1.ParameterDataTable GetDataByLastEOD() {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            DataSet1.ParameterDataTable dataTable = new DataSet1.ParameterDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.ParameterDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "Parameter");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_Code, System.DateTime Original_EffectiveStartDate, string Original_ApprovalStatus, global::System.Nullable<decimal> Original_NumericValue, global::System.Nullable<global::System.DateTime> Original_DateValue, string Original_StringValue, string Original_CreatedBy, System.DateTime Original_CreatedDate, string Original_LastUpdatedBy, System.DateTime Original_LastUpdatedDate, global::System.Nullable<global::System.DateTime> Original_EffectiveEndDate, string Original_ApprovalDesc, decimal Original_ParameterID, string Original_ActionFlag, global::System.Nullable<decimal> Original_OriginalID) {
            if ((Original_Code == null)) {
                throw new global::System.ArgumentNullException("Original_Code");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Code));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_EffectiveStartDate));
            if ((Original_ApprovalStatus == null)) {
                throw new global::System.ArgumentNullException("Original_ApprovalStatus");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ApprovalStatus));
            }
            if ((Original_NumericValue.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_NumericValue.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_DateValue.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_DateValue.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_StringValue == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_StringValue));
            }
            if ((Original_CreatedBy == null)) {
                throw new global::System.ArgumentNullException("Original_CreatedBy");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_CreatedBy));
            }
            this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_CreatedDate));
            if ((Original_LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("Original_LastUpdatedBy");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_LastUpdatedBy));
            }
            this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_LastUpdatedDate));
            if ((Original_EffectiveEndDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((System.DateTime)(Original_EffectiveEndDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_ApprovalDesc == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_ApprovalDesc));
            }
            this.Adapter.DeleteCommand.Parameters[17].Value = ((decimal)(Original_ParameterID));
            if ((Original_ActionFlag == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_ActionFlag));
            }
            if ((Original_OriginalID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((decimal)(Original_OriginalID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Code, System.DateTime EffectiveStartDate, string ApprovalStatus, global::System.Nullable<decimal> NumericValue, global::System.Nullable<global::System.DateTime> DateValue, string StringValue, string CreatedBy, System.DateTime CreatedDate, string LastUpdatedBy, System.DateTime LastUpdatedDate, global::System.Nullable<global::System.DateTime> EffectiveEndDate, string ApprovalDesc, string ActionFlag, global::System.Nullable<decimal> OriginalID) {
            if ((Code == null)) {
                throw new global::System.ArgumentNullException("Code");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Code));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(EffectiveStartDate));
            if ((ApprovalStatus == null)) {
                throw new global::System.ArgumentNullException("ApprovalStatus");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ApprovalStatus));
            }
            if ((NumericValue.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(NumericValue.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((DateValue.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(DateValue.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((StringValue == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(StringValue));
            }
            if ((CreatedBy == null)) {
                throw new global::System.ArgumentNullException("CreatedBy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(CreatedBy));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(CreatedDate));
            if ((LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("LastUpdatedBy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(LastUpdatedBy));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(LastUpdatedDate));
            if ((EffectiveEndDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(EffectiveEndDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((ApprovalDesc == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(ApprovalDesc));
            }
            if ((ActionFlag == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(ActionFlag));
            }
            if ((OriginalID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(OriginalID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Code, 
                    System.DateTime EffectiveStartDate, 
                    string ApprovalStatus, 
                    global::System.Nullable<decimal> NumericValue, 
                    global::System.Nullable<global::System.DateTime> DateValue, 
                    string StringValue, 
                    string CreatedBy, 
                    System.DateTime CreatedDate, 
                    string LastUpdatedBy, 
                    System.DateTime LastUpdatedDate, 
                    global::System.Nullable<global::System.DateTime> EffectiveEndDate, 
                    string ApprovalDesc, 
                    string ActionFlag, 
                    global::System.Nullable<decimal> OriginalID, 
                    string Original_Code, 
                    System.DateTime Original_EffectiveStartDate, 
                    string Original_ApprovalStatus, 
                    global::System.Nullable<decimal> Original_NumericValue, 
                    global::System.Nullable<global::System.DateTime> Original_DateValue, 
                    string Original_StringValue, 
                    string Original_CreatedBy, 
                    System.DateTime Original_CreatedDate, 
                    string Original_LastUpdatedBy, 
                    System.DateTime Original_LastUpdatedDate, 
                    global::System.Nullable<global::System.DateTime> Original_EffectiveEndDate, 
                    string Original_ApprovalDesc, 
                    decimal Original_ParameterID, 
                    string Original_ActionFlag, 
                    global::System.Nullable<decimal> Original_OriginalID) {
            if ((Code == null)) {
                throw new global::System.ArgumentNullException("Code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Code));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(EffectiveStartDate));
            if ((ApprovalStatus == null)) {
                throw new global::System.ArgumentNullException("ApprovalStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ApprovalStatus));
            }
            if ((NumericValue.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(NumericValue.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((DateValue.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(DateValue.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((StringValue == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(StringValue));
            }
            if ((CreatedBy == null)) {
                throw new global::System.ArgumentNullException("CreatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(CreatedBy));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(CreatedDate));
            if ((LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("LastUpdatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(LastUpdatedBy));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(LastUpdatedDate));
            if ((EffectiveEndDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(EffectiveEndDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((ApprovalDesc == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(ApprovalDesc));
            }
            if ((ActionFlag == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(ActionFlag));
            }
            if ((OriginalID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(OriginalID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_Code == null)) {
                throw new global::System.ArgumentNullException("Original_Code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Code));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_EffectiveStartDate));
            if ((Original_ApprovalStatus == null)) {
                throw new global::System.ArgumentNullException("Original_ApprovalStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_ApprovalStatus));
            }
            if ((Original_NumericValue.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(Original_NumericValue.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_DateValue.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(Original_DateValue.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_StringValue == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_StringValue));
            }
            if ((Original_CreatedBy == null)) {
                throw new global::System.ArgumentNullException("Original_CreatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_CreatedBy));
            }
            this.Adapter.UpdateCommand.Parameters[24].Value = ((System.DateTime)(Original_CreatedDate));
            if ((Original_LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("Original_LastUpdatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_LastUpdatedBy));
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(Original_LastUpdatedDate));
            if ((Original_EffectiveEndDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((System.DateTime)(Original_EffectiveEndDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_ApprovalDesc == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_ApprovalDesc));
            }
            this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(Original_ParameterID));
            if ((Original_ActionFlag == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_ActionFlag));
            }
            if ((Original_OriginalID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((decimal)(Original_OriginalID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<decimal> NumericValue, 
                    global::System.Nullable<global::System.DateTime> DateValue, 
                    string StringValue, 
                    string CreatedBy, 
                    System.DateTime CreatedDate, 
                    string LastUpdatedBy, 
                    System.DateTime LastUpdatedDate, 
                    global::System.Nullable<global::System.DateTime> EffectiveEndDate, 
                    string ApprovalDesc, 
                    string ActionFlag, 
                    global::System.Nullable<decimal> OriginalID, 
                    string Original_Code, 
                    System.DateTime Original_EffectiveStartDate, 
                    string Original_ApprovalStatus, 
                    global::System.Nullable<decimal> Original_NumericValue, 
                    global::System.Nullable<global::System.DateTime> Original_DateValue, 
                    string Original_StringValue, 
                    string Original_CreatedBy, 
                    System.DateTime Original_CreatedDate, 
                    string Original_LastUpdatedBy, 
                    System.DateTime Original_LastUpdatedDate, 
                    global::System.Nullable<global::System.DateTime> Original_EffectiveEndDate, 
                    string Original_ApprovalDesc, 
                    decimal Original_ParameterID, 
                    string Original_ActionFlag, 
                    global::System.Nullable<decimal> Original_OriginalID) {
            return this.Update(Original_Code, Original_EffectiveStartDate, Original_ApprovalStatus, NumericValue, DateValue, StringValue, CreatedBy, CreatedDate, LastUpdatedBy, LastUpdatedDate, EffectiveEndDate, ApprovalDesc, ActionFlag, OriginalID, Original_Code, Original_EffectiveStartDate, Original_ApprovalStatus, Original_NumericValue, Original_DateValue, Original_StringValue, Original_CreatedBy, Original_CreatedDate, Original_LastUpdatedBy, Original_LastUpdatedDate, Original_EffectiveEndDate, Original_ApprovalDesc, Original_ParameterID, Original_ActionFlag, Original_OriginalID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class uspRptDailyShortageSummaryTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public uspRptDailyShortageSummaryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "uspRptDailyShortageSummary";
            tableMapping.ColumnMappings.Add("Code", "Code");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("SegShortageExcessIDR", "SegShortageExcessIDR");
            tableMapping.ColumnMappings.Add("UnsegShortageExcessIDR", "UnsegShortageExcessIDR");
            tableMapping.ColumnMappings.Add("SegShortageExcessUSD", "SegShortageExcessUSD");
            tableMapping.ColumnMappings.Add("UnsegShortageExcessUSD", "UnsegShortageExcessUSD");
            tableMapping.ColumnMappings.Add("Ekuivalen", "Ekuivalen");
            tableMapping.ColumnMappings.Add("TotalEkuivalen", "TotalEkuivalen");
            tableMapping.ColumnMappings.Add("LimitGroupDesc", "LimitGroupDesc");
            tableMapping.ColumnMappings.Add("StatusSuspensi", "StatusSuspensi");
            tableMapping.ColumnMappings.Add("KursKIE", "KursKIE");
            tableMapping.ColumnMappings.Add("SegShortageExcessIDR_negative", "SegShortageExcessIDR_negative");
            tableMapping.ColumnMappings.Add("UnsegShortageExcessIDR_negative", "UnsegShortageExcessIDR_negative");
            tableMapping.ColumnMappings.Add("SegShortageExcessUSD_negative", "SegShortageExcessUSD_negative");
            tableMapping.ColumnMappings.Add("UnsegShortageExcessUSD_negative", "UnsegShortageExcessUSD_negative");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ServicesCekTradefeed.Properties.Settings.Default.SKDConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SKD.uspRptDailyShortageSummary";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@businessDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.uspRptDailyShortageSummaryDataTable dataTable, global::System.Nullable<global::System.DateTime> businessDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((businessDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(businessDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.uspRptDailyShortageSummaryDataTable GetData(global::System.Nullable<global::System.DateTime> businessDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((businessDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(businessDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            DataSet1.uspRptDailyShortageSummaryDataTable dataTable = new DataSet1.uspRptDailyShortageSummaryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ClearingMemberSuspenseStatusTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public ClearingMemberSuspenseStatusTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ClearingMemberSuspenseStatus";
            tableMapping.ColumnMappings.Add("ClearingMemberSuspenseStatusId", "ClearingMemberSuspenseStatusId");
            tableMapping.ColumnMappings.Add("BusinessDate", "BusinessDate");
            tableMapping.ColumnMappings.Add("ExchangeId", "ExchangeId");
            tableMapping.ColumnMappings.Add("CMID", "CMID");
            tableMapping.ColumnMappings.Add("SuspenseOriginator", "SuspenseOriginator");
            tableMapping.ColumnMappings.Add("SuspenseRefId", "SuspenseRefId");
            tableMapping.ColumnMappings.Add("SuspenseType", "SuspenseType");
            tableMapping.ColumnMappings.Add("SuspenseTime", "SuspenseTime");
            tableMapping.ColumnMappings.Add("SuspenseConfirmed", "SuspenseConfirmed");
            tableMapping.ColumnMappings.Add("ActiveFlag", "ActiveFlag");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [ClearingMemberSuspenseStatus] WHERE (([ClearingMemberSuspenseStatusId] = @Original_ClearingMemberSuspenseStatusId) AND ([BusinessDate] = @Original_BusinessDate) AND ([ExchangeId] = @Original_ExchangeId) AND ([CMID] = @Original_CMID) AND ([SuspenseOriginator] = @Original_SuspenseOriginator) AND ((@IsNull_SuspenseRefId = 1 AND [SuspenseRefId] IS NULL) OR ([SuspenseRefId] = @Original_SuspenseRefId)) AND ([SuspenseType] = @Original_SuspenseType) AND ([SuspenseTime] = @Original_SuspenseTime) AND ([SuspenseConfirmed] = @Original_SuspenseConfirmed) AND ([ActiveFlag] = @Original_ActiveFlag))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClearingMemberSuspenseStatusId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ClearingMemberSuspenseStatusId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BusinessDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExchangeId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ExchangeId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CMID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CMID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SuspenseOriginator", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuspenseOriginator", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SuspenseRefId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuspenseRefId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SuspenseRefId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "SuspenseRefId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SuspenseType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuspenseType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SuspenseTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuspenseTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SuspenseConfirmed", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuspenseConfirmed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ActiveFlag", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActiveFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [ClearingMemberSuspenseStatus] ([BusinessDate], [ExchangeId], [CMID], [SuspenseOriginator], [SuspenseRefId], [SuspenseType], [SuspenseTime], [SuspenseConfirmed], [ActiveFlag]) VALUES (@BusinessDate, @ExchangeId, @CMID, @SuspenseOriginator, @SuspenseRefId, @SuspenseType, @SuspenseTime, @SuspenseConfirmed, @ActiveFlag);
SELECT ClearingMemberSuspenseStatusId, BusinessDate, ExchangeId, CMID, SuspenseOriginator, SuspenseRefId, SuspenseType, SuspenseTime, SuspenseConfirmed, ActiveFlag FROM ClearingMemberSuspenseStatus WHERE (BusinessDate = @BusinessDate) AND (CMID = @CMID) AND (ExchangeId = @ExchangeId) AND (SuspenseTime = @SuspenseTime) AND (SuspenseType = @SuspenseType)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExchangeId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ExchangeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CMID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SuspenseOriginator", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuspenseOriginator", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SuspenseRefId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "SuspenseRefId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SuspenseType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuspenseType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SuspenseTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuspenseTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SuspenseConfirmed", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuspenseConfirmed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActiveFlag", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActiveFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [ClearingMemberSuspenseStatus] SET [BusinessDate] = @BusinessDate, [ExchangeId] = @ExchangeId, [CMID] = @CMID, [SuspenseOriginator] = @SuspenseOriginator, [SuspenseRefId] = @SuspenseRefId, [SuspenseType] = @SuspenseType, [SuspenseTime] = @SuspenseTime, [SuspenseConfirmed] = @SuspenseConfirmed, [ActiveFlag] = @ActiveFlag WHERE (([ClearingMemberSuspenseStatusId] = @Original_ClearingMemberSuspenseStatusId) AND ([BusinessDate] = @Original_BusinessDate) AND ([ExchangeId] = @Original_ExchangeId) AND ([CMID] = @Original_CMID) AND ([SuspenseOriginator] = @Original_SuspenseOriginator) AND ((@IsNull_SuspenseRefId = 1 AND [SuspenseRefId] IS NULL) OR ([SuspenseRefId] = @Original_SuspenseRefId)) AND ([SuspenseType] = @Original_SuspenseType) AND ([SuspenseTime] = @Original_SuspenseTime) AND ([SuspenseConfirmed] = @Original_SuspenseConfirmed) AND ([ActiveFlag] = @Original_ActiveFlag));
SELECT ClearingMemberSuspenseStatusId, BusinessDate, ExchangeId, CMID, SuspenseOriginator, SuspenseRefId, SuspenseType, SuspenseTime, SuspenseConfirmed, ActiveFlag FROM ClearingMemberSuspenseStatus WHERE (BusinessDate = @BusinessDate) AND (CMID = @CMID) AND (ExchangeId = @ExchangeId) AND (SuspenseTime = @SuspenseTime) AND (SuspenseType = @SuspenseType)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExchangeId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ExchangeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CMID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SuspenseOriginator", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuspenseOriginator", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SuspenseRefId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "SuspenseRefId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SuspenseType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuspenseType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SuspenseTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuspenseTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SuspenseConfirmed", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuspenseConfirmed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActiveFlag", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActiveFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClearingMemberSuspenseStatusId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ClearingMemberSuspenseStatusId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BusinessDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExchangeId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ExchangeId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CMID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CMID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SuspenseOriginator", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuspenseOriginator", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SuspenseRefId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuspenseRefId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SuspenseRefId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "SuspenseRefId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SuspenseType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuspenseType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SuspenseTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuspenseTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SuspenseConfirmed", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuspenseConfirmed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ActiveFlag", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActiveFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ServicesCekTradefeed.Properties.Settings.Default.SKDConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        ClearingMemberSuspenseStatus.*\r\nFROM            ClearingMemberSuspe" +
                "nseStatus";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.ClearingMemberSuspenseStatusDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.ClearingMemberSuspenseStatusDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.ClearingMemberSuspenseStatusDataTable dataTable = new DataSet1.ClearingMemberSuspenseStatusDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.ClearingMemberSuspenseStatusDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "ClearingMemberSuspenseStatus");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ClearingMemberSuspenseStatusId, System.DateTime Original_BusinessDate, decimal Original_ExchangeId, decimal Original_CMID, string Original_SuspenseOriginator, global::System.Nullable<decimal> Original_SuspenseRefId, string Original_SuspenseType, System.DateTime Original_SuspenseTime, string Original_SuspenseConfirmed, string Original_ActiveFlag) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ClearingMemberSuspenseStatusId));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_BusinessDate));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_ExchangeId));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_CMID));
            if ((Original_SuspenseOriginator == null)) {
                throw new global::System.ArgumentNullException("Original_SuspenseOriginator");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_SuspenseOriginator));
            }
            if ((Original_SuspenseRefId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_SuspenseRefId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_SuspenseType == null)) {
                throw new global::System.ArgumentNullException("Original_SuspenseType");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_SuspenseType));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_SuspenseTime));
            if ((Original_SuspenseConfirmed == null)) {
                throw new global::System.ArgumentNullException("Original_SuspenseConfirmed");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_SuspenseConfirmed));
            }
            if ((Original_ActiveFlag == null)) {
                throw new global::System.ArgumentNullException("Original_ActiveFlag");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_ActiveFlag));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime BusinessDate, decimal ExchangeId, decimal CMID, string SuspenseOriginator, global::System.Nullable<decimal> SuspenseRefId, string SuspenseType, System.DateTime SuspenseTime, string SuspenseConfirmed, string ActiveFlag) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(BusinessDate));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(ExchangeId));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(CMID));
            if ((SuspenseOriginator == null)) {
                throw new global::System.ArgumentNullException("SuspenseOriginator");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(SuspenseOriginator));
            }
            if ((SuspenseRefId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(SuspenseRefId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((SuspenseType == null)) {
                throw new global::System.ArgumentNullException("SuspenseType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(SuspenseType));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(SuspenseTime));
            if ((SuspenseConfirmed == null)) {
                throw new global::System.ArgumentNullException("SuspenseConfirmed");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(SuspenseConfirmed));
            }
            if ((ActiveFlag == null)) {
                throw new global::System.ArgumentNullException("ActiveFlag");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(ActiveFlag));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime BusinessDate, 
                    decimal ExchangeId, 
                    decimal CMID, 
                    string SuspenseOriginator, 
                    global::System.Nullable<decimal> SuspenseRefId, 
                    string SuspenseType, 
                    System.DateTime SuspenseTime, 
                    string SuspenseConfirmed, 
                    string ActiveFlag, 
                    decimal Original_ClearingMemberSuspenseStatusId, 
                    System.DateTime Original_BusinessDate, 
                    decimal Original_ExchangeId, 
                    decimal Original_CMID, 
                    string Original_SuspenseOriginator, 
                    global::System.Nullable<decimal> Original_SuspenseRefId, 
                    string Original_SuspenseType, 
                    System.DateTime Original_SuspenseTime, 
                    string Original_SuspenseConfirmed, 
                    string Original_ActiveFlag) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(BusinessDate));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(ExchangeId));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(CMID));
            if ((SuspenseOriginator == null)) {
                throw new global::System.ArgumentNullException("SuspenseOriginator");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(SuspenseOriginator));
            }
            if ((SuspenseRefId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(SuspenseRefId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((SuspenseType == null)) {
                throw new global::System.ArgumentNullException("SuspenseType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(SuspenseType));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(SuspenseTime));
            if ((SuspenseConfirmed == null)) {
                throw new global::System.ArgumentNullException("SuspenseConfirmed");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(SuspenseConfirmed));
            }
            if ((ActiveFlag == null)) {
                throw new global::System.ArgumentNullException("ActiveFlag");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(ActiveFlag));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Original_ClearingMemberSuspenseStatusId));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_BusinessDate));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(Original_ExchangeId));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_CMID));
            if ((Original_SuspenseOriginator == null)) {
                throw new global::System.ArgumentNullException("Original_SuspenseOriginator");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_SuspenseOriginator));
            }
            if ((Original_SuspenseRefId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Original_SuspenseRefId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_SuspenseType == null)) {
                throw new global::System.ArgumentNullException("Original_SuspenseType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_SuspenseType));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(Original_SuspenseTime));
            if ((Original_SuspenseConfirmed == null)) {
                throw new global::System.ArgumentNullException("Original_SuspenseConfirmed");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_SuspenseConfirmed));
            }
            if ((Original_ActiveFlag == null)) {
                throw new global::System.ArgumentNullException("Original_ActiveFlag");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_ActiveFlag));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string SuspenseOriginator, global::System.Nullable<decimal> SuspenseRefId, string SuspenseConfirmed, string ActiveFlag, decimal Original_ClearingMemberSuspenseStatusId, System.DateTime Original_BusinessDate, decimal Original_ExchangeId, decimal Original_CMID, string Original_SuspenseOriginator, global::System.Nullable<decimal> Original_SuspenseRefId, string Original_SuspenseType, System.DateTime Original_SuspenseTime, string Original_SuspenseConfirmed, string Original_ActiveFlag) {
            return this.Update(Original_BusinessDate, Original_ExchangeId, Original_CMID, SuspenseOriginator, SuspenseRefId, Original_SuspenseType, Original_SuspenseTime, SuspenseConfirmed, ActiveFlag, Original_ClearingMemberSuspenseStatusId, Original_BusinessDate, Original_ExchangeId, Original_CMID, Original_SuspenseOriginator, Original_SuspenseRefId, Original_SuspenseType, Original_SuspenseTime, Original_SuspenseConfirmed, Original_ActiveFlag);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ClearingHouseSuspenseTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public ClearingHouseSuspenseTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ClearingHouseSuspense";
            tableMapping.ColumnMappings.Add("ClearingHouseSuspenseId", "ClearingHouseSuspenseId");
            tableMapping.ColumnMappings.Add("BusinessDate", "BusinessDate");
            tableMapping.ColumnMappings.Add("ExchangeId", "ExchangeId");
            tableMapping.ColumnMappings.Add("SuspenseNo", "SuspenseNo");
            tableMapping.ColumnMappings.Add("SuspenseTime", "SuspenseTime");
            tableMapping.ColumnMappings.Add("SendTime", "SendTime");
            tableMapping.ColumnMappings.Add("CMID", "CMID");
            tableMapping.ColumnMappings.Add("SuspenseType", "SuspenseType");
            tableMapping.ColumnMappings.Add("Description", "Description");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [ClearingHouseSuspense] WHERE (([ClearingHouseSuspenseId] = @Original_ClearingHouseSuspenseId) AND ([BusinessDate] = @Original_BusinessDate) AND ([ExchangeId] = @Original_ExchangeId) AND ([SuspenseNo] = @Original_SuspenseNo) AND ([SuspenseTime] = @Original_SuspenseTime) AND ((@IsNull_SendTime = 1 AND [SendTime] IS NULL) OR ([SendTime] = @Original_SendTime)) AND ([CMID] = @Original_CMID) AND ([SuspenseType] = @Original_SuspenseType) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Description] = @Original_Description)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClearingHouseSuspenseId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ClearingHouseSuspenseId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BusinessDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExchangeId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ExchangeId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SuspenseNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuspenseNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SuspenseTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuspenseTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SendTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SendTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SendTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SendTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CMID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CMID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SuspenseType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuspenseType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [ClearingHouseSuspense] ([BusinessDate], [ExchangeId], [SuspenseNo], [SuspenseTime], [SendTime], [CMID], [SuspenseType], [Description]) VALUES (@BusinessDate, @ExchangeId, @SuspenseNo, @SuspenseTime, @SendTime, @CMID, @SuspenseType, @Description);
SELECT ClearingHouseSuspenseId, BusinessDate, ExchangeId, SuspenseNo, SuspenseTime, SendTime, CMID, SuspenseType, Description FROM ClearingHouseSuspense WHERE (BusinessDate = @BusinessDate) AND (ExchangeId = @ExchangeId) AND (SuspenseNo = @SuspenseNo)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExchangeId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ExchangeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SuspenseNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuspenseNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SuspenseTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuspenseTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SendTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SendTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CMID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SuspenseType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuspenseType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [ClearingHouseSuspense] SET [BusinessDate] = @BusinessDate, [ExchangeId] = @ExchangeId, [SuspenseNo] = @SuspenseNo, [SuspenseTime] = @SuspenseTime, [SendTime] = @SendTime, [CMID] = @CMID, [SuspenseType] = @SuspenseType, [Description] = @Description WHERE (([ClearingHouseSuspenseId] = @Original_ClearingHouseSuspenseId) AND ([BusinessDate] = @Original_BusinessDate) AND ([ExchangeId] = @Original_ExchangeId) AND ([SuspenseNo] = @Original_SuspenseNo) AND ([SuspenseTime] = @Original_SuspenseTime) AND ((@IsNull_SendTime = 1 AND [SendTime] IS NULL) OR ([SendTime] = @Original_SendTime)) AND ([CMID] = @Original_CMID) AND ([SuspenseType] = @Original_SuspenseType) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Description] = @Original_Description)));
SELECT ClearingHouseSuspenseId, BusinessDate, ExchangeId, SuspenseNo, SuspenseTime, SendTime, CMID, SuspenseType, Description FROM ClearingHouseSuspense WHERE (BusinessDate = @BusinessDate) AND (ExchangeId = @ExchangeId) AND (SuspenseNo = @SuspenseNo)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExchangeId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ExchangeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SuspenseNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuspenseNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SuspenseTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuspenseTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SendTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SendTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CMID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SuspenseType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuspenseType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClearingHouseSuspenseId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ClearingHouseSuspenseId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BusinessDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExchangeId", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ExchangeId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SuspenseNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuspenseNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SuspenseTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuspenseTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SendTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SendTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SendTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SendTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CMID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CMID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SuspenseType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuspenseType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ServicesCekTradefeed.Properties.Settings.Default.SKDConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        ClearingHouseSuspense.*\r\nFROM            ClearingHouseSuspense";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT        BusinessDate, ExchangeId, MAX(SuspenseNo) AS SuspenseNo, GETDATE() AS SuspenseTime, - 1 AS CMID, '' AS SuspenseType
FROM            SKD.ClearingHouseSuspense
WHERE        (ExchangeId = @exchange) AND (BusinessDate = @date)
GROUP BY BusinessDate, ExchangeId";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@exchange", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "ExchangeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@date", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"INSERT INTO SKD.ClearingHouseSuspense
                         (BusinessDate, ExchangeId, SuspenseNo, SuspenseTime, SendTime, CMID, SuspenseType, Description)
VALUES        (@BusinessDate,@ExchangeId,@SuspenseNo,@SuspenseTime,@SendTime,@CMID,@SuspenseType,@Description);  

SELECT SCOPE_IDENTITY();  ";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExchangeId", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "ExchangeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SuspenseNo", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "SuspenseNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SuspenseTime", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "SuspenseTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SendTime", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "SendTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "CMID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SuspenseType", global::System.Data.SqlDbType.VarChar, 1, global::System.Data.ParameterDirection.Input, 0, 0, "SuspenseType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.VarChar, 40, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.ClearingHouseSuspenseDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.ClearingHouseSuspenseDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.ClearingHouseSuspenseDataTable dataTable = new DataSet1.ClearingHouseSuspenseDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByMaxSuspendNo(DataSet1.ClearingHouseSuspenseDataTable dataTable, decimal exchange, System.DateTime date) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(exchange));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(date));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSet1.ClearingHouseSuspenseDataTable GetDataByMaxSuspendNo(decimal exchange, System.DateTime date) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(exchange));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(date));
            DataSet1.ClearingHouseSuspenseDataTable dataTable = new DataSet1.ClearingHouseSuspenseDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.ClearingHouseSuspenseDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "ClearingHouseSuspense");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ClearingHouseSuspenseId, System.DateTime Original_BusinessDate, decimal Original_ExchangeId, int Original_SuspenseNo, System.DateTime Original_SuspenseTime, global::System.Nullable<global::System.DateTime> Original_SendTime, decimal Original_CMID, string Original_SuspenseType, string Original_Description) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ClearingHouseSuspenseId));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_BusinessDate));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_ExchangeId));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_SuspenseNo));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_SuspenseTime));
            if ((Original_SendTime.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_SendTime.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((decimal)(Original_CMID));
            if ((Original_SuspenseType == null)) {
                throw new global::System.ArgumentNullException("Original_SuspenseType");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_SuspenseType));
            }
            if ((Original_Description == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Description));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime BusinessDate, decimal ExchangeId, int SuspenseNo, System.DateTime SuspenseTime, global::System.Nullable<global::System.DateTime> SendTime, decimal CMID, string SuspenseType, string Description) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(BusinessDate));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(ExchangeId));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(SuspenseNo));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(SuspenseTime));
            if ((SendTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(SendTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(CMID));
            if ((SuspenseType == null)) {
                throw new global::System.ArgumentNullException("SuspenseType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(SuspenseType));
            }
            if ((Description == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Description));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime BusinessDate, 
                    decimal ExchangeId, 
                    int SuspenseNo, 
                    System.DateTime SuspenseTime, 
                    global::System.Nullable<global::System.DateTime> SendTime, 
                    decimal CMID, 
                    string SuspenseType, 
                    string Description, 
                    decimal Original_ClearingHouseSuspenseId, 
                    System.DateTime Original_BusinessDate, 
                    decimal Original_ExchangeId, 
                    int Original_SuspenseNo, 
                    System.DateTime Original_SuspenseTime, 
                    global::System.Nullable<global::System.DateTime> Original_SendTime, 
                    decimal Original_CMID, 
                    string Original_SuspenseType, 
                    string Original_Description) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(BusinessDate));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(ExchangeId));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(SuspenseNo));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(SuspenseTime));
            if ((SendTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(SendTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(CMID));
            if ((SuspenseType == null)) {
                throw new global::System.ArgumentNullException("SuspenseType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(SuspenseType));
            }
            if ((Description == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Description));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Original_ClearingHouseSuspenseId));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_BusinessDate));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Original_ExchangeId));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_SuspenseNo));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_SuspenseTime));
            if ((Original_SendTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_SendTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Original_CMID));
            if ((Original_SuspenseType == null)) {
                throw new global::System.ArgumentNullException("Original_SuspenseType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_SuspenseType));
            }
            if ((Original_Description == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_Description));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime SuspenseTime, global::System.Nullable<global::System.DateTime> SendTime, decimal CMID, string SuspenseType, string Description, decimal Original_ClearingHouseSuspenseId, System.DateTime Original_BusinessDate, decimal Original_ExchangeId, int Original_SuspenseNo, System.DateTime Original_SuspenseTime, global::System.Nullable<global::System.DateTime> Original_SendTime, decimal Original_CMID, string Original_SuspenseType, string Original_Description) {
            return this.Update(Original_BusinessDate, Original_ExchangeId, Original_SuspenseNo, SuspenseTime, SendTime, CMID, SuspenseType, Description, Original_ClearingHouseSuspenseId, Original_BusinessDate, Original_ExchangeId, Original_SuspenseNo, Original_SuspenseTime, Original_SendTime, Original_CMID, Original_SuspenseType, Original_Description);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual object InsertQuery(System.DateTime BusinessDate, decimal ExchangeId, int SuspenseNo, System.DateTime SuspenseTime, global::System.Nullable<global::System.DateTime> SendTime, decimal CMID, string SuspenseType, string Description) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            command.Parameters[0].Value = ((System.DateTime)(BusinessDate));
            command.Parameters[1].Value = ((decimal)(ExchangeId));
            command.Parameters[2].Value = ((int)(SuspenseNo));
            command.Parameters[3].Value = ((System.DateTime)(SuspenseTime));
            if ((SendTime.HasValue == true)) {
                command.Parameters[4].Value = ((System.DateTime)(SendTime.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            command.Parameters[5].Value = ((decimal)(CMID));
            if ((SuspenseType == null)) {
                throw new global::System.ArgumentNullException("SuspenseType");
            }
            else {
                command.Parameters[6].Value = ((string)(SuspenseType));
            }
            if ((Description == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(Description));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ClearingMemberTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public ClearingMemberTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ClearingMember";
            tableMapping.ColumnMappings.Add("Code", "Code");
            tableMapping.ColumnMappings.Add("ApprovalStatus", "ApprovalStatus");
            tableMapping.ColumnMappings.Add("EffectiveStartDate", "EffectiveStartDate");
            tableMapping.ColumnMappings.Add("CMID", "CMID");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("PPKP", "PPKP");
            tableMapping.ColumnMappings.Add("Website", "Website");
            tableMapping.ColumnMappings.Add("CMStatus", "CMStatus");
            tableMapping.ColumnMappings.Add("AgreementNo", "AgreementNo");
            tableMapping.ColumnMappings.Add("AgreementDate", "AgreementDate");
            tableMapping.ColumnMappings.Add("ExchangeStatus", "ExchangeStatus");
            tableMapping.ColumnMappings.Add("CertNo", "CertNo");
            tableMapping.ColumnMappings.Add("CertDate", "CertDate");
            tableMapping.ColumnMappings.Add("SPATraderNo", "SPATraderNo");
            tableMapping.ColumnMappings.Add("SPATraderDate", "SPATraderDate");
            tableMapping.ColumnMappings.Add("SPABrokerNo", "SPABrokerNo");
            tableMapping.ColumnMappings.Add("SPABrokerDate", "SPABrokerDate");
            tableMapping.ColumnMappings.Add("PALNLicense", "PALNLicense");
            tableMapping.ColumnMappings.Add("CompAnniversary", "CompAnniversary");
            tableMapping.ColumnMappings.Add("CompImageID", "CompImageID");
            tableMapping.ColumnMappings.Add("AgreementType", "AgreementType");
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
            tableMapping.ColumnMappings.Add("CreatedDate", "CreatedDate");
            tableMapping.ColumnMappings.Add("LastUpdatedBy", "LastUpdatedBy");
            tableMapping.ColumnMappings.Add("LastUpdatedDate", "LastUpdatedDate");
            tableMapping.ColumnMappings.Add("EffectiveEndDate", "EffectiveEndDate");
            tableMapping.ColumnMappings.Add("ApprovalDesc", "ApprovalDesc");
            tableMapping.ColumnMappings.Add("OriginalID", "OriginalID");
            tableMapping.ColumnMappings.Add("ActionFlag", "ActionFlag");
            tableMapping.ColumnMappings.Add("InitialMarginMultiplier", "InitialMarginMultiplier");
            tableMapping.ColumnMappings.Add("MinReqInitialMarginIDR", "MinReqInitialMarginIDR");
            tableMapping.ColumnMappings.Add("MinReqInitialMarginUSD", "MinReqInitialMarginUSD");
            tableMapping.ColumnMappings.Add("typeMM", "typeMM");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [ClearingMember] WHERE (([Code] = @Original_Code) AND ([ApprovalStatu" +
                "s] = @Original_ApprovalStatus) AND ([EffectiveStartDate] = @Original_EffectiveSt" +
                "artDate) AND ([CMID] = @Original_CMID) AND ((@IsNull_Name = 1 AND [Name] IS NULL" +
                ") OR ([Name] = @Original_Name)) AND ((@IsNull_PPKP = 1 AND [PPKP] IS NULL) OR ([" +
                "PPKP] = @Original_PPKP)) AND ((@IsNull_Website = 1 AND [Website] IS NULL) OR ([W" +
                "ebsite] = @Original_Website)) AND ((@IsNull_CMStatus = 1 AND [CMStatus] IS NULL)" +
                " OR ([CMStatus] = @Original_CMStatus)) AND ((@IsNull_AgreementNo = 1 AND [Agreem" +
                "entNo] IS NULL) OR ([AgreementNo] = @Original_AgreementNo)) AND ((@IsNull_Agreem" +
                "entDate = 1 AND [AgreementDate] IS NULL) OR ([AgreementDate] = @Original_Agreeme" +
                "ntDate)) AND ((@IsNull_ExchangeStatus = 1 AND [ExchangeStatus] IS NULL) OR ([Exc" +
                "hangeStatus] = @Original_ExchangeStatus)) AND ((@IsNull_CertNo = 1 AND [CertNo] " +
                "IS NULL) OR ([CertNo] = @Original_CertNo)) AND ((@IsNull_CertDate = 1 AND [CertD" +
                "ate] IS NULL) OR ([CertDate] = @Original_CertDate)) AND ((@IsNull_SPATraderNo = " +
                "1 AND [SPATraderNo] IS NULL) OR ([SPATraderNo] = @Original_SPATraderNo)) AND ((@" +
                "IsNull_SPATraderDate = 1 AND [SPATraderDate] IS NULL) OR ([SPATraderDate] = @Ori" +
                "ginal_SPATraderDate)) AND ((@IsNull_SPABrokerNo = 1 AND [SPABrokerNo] IS NULL) O" +
                "R ([SPABrokerNo] = @Original_SPABrokerNo)) AND ((@IsNull_SPABrokerDate = 1 AND [" +
                "SPABrokerDate] IS NULL) OR ([SPABrokerDate] = @Original_SPABrokerDate)) AND ((@I" +
                "sNull_PALNLicense = 1 AND [PALNLicense] IS NULL) OR ([PALNLicense] = @Original_P" +
                "ALNLicense)) AND ((@IsNull_CompAnniversary = 1 AND [CompAnniversary] IS NULL) OR" +
                " ([CompAnniversary] = @Original_CompAnniversary)) AND ((@IsNull_CompImageID = 1 " +
                "AND [CompImageID] IS NULL) OR ([CompImageID] = @Original_CompImageID)) AND ((@Is" +
                "Null_AgreementType = 1 AND [AgreementType] IS NULL) OR ([AgreementType] = @Origi" +
                "nal_AgreementType)) AND ([CreatedBy] = @Original_CreatedBy) AND ([CreatedDate] =" +
                " @Original_CreatedDate) AND ([LastUpdatedBy] = @Original_LastUpdatedBy) AND ([La" +
                "stUpdatedDate] = @Original_LastUpdatedDate) AND ((@IsNull_EffectiveEndDate = 1 A" +
                "ND [EffectiveEndDate] IS NULL) OR ([EffectiveEndDate] = @Original_EffectiveEndDa" +
                "te)) AND ((@IsNull_ApprovalDesc = 1 AND [ApprovalDesc] IS NULL) OR ([ApprovalDes" +
                "c] = @Original_ApprovalDesc)) AND ((@IsNull_OriginalID = 1 AND [OriginalID] IS N" +
                "ULL) OR ([OriginalID] = @Original_OriginalID)) AND ((@IsNull_ActionFlag = 1 AND " +
                "[ActionFlag] IS NULL) OR ([ActionFlag] = @Original_ActionFlag)) AND ([InitialMar" +
                "ginMultiplier] = @Original_InitialMarginMultiplier) AND ([MinReqInitialMarginIDR" +
                "] = @Original_MinReqInitialMarginIDR) AND ([MinReqInitialMarginUSD] = @Original_" +
                "MinReqInitialMarginUSD) AND ((@IsNull_typeMM = 1 AND [typeMM] IS NULL) OR ([type" +
                "MM] = @Original_typeMM)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApprovalStatus", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EffectiveStartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveStartDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CMID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CMID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PPKP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PPKP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PPKP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PPKP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Website", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Website", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Website", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Website", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CMStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CMStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CMStatus", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CMStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AgreementNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgreementNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AgreementNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgreementNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AgreementDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgreementDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AgreementDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgreementDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ExchangeStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExchangeStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExchangeStatus", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExchangeStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CertNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CertNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CertDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CertDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SPATraderNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPATraderNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SPATraderNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPATraderNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SPATraderDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPATraderDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SPATraderDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPATraderDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SPABrokerNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPABrokerNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SPABrokerNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPABrokerNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SPABrokerDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPABrokerDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SPABrokerDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPABrokerDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PALNLicense", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PALNLicense", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PALNLicense", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PALNLicense", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CompAnniversary", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompAnniversary", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CompAnniversary", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompAnniversary", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CompImageID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompImageID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CompImageID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CompImageID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AgreementType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgreementType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AgreementType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgreementType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EffectiveEndDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveEndDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EffectiveEndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveEndDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ApprovalDesc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApprovalDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OriginalID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginalID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OriginalID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "OriginalID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ActionFlag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActionFlag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ActionFlag", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActionFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InitialMarginMultiplier", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 5, "InitialMarginMultiplier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MinReqInitialMarginIDR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "MinReqInitialMarginIDR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MinReqInitialMarginUSD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "MinReqInitialMarginUSD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_typeMM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "typeMM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_typeMM", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "typeMM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [ClearingMember] ([Code], [ApprovalStatus], [EffectiveStartDate], [Na" +
                "me], [PPKP], [Website], [CMStatus], [AgreementNo], [AgreementDate], [ExchangeSta" +
                "tus], [CertNo], [CertDate], [SPATraderNo], [SPATraderDate], [SPABrokerNo], [SPAB" +
                "rokerDate], [PALNLicense], [CompAnniversary], [CompImageID], [AgreementType], [C" +
                "reatedBy], [CreatedDate], [LastUpdatedBy], [LastUpdatedDate], [EffectiveEndDate]" +
                ", [ApprovalDesc], [OriginalID], [ActionFlag], [InitialMarginMultiplier], [MinReq" +
                "InitialMarginIDR], [MinReqInitialMarginUSD], [typeMM]) VALUES (@Code, @ApprovalS" +
                "tatus, @EffectiveStartDate, @Name, @PPKP, @Website, @CMStatus, @AgreementNo, @Ag" +
                "reementDate, @ExchangeStatus, @CertNo, @CertDate, @SPATraderNo, @SPATraderDate, " +
                "@SPABrokerNo, @SPABrokerDate, @PALNLicense, @CompAnniversary, @CompImageID, @Agr" +
                "eementType, @CreatedBy, @CreatedDate, @LastUpdatedBy, @LastUpdatedDate, @Effecti" +
                "veEndDate, @ApprovalDesc, @OriginalID, @ActionFlag, @InitialMarginMultiplier, @M" +
                "inReqInitialMarginIDR, @MinReqInitialMarginUSD, @typeMM);\r\nSELECT Code, Approval" +
                "Status, EffectiveStartDate, CMID, Name, PPKP, Website, CMStatus, AgreementNo, Ag" +
                "reementDate, ExchangeStatus, CertNo, CertDate, SPATraderNo, SPATraderDate, SPABr" +
                "okerNo, SPABrokerDate, PALNLicense, CompAnniversary, CompImageID, AgreementType," +
                " CreatedBy, CreatedDate, LastUpdatedBy, LastUpdatedDate, EffectiveEndDate, Appro" +
                "valDesc, OriginalID, ActionFlag, InitialMarginMultiplier, MinReqInitialMarginIDR" +
                ", MinReqInitialMarginUSD, typeMM FROM ClearingMember WHERE (ApprovalStatus = @Ap" +
                "provalStatus) AND (Code = @Code) AND (EffectiveStartDate = @EffectiveStartDate)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovalStatus", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EffectiveStartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveStartDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PPKP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PPKP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Website", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Website", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMStatus", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CMStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgreementNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgreementNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgreementDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgreementDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExchangeStatus", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExchangeStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CertNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CertDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPATraderNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPATraderNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPATraderDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPATraderDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPABrokerNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPABrokerNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPABrokerDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPABrokerDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PALNLicense", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PALNLicense", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompAnniversary", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompAnniversary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompImageID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CompImageID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgreementType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgreementType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EffectiveEndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveEndDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovalDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginalID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "OriginalID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActionFlag", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActionFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InitialMarginMultiplier", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 5, "InitialMarginMultiplier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MinReqInitialMarginIDR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "MinReqInitialMarginIDR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MinReqInitialMarginUSD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "MinReqInitialMarginUSD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@typeMM", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "typeMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [ClearingMember] SET [Code] = @Code, [ApprovalStatus] = @ApprovalStatus, [" +
                "EffectiveStartDate] = @EffectiveStartDate, [Name] = @Name, [PPKP] = @PPKP, [Webs" +
                "ite] = @Website, [CMStatus] = @CMStatus, [AgreementNo] = @AgreementNo, [Agreemen" +
                "tDate] = @AgreementDate, [ExchangeStatus] = @ExchangeStatus, [CertNo] = @CertNo," +
                " [CertDate] = @CertDate, [SPATraderNo] = @SPATraderNo, [SPATraderDate] = @SPATra" +
                "derDate, [SPABrokerNo] = @SPABrokerNo, [SPABrokerDate] = @SPABrokerDate, [PALNLi" +
                "cense] = @PALNLicense, [CompAnniversary] = @CompAnniversary, [CompImageID] = @Co" +
                "mpImageID, [AgreementType] = @AgreementType, [CreatedBy] = @CreatedBy, [CreatedD" +
                "ate] = @CreatedDate, [LastUpdatedBy] = @LastUpdatedBy, [LastUpdatedDate] = @Last" +
                "UpdatedDate, [EffectiveEndDate] = @EffectiveEndDate, [ApprovalDesc] = @ApprovalD" +
                "esc, [OriginalID] = @OriginalID, [ActionFlag] = @ActionFlag, [InitialMarginMulti" +
                "plier] = @InitialMarginMultiplier, [MinReqInitialMarginIDR] = @MinReqInitialMarg" +
                "inIDR, [MinReqInitialMarginUSD] = @MinReqInitialMarginUSD, [typeMM] = @typeMM WH" +
                "ERE (([Code] = @Original_Code) AND ([ApprovalStatus] = @Original_ApprovalStatus)" +
                " AND ([EffectiveStartDate] = @Original_EffectiveStartDate) AND ([CMID] = @Origin" +
                "al_CMID) AND ((@IsNull_Name = 1 AND [Name] IS NULL) OR ([Name] = @Original_Name)" +
                ") AND ((@IsNull_PPKP = 1 AND [PPKP] IS NULL) OR ([PPKP] = @Original_PPKP)) AND (" +
                "(@IsNull_Website = 1 AND [Website] IS NULL) OR ([Website] = @Original_Website)) " +
                "AND ((@IsNull_CMStatus = 1 AND [CMStatus] IS NULL) OR ([CMStatus] = @Original_CM" +
                "Status)) AND ((@IsNull_AgreementNo = 1 AND [AgreementNo] IS NULL) OR ([Agreement" +
                "No] = @Original_AgreementNo)) AND ((@IsNull_AgreementDate = 1 AND [AgreementDate" +
                "] IS NULL) OR ([AgreementDate] = @Original_AgreementDate)) AND ((@IsNull_Exchang" +
                "eStatus = 1 AND [ExchangeStatus] IS NULL) OR ([ExchangeStatus] = @Original_Excha" +
                "ngeStatus)) AND ((@IsNull_CertNo = 1 AND [CertNo] IS NULL) OR ([CertNo] = @Origi" +
                "nal_CertNo)) AND ((@IsNull_CertDate = 1 AND [CertDate] IS NULL) OR ([CertDate] =" +
                " @Original_CertDate)) AND ((@IsNull_SPATraderNo = 1 AND [SPATraderNo] IS NULL) O" +
                "R ([SPATraderNo] = @Original_SPATraderNo)) AND ((@IsNull_SPATraderDate = 1 AND [" +
                "SPATraderDate] IS NULL) OR ([SPATraderDate] = @Original_SPATraderDate)) AND ((@I" +
                "sNull_SPABrokerNo = 1 AND [SPABrokerNo] IS NULL) OR ([SPABrokerNo] = @Original_S" +
                "PABrokerNo)) AND ((@IsNull_SPABrokerDate = 1 AND [SPABrokerDate] IS NULL) OR ([S" +
                "PABrokerDate] = @Original_SPABrokerDate)) AND ((@IsNull_PALNLicense = 1 AND [PAL" +
                "NLicense] IS NULL) OR ([PALNLicense] = @Original_PALNLicense)) AND ((@IsNull_Com" +
                "pAnniversary = 1 AND [CompAnniversary] IS NULL) OR ([CompAnniversary] = @Origina" +
                "l_CompAnniversary)) AND ((@IsNull_CompImageID = 1 AND [CompImageID] IS NULL) OR " +
                "([CompImageID] = @Original_CompImageID)) AND ((@IsNull_AgreementType = 1 AND [Ag" +
                "reementType] IS NULL) OR ([AgreementType] = @Original_AgreementType)) AND ([Crea" +
                "tedBy] = @Original_CreatedBy) AND ([CreatedDate] = @Original_CreatedDate) AND ([" +
                "LastUpdatedBy] = @Original_LastUpdatedBy) AND ([LastUpdatedDate] = @Original_Las" +
                "tUpdatedDate) AND ((@IsNull_EffectiveEndDate = 1 AND [EffectiveEndDate] IS NULL)" +
                " OR ([EffectiveEndDate] = @Original_EffectiveEndDate)) AND ((@IsNull_ApprovalDes" +
                "c = 1 AND [ApprovalDesc] IS NULL) OR ([ApprovalDesc] = @Original_ApprovalDesc)) " +
                "AND ((@IsNull_OriginalID = 1 AND [OriginalID] IS NULL) OR ([OriginalID] = @Origi" +
                "nal_OriginalID)) AND ((@IsNull_ActionFlag = 1 AND [ActionFlag] IS NULL) OR ([Act" +
                "ionFlag] = @Original_ActionFlag)) AND ([InitialMarginMultiplier] = @Original_Ini" +
                "tialMarginMultiplier) AND ([MinReqInitialMarginIDR] = @Original_MinReqInitialMar" +
                "ginIDR) AND ([MinReqInitialMarginUSD] = @Original_MinReqInitialMarginUSD) AND ((" +
                "@IsNull_typeMM = 1 AND [typeMM] IS NULL) OR ([typeMM] = @Original_typeMM)));\r\nSE" +
                "LECT Code, ApprovalStatus, EffectiveStartDate, CMID, Name, PPKP, Website, CMStat" +
                "us, AgreementNo, AgreementDate, ExchangeStatus, CertNo, CertDate, SPATraderNo, S" +
                "PATraderDate, SPABrokerNo, SPABrokerDate, PALNLicense, CompAnniversary, CompImag" +
                "eID, AgreementType, CreatedBy, CreatedDate, LastUpdatedBy, LastUpdatedDate, Effe" +
                "ctiveEndDate, ApprovalDesc, OriginalID, ActionFlag, InitialMarginMultiplier, Min" +
                "ReqInitialMarginIDR, MinReqInitialMarginUSD, typeMM FROM ClearingMember WHERE (A" +
                "pprovalStatus = @ApprovalStatus) AND (Code = @Code) AND (EffectiveStartDate = @E" +
                "ffectiveStartDate)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovalStatus", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EffectiveStartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveStartDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PPKP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PPKP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Website", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Website", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMStatus", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CMStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgreementNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgreementNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgreementDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgreementDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExchangeStatus", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExchangeStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CertNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CertDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPATraderNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPATraderNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPATraderDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPATraderDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPABrokerNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPABrokerNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPABrokerDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPABrokerDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PALNLicense", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PALNLicense", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompAnniversary", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompAnniversary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompImageID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CompImageID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgreementType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgreementType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EffectiveEndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveEndDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovalDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginalID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "OriginalID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActionFlag", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActionFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InitialMarginMultiplier", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 5, "InitialMarginMultiplier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MinReqInitialMarginIDR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "MinReqInitialMarginIDR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MinReqInitialMarginUSD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "MinReqInitialMarginUSD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@typeMM", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "typeMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApprovalStatus", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EffectiveStartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveStartDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CMID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CMID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PPKP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PPKP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PPKP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PPKP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Website", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Website", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Website", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Website", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CMStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CMStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CMStatus", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CMStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AgreementNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgreementNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AgreementNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgreementNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AgreementDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgreementDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AgreementDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgreementDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ExchangeStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExchangeStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExchangeStatus", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExchangeStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CertNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CertNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CertDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CertDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SPATraderNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPATraderNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SPATraderNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPATraderNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SPATraderDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPATraderDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SPATraderDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPATraderDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SPABrokerNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPABrokerNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SPABrokerNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPABrokerNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SPABrokerDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPABrokerDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SPABrokerDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPABrokerDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PALNLicense", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PALNLicense", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PALNLicense", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PALNLicense", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CompAnniversary", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompAnniversary", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CompAnniversary", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompAnniversary", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CompImageID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompImageID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CompImageID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CompImageID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AgreementType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgreementType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AgreementType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgreementType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EffectiveEndDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveEndDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EffectiveEndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveEndDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ApprovalDesc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApprovalDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OriginalID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginalID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OriginalID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "OriginalID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ActionFlag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActionFlag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ActionFlag", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActionFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InitialMarginMultiplier", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 5, "InitialMarginMultiplier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MinReqInitialMarginIDR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "MinReqInitialMarginIDR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MinReqInitialMarginUSD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "MinReqInitialMarginUSD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_typeMM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "typeMM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_typeMM", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "typeMM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ServicesCekTradefeed.Properties.Settings.Default.SKDConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        ClearingMember.*\r\nFROM            ClearingMember";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT ActionFlag, AgreementDate, AgreementNo, AgreementType, ApprovalDesc, ApprovalStatus, CMID, CMStatus, CertDate, CertNo, Code, CompAnniversary, CompImageID, CreatedBy, CreatedDate, EffectiveEndDate, EffectiveStartDate, ExchangeStatus, InitialMarginMultiplier, LastUpdatedBy, LastUpdatedDate, MinReqInitialMarginIDR, MinReqInitialMarginUSD, Name, OriginalID, PALNLicense, PPKP, SPABrokerDate, SPABrokerNo, SPATraderDate, SPATraderNo, Website, typeMM FROM ClearingMember WHERE (Code = @code)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@code", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.ClearingMemberDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.ClearingMemberDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.ClearingMemberDataTable dataTable = new DataSet1.ClearingMemberDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByCode(DataSet1.ClearingMemberDataTable dataTable, string code) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((code == null)) {
                throw new global::System.ArgumentNullException("code");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(code));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSet1.ClearingMemberDataTable GetDataByCode(string code) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((code == null)) {
                throw new global::System.ArgumentNullException("code");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(code));
            }
            DataSet1.ClearingMemberDataTable dataTable = new DataSet1.ClearingMemberDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.ClearingMemberDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "ClearingMember");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_Code, 
                    string Original_ApprovalStatus, 
                    System.DateTime Original_EffectiveStartDate, 
                    decimal Original_CMID, 
                    string Original_Name, 
                    string Original_PPKP, 
                    string Original_Website, 
                    string Original_CMStatus, 
                    string Original_AgreementNo, 
                    global::System.Nullable<global::System.DateTime> Original_AgreementDate, 
                    string Original_ExchangeStatus, 
                    string Original_CertNo, 
                    global::System.Nullable<global::System.DateTime> Original_CertDate, 
                    string Original_SPATraderNo, 
                    global::System.Nullable<global::System.DateTime> Original_SPATraderDate, 
                    string Original_SPABrokerNo, 
                    global::System.Nullable<global::System.DateTime> Original_SPABrokerDate, 
                    string Original_PALNLicense, 
                    global::System.Nullable<global::System.DateTime> Original_CompAnniversary, 
                    global::System.Nullable<decimal> Original_CompImageID, 
                    string Original_AgreementType, 
                    string Original_CreatedBy, 
                    System.DateTime Original_CreatedDate, 
                    string Original_LastUpdatedBy, 
                    System.DateTime Original_LastUpdatedDate, 
                    global::System.Nullable<global::System.DateTime> Original_EffectiveEndDate, 
                    string Original_ApprovalDesc, 
                    global::System.Nullable<decimal> Original_OriginalID, 
                    string Original_ActionFlag, 
                    decimal Original_InitialMarginMultiplier, 
                    decimal Original_MinReqInitialMarginIDR, 
                    decimal Original_MinReqInitialMarginUSD, 
                    string Original_typeMM) {
            if ((Original_Code == null)) {
                throw new global::System.ArgumentNullException("Original_Code");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Code));
            }
            if ((Original_ApprovalStatus == null)) {
                throw new global::System.ArgumentNullException("Original_ApprovalStatus");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ApprovalStatus));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_EffectiveStartDate));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_CMID));
            if ((Original_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Name));
            }
            if ((Original_PPKP == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_PPKP));
            }
            if ((Original_Website == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Website));
            }
            if ((Original_CMStatus == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_CMStatus));
            }
            if ((Original_AgreementNo == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_AgreementNo));
            }
            if ((Original_AgreementDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((System.DateTime)(Original_AgreementDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_ExchangeStatus == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_ExchangeStatus));
            }
            if ((Original_CertNo == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_CertNo));
            }
            if ((Original_CertDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((System.DateTime)(Original_CertDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_SPATraderNo == null)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_SPATraderNo));
            }
            if ((Original_SPATraderDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((System.DateTime)(Original_SPATraderDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_SPABrokerNo == null)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_SPABrokerNo));
            }
            if ((Original_SPABrokerDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((System.DateTime)(Original_SPABrokerDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_PALNLicense == null)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_PALNLicense));
            }
            if ((Original_CompAnniversary.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((System.DateTime)(Original_CompAnniversary.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_CompImageID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((decimal)(Original_CompImageID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_AgreementType == null)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((string)(Original_AgreementType));
            }
            if ((Original_CreatedBy == null)) {
                throw new global::System.ArgumentNullException("Original_CreatedBy");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_CreatedBy));
            }
            this.Adapter.DeleteCommand.Parameters[39].Value = ((System.DateTime)(Original_CreatedDate));
            if ((Original_LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("Original_LastUpdatedBy");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_LastUpdatedBy));
            }
            this.Adapter.DeleteCommand.Parameters[41].Value = ((System.DateTime)(Original_LastUpdatedDate));
            if ((Original_EffectiveEndDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((System.DateTime)(Original_EffectiveEndDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_ApprovalDesc == null)) {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[45].Value = ((string)(Original_ApprovalDesc));
            }
            if ((Original_OriginalID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[47].Value = ((decimal)(Original_OriginalID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_ActionFlag == null)) {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[49].Value = ((string)(Original_ActionFlag));
            }
            this.Adapter.DeleteCommand.Parameters[50].Value = ((decimal)(Original_InitialMarginMultiplier));
            this.Adapter.DeleteCommand.Parameters[51].Value = ((decimal)(Original_MinReqInitialMarginIDR));
            this.Adapter.DeleteCommand.Parameters[52].Value = ((decimal)(Original_MinReqInitialMarginUSD));
            if ((Original_typeMM == null)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((string)(Original_typeMM));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string Code, 
                    string ApprovalStatus, 
                    System.DateTime EffectiveStartDate, 
                    string Name, 
                    string PPKP, 
                    string Website, 
                    string CMStatus, 
                    string AgreementNo, 
                    global::System.Nullable<global::System.DateTime> AgreementDate, 
                    string ExchangeStatus, 
                    string CertNo, 
                    global::System.Nullable<global::System.DateTime> CertDate, 
                    string SPATraderNo, 
                    global::System.Nullable<global::System.DateTime> SPATraderDate, 
                    string SPABrokerNo, 
                    global::System.Nullable<global::System.DateTime> SPABrokerDate, 
                    string PALNLicense, 
                    global::System.Nullable<global::System.DateTime> CompAnniversary, 
                    global::System.Nullable<decimal> CompImageID, 
                    string AgreementType, 
                    string CreatedBy, 
                    System.DateTime CreatedDate, 
                    string LastUpdatedBy, 
                    System.DateTime LastUpdatedDate, 
                    global::System.Nullable<global::System.DateTime> EffectiveEndDate, 
                    string ApprovalDesc, 
                    global::System.Nullable<decimal> OriginalID, 
                    string ActionFlag, 
                    decimal InitialMarginMultiplier, 
                    decimal MinReqInitialMarginIDR, 
                    decimal MinReqInitialMarginUSD, 
                    string typeMM) {
            if ((Code == null)) {
                throw new global::System.ArgumentNullException("Code");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Code));
            }
            if ((ApprovalStatus == null)) {
                throw new global::System.ArgumentNullException("ApprovalStatus");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ApprovalStatus));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(EffectiveStartDate));
            if ((Name == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Name));
            }
            if ((PPKP == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(PPKP));
            }
            if ((Website == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Website));
            }
            if ((CMStatus == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(CMStatus));
            }
            if ((AgreementNo == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(AgreementNo));
            }
            if ((AgreementDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(AgreementDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ExchangeStatus == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(ExchangeStatus));
            }
            if ((CertNo == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(CertNo));
            }
            if ((CertDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(CertDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((SPATraderNo == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(SPATraderNo));
            }
            if ((SPATraderDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(SPATraderDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((SPABrokerNo == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(SPABrokerNo));
            }
            if ((SPABrokerDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((System.DateTime)(SPABrokerDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((PALNLicense == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(PALNLicense));
            }
            if ((CompAnniversary.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((System.DateTime)(CompAnniversary.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((CompImageID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(CompImageID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((AgreementType == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(AgreementType));
            }
            if ((CreatedBy == null)) {
                throw new global::System.ArgumentNullException("CreatedBy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(CreatedBy));
            }
            this.Adapter.InsertCommand.Parameters[21].Value = ((System.DateTime)(CreatedDate));
            if ((LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("LastUpdatedBy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(LastUpdatedBy));
            }
            this.Adapter.InsertCommand.Parameters[23].Value = ((System.DateTime)(LastUpdatedDate));
            if ((EffectiveEndDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((System.DateTime)(EffectiveEndDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((ApprovalDesc == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(ApprovalDesc));
            }
            if ((OriginalID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((decimal)(OriginalID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((ActionFlag == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(ActionFlag));
            }
            this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(InitialMarginMultiplier));
            this.Adapter.InsertCommand.Parameters[29].Value = ((decimal)(MinReqInitialMarginIDR));
            this.Adapter.InsertCommand.Parameters[30].Value = ((decimal)(MinReqInitialMarginUSD));
            if ((typeMM == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(typeMM));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Code, 
                    string ApprovalStatus, 
                    System.DateTime EffectiveStartDate, 
                    string Name, 
                    string PPKP, 
                    string Website, 
                    string CMStatus, 
                    string AgreementNo, 
                    global::System.Nullable<global::System.DateTime> AgreementDate, 
                    string ExchangeStatus, 
                    string CertNo, 
                    global::System.Nullable<global::System.DateTime> CertDate, 
                    string SPATraderNo, 
                    global::System.Nullable<global::System.DateTime> SPATraderDate, 
                    string SPABrokerNo, 
                    global::System.Nullable<global::System.DateTime> SPABrokerDate, 
                    string PALNLicense, 
                    global::System.Nullable<global::System.DateTime> CompAnniversary, 
                    global::System.Nullable<decimal> CompImageID, 
                    string AgreementType, 
                    string CreatedBy, 
                    System.DateTime CreatedDate, 
                    string LastUpdatedBy, 
                    System.DateTime LastUpdatedDate, 
                    global::System.Nullable<global::System.DateTime> EffectiveEndDate, 
                    string ApprovalDesc, 
                    global::System.Nullable<decimal> OriginalID, 
                    string ActionFlag, 
                    decimal InitialMarginMultiplier, 
                    decimal MinReqInitialMarginIDR, 
                    decimal MinReqInitialMarginUSD, 
                    string typeMM, 
                    string Original_Code, 
                    string Original_ApprovalStatus, 
                    System.DateTime Original_EffectiveStartDate, 
                    decimal Original_CMID, 
                    string Original_Name, 
                    string Original_PPKP, 
                    string Original_Website, 
                    string Original_CMStatus, 
                    string Original_AgreementNo, 
                    global::System.Nullable<global::System.DateTime> Original_AgreementDate, 
                    string Original_ExchangeStatus, 
                    string Original_CertNo, 
                    global::System.Nullable<global::System.DateTime> Original_CertDate, 
                    string Original_SPATraderNo, 
                    global::System.Nullable<global::System.DateTime> Original_SPATraderDate, 
                    string Original_SPABrokerNo, 
                    global::System.Nullable<global::System.DateTime> Original_SPABrokerDate, 
                    string Original_PALNLicense, 
                    global::System.Nullable<global::System.DateTime> Original_CompAnniversary, 
                    global::System.Nullable<decimal> Original_CompImageID, 
                    string Original_AgreementType, 
                    string Original_CreatedBy, 
                    System.DateTime Original_CreatedDate, 
                    string Original_LastUpdatedBy, 
                    System.DateTime Original_LastUpdatedDate, 
                    global::System.Nullable<global::System.DateTime> Original_EffectiveEndDate, 
                    string Original_ApprovalDesc, 
                    global::System.Nullable<decimal> Original_OriginalID, 
                    string Original_ActionFlag, 
                    decimal Original_InitialMarginMultiplier, 
                    decimal Original_MinReqInitialMarginIDR, 
                    decimal Original_MinReqInitialMarginUSD, 
                    string Original_typeMM) {
            if ((Code == null)) {
                throw new global::System.ArgumentNullException("Code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Code));
            }
            if ((ApprovalStatus == null)) {
                throw new global::System.ArgumentNullException("ApprovalStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ApprovalStatus));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(EffectiveStartDate));
            if ((Name == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Name));
            }
            if ((PPKP == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(PPKP));
            }
            if ((Website == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Website));
            }
            if ((CMStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(CMStatus));
            }
            if ((AgreementNo == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(AgreementNo));
            }
            if ((AgreementDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(AgreementDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ExchangeStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(ExchangeStatus));
            }
            if ((CertNo == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(CertNo));
            }
            if ((CertDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(CertDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((SPATraderNo == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(SPATraderNo));
            }
            if ((SPATraderDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(SPATraderDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((SPABrokerNo == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(SPABrokerNo));
            }
            if ((SPABrokerDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(SPABrokerDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((PALNLicense == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(PALNLicense));
            }
            if ((CompAnniversary.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(CompAnniversary.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((CompImageID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(CompImageID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((AgreementType == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(AgreementType));
            }
            if ((CreatedBy == null)) {
                throw new global::System.ArgumentNullException("CreatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(CreatedBy));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(CreatedDate));
            if ((LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("LastUpdatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(LastUpdatedBy));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(LastUpdatedDate));
            if ((EffectiveEndDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((System.DateTime)(EffectiveEndDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((ApprovalDesc == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(ApprovalDesc));
            }
            if ((OriginalID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(OriginalID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((ActionFlag == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(ActionFlag));
            }
            this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(InitialMarginMultiplier));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(MinReqInitialMarginIDR));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(MinReqInitialMarginUSD));
            if ((typeMM == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(typeMM));
            }
            if ((Original_Code == null)) {
                throw new global::System.ArgumentNullException("Original_Code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_Code));
            }
            if ((Original_ApprovalStatus == null)) {
                throw new global::System.ArgumentNullException("Original_ApprovalStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_ApprovalStatus));
            }
            this.Adapter.UpdateCommand.Parameters[34].Value = ((System.DateTime)(Original_EffectiveStartDate));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((decimal)(Original_CMID));
            if ((Original_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_Name));
            }
            if ((Original_PPKP == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_PPKP));
            }
            if ((Original_Website == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_Website));
            }
            if ((Original_CMStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_CMStatus));
            }
            if ((Original_AgreementNo == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_AgreementNo));
            }
            if ((Original_AgreementDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((System.DateTime)(Original_AgreementDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_ExchangeStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_ExchangeStatus));
            }
            if ((Original_CertNo == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_CertNo));
            }
            if ((Original_CertDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((System.DateTime)(Original_CertDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_SPATraderNo == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_SPATraderNo));
            }
            if ((Original_SPATraderDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((System.DateTime)(Original_SPATraderDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_SPABrokerNo == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_SPABrokerNo));
            }
            if ((Original_SPABrokerDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((System.DateTime)(Original_SPABrokerDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Original_PALNLicense == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(Original_PALNLicense));
            }
            if ((Original_CompAnniversary.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((System.DateTime)(Original_CompAnniversary.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((Original_CompImageID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((decimal)(Original_CompImageID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((Original_AgreementType == null)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(Original_AgreementType));
            }
            if ((Original_CreatedBy == null)) {
                throw new global::System.ArgumentNullException("Original_CreatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(Original_CreatedBy));
            }
            this.Adapter.UpdateCommand.Parameters[71].Value = ((System.DateTime)(Original_CreatedDate));
            if ((Original_LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("Original_LastUpdatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(Original_LastUpdatedBy));
            }
            this.Adapter.UpdateCommand.Parameters[73].Value = ((System.DateTime)(Original_LastUpdatedDate));
            if ((Original_EffectiveEndDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[75].Value = ((System.DateTime)(Original_EffectiveEndDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((Original_ApprovalDesc == null)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((string)(Original_ApprovalDesc));
            }
            if ((Original_OriginalID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((decimal)(Original_OriginalID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Original_ActionFlag == null)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(Original_ActionFlag));
            }
            this.Adapter.UpdateCommand.Parameters[82].Value = ((decimal)(Original_InitialMarginMultiplier));
            this.Adapter.UpdateCommand.Parameters[83].Value = ((decimal)(Original_MinReqInitialMarginIDR));
            this.Adapter.UpdateCommand.Parameters[84].Value = ((decimal)(Original_MinReqInitialMarginUSD));
            if ((Original_typeMM == null)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[86].Value = ((string)(Original_typeMM));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Name, 
                    string PPKP, 
                    string Website, 
                    string CMStatus, 
                    string AgreementNo, 
                    global::System.Nullable<global::System.DateTime> AgreementDate, 
                    string ExchangeStatus, 
                    string CertNo, 
                    global::System.Nullable<global::System.DateTime> CertDate, 
                    string SPATraderNo, 
                    global::System.Nullable<global::System.DateTime> SPATraderDate, 
                    string SPABrokerNo, 
                    global::System.Nullable<global::System.DateTime> SPABrokerDate, 
                    string PALNLicense, 
                    global::System.Nullable<global::System.DateTime> CompAnniversary, 
                    global::System.Nullable<decimal> CompImageID, 
                    string AgreementType, 
                    string CreatedBy, 
                    System.DateTime CreatedDate, 
                    string LastUpdatedBy, 
                    System.DateTime LastUpdatedDate, 
                    global::System.Nullable<global::System.DateTime> EffectiveEndDate, 
                    string ApprovalDesc, 
                    global::System.Nullable<decimal> OriginalID, 
                    string ActionFlag, 
                    decimal InitialMarginMultiplier, 
                    decimal MinReqInitialMarginIDR, 
                    decimal MinReqInitialMarginUSD, 
                    string typeMM, 
                    string Original_Code, 
                    string Original_ApprovalStatus, 
                    System.DateTime Original_EffectiveStartDate, 
                    decimal Original_CMID, 
                    string Original_Name, 
                    string Original_PPKP, 
                    string Original_Website, 
                    string Original_CMStatus, 
                    string Original_AgreementNo, 
                    global::System.Nullable<global::System.DateTime> Original_AgreementDate, 
                    string Original_ExchangeStatus, 
                    string Original_CertNo, 
                    global::System.Nullable<global::System.DateTime> Original_CertDate, 
                    string Original_SPATraderNo, 
                    global::System.Nullable<global::System.DateTime> Original_SPATraderDate, 
                    string Original_SPABrokerNo, 
                    global::System.Nullable<global::System.DateTime> Original_SPABrokerDate, 
                    string Original_PALNLicense, 
                    global::System.Nullable<global::System.DateTime> Original_CompAnniversary, 
                    global::System.Nullable<decimal> Original_CompImageID, 
                    string Original_AgreementType, 
                    string Original_CreatedBy, 
                    System.DateTime Original_CreatedDate, 
                    string Original_LastUpdatedBy, 
                    System.DateTime Original_LastUpdatedDate, 
                    global::System.Nullable<global::System.DateTime> Original_EffectiveEndDate, 
                    string Original_ApprovalDesc, 
                    global::System.Nullable<decimal> Original_OriginalID, 
                    string Original_ActionFlag, 
                    decimal Original_InitialMarginMultiplier, 
                    decimal Original_MinReqInitialMarginIDR, 
                    decimal Original_MinReqInitialMarginUSD, 
                    string Original_typeMM) {
            return this.Update(Original_Code, Original_ApprovalStatus, Original_EffectiveStartDate, Name, PPKP, Website, CMStatus, AgreementNo, AgreementDate, ExchangeStatus, CertNo, CertDate, SPATraderNo, SPATraderDate, SPABrokerNo, SPABrokerDate, PALNLicense, CompAnniversary, CompImageID, AgreementType, CreatedBy, CreatedDate, LastUpdatedBy, LastUpdatedDate, EffectiveEndDate, ApprovalDesc, OriginalID, ActionFlag, InitialMarginMultiplier, MinReqInitialMarginIDR, MinReqInitialMarginUSD, typeMM, Original_Code, Original_ApprovalStatus, Original_EffectiveStartDate, Original_CMID, Original_Name, Original_PPKP, Original_Website, Original_CMStatus, Original_AgreementNo, Original_AgreementDate, Original_ExchangeStatus, Original_CertNo, Original_CertDate, Original_SPATraderNo, Original_SPATraderDate, Original_SPABrokerNo, Original_SPABrokerDate, Original_PALNLicense, Original_CompAnniversary, Original_CompImageID, Original_AgreementType, Original_CreatedBy, Original_CreatedDate, Original_LastUpdatedBy, Original_LastUpdatedDate, Original_EffectiveEndDate, Original_ApprovalDesc, Original_OriginalID, Original_ActionFlag, Original_InitialMarginMultiplier, Original_MinReqInitialMarginIDR, Original_MinReqInitialMarginUSD, Original_typeMM);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CommodityTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public CommodityTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Commodity";
            tableMapping.ColumnMappings.Add("ProductID", "ProductID");
            tableMapping.ColumnMappings.Add("ExchangeId", "ExchangeId");
            tableMapping.ColumnMappings.Add("EffectiveStartDate", "EffectiveStartDate");
            tableMapping.ColumnMappings.Add("ApprovalStatus", "ApprovalStatus");
            tableMapping.ColumnMappings.Add("CommodityCode", "CommodityCode");
            tableMapping.ColumnMappings.Add("CommodityID", "CommodityID");
            tableMapping.ColumnMappings.Add("ReffCommID", "ReffCommID");
            tableMapping.ColumnMappings.Add("Unit", "Unit");
            tableMapping.ColumnMappings.Add("PEG", "PEG");
            tableMapping.ColumnMappings.Add("VMIRCACalType", "VMIRCACalType");
            tableMapping.ColumnMappings.Add("CrossCurr", "CrossCurr");
            tableMapping.ColumnMappings.Add("SettlementFactor", "SettlementFactor");
            tableMapping.ColumnMappings.Add("DayRef", "DayRef");
            tableMapping.ColumnMappings.Add("Divisor", "Divisor");
            tableMapping.ColumnMappings.Add("CommName", "CommName");
            tableMapping.ColumnMappings.Add("MarginTender", "MarginTender");
            tableMapping.ColumnMappings.Add("MarginSpot", "MarginSpot");
            tableMapping.ColumnMappings.Add("MarginRemote", "MarginRemote");
            tableMapping.ColumnMappings.Add("CalSpreadRemoteMargin", "CalSpreadRemoteMargin");
            tableMapping.ColumnMappings.Add("CrossCurrProduct", "CrossCurrProduct");
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
            tableMapping.ColumnMappings.Add("CreatedDate", "CreatedDate");
            tableMapping.ColumnMappings.Add("HomeCurrencyID", "HomeCurrencyID");
            tableMapping.ColumnMappings.Add("LastUpdatedBy", "LastUpdatedBy");
            tableMapping.ColumnMappings.Add("LastUpdatedDate", "LastUpdatedDate");
            tableMapping.ColumnMappings.Add("EffectiveEndDate", "EffectiveEndDate");
            tableMapping.ColumnMappings.Add("ApprovalDesc", "ApprovalDesc");
            tableMapping.ColumnMappings.Add("IsKIE", "IsKIE");
            tableMapping.ColumnMappings.Add("SettlementType", "SettlementType");
            tableMapping.ColumnMappings.Add("ContractSize", "ContractSize");
            tableMapping.ColumnMappings.Add("IsIncentive", "IsIncentive");
            tableMapping.ColumnMappings.Add("OriginalCommodityID", "OriginalCommodityID");
            tableMapping.ColumnMappings.Add("ActionFlag", "ActionFlag");
            tableMapping.ColumnMappings.Add("TenderReqType", "TenderReqType");
            tableMapping.ColumnMappings.Add("ModeK1", "ModeK1");
            tableMapping.ColumnMappings.Add("ValueK1", "ValueK1");
            tableMapping.ColumnMappings.Add("ContractRefK1", "ContractRefK1");
            tableMapping.ColumnMappings.Add("ModeK2", "ModeK2");
            tableMapping.ColumnMappings.Add("ValueK2", "ValueK2");
            tableMapping.ColumnMappings.Add("ContractRefK2", "ContractRefK2");
            tableMapping.ColumnMappings.Add("ModeD", "ModeD");
            tableMapping.ColumnMappings.Add("ValueD", "ValueD");
            tableMapping.ColumnMappings.Add("ContractRefD", "ContractRefD");
            tableMapping.ColumnMappings.Add("ModeIM", "ModeIM");
            tableMapping.ColumnMappings.Add("PercentageSpotIM", "PercentageSpotIM");
            tableMapping.ColumnMappings.Add("PercentageRemoteIM", "PercentageRemoteIM");
            tableMapping.ColumnMappings.Add("ModeFee", "ModeFee");
            tableMapping.ColumnMappings.Add("isMarketMaker", "isMarketMaker");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ServicesCekTradefeed.Properties.Settings.Default.SKDConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        ProductID, ExchangeId, EffectiveStartDate, ApprovalStatus, Commodit" +
                "yCode, CommodityID, ISNULL(ReffCommID, 0) AS ReffCommID, ISNULL(Unit, \'\') AS Uni" +
                "t, ISNULL(PEG, 0) AS PEG, ISNULL(VMIRCACalType, \'\') \r\n                         A" +
                "S VMIRCACalType, ISNULL(CrossCurr, \'\') AS CrossCurr, ISNULL(SettlementFactor, \'\'" +
                ") AS SettlementFactor, ISNULL(DayRef, 0) AS DayRef, ISNULL(Divisor, 0) AS Diviso" +
                "r, ISNULL(CommName, \'\') AS CommName, \r\n                         ISNULL(MarginTen" +
                "der, 0) AS MarginTender, ISNULL(MarginSpot, 0) AS MarginSpot, ISNULL(MarginRemot" +
                "e, 0) AS MarginRemote, ISNULL(CalSpreadRemoteMargin, 0) AS CalSpreadRemoteMargin" +
                ", ISNULL(CrossCurrProduct, \'\') \r\n                         AS CrossCurrProduct, I" +
                "SNULL(CreatedBy, \'\') AS CreatedBy, ISNULL(CreatedDate, \'\') AS CreatedDate, ISNUL" +
                "L(HomeCurrencyID, 0) AS HomeCurrencyID, ISNULL(LastUpdatedBy, \'\') AS LastUpdated" +
                "By, ISNULL(LastUpdatedDate, \'\') \r\n                         AS LastUpdatedDate, I" +
                "SNULL(EffectiveEndDate, \'\') AS EffectiveEndDate, ISNULL(ApprovalDesc, \'\') AS App" +
                "rovalDesc, ISNULL(IsKIE, \'\') AS IsKIE, ISNULL(SettlementType, \'\') AS SettlementT" +
                "ype, ISNULL(ContractSize, 0) \r\n                         AS ContractSize, ISNULL(" +
                "IsIncentive, \'\') AS IsIncentive, OriginalCommodityID, ISNULL(ActionFlag, \'\') AS " +
                "ActionFlag, ISNULL(TenderReqType, \'\') AS TenderReqType, ISNULL(ModeK1, \'\') AS Mo" +
                "deK1, ISNULL(ValueK1, 0) \r\n                         AS ValueK1, ISNULL(ContractR" +
                "efK1, 0) AS ContractRefK1, ISNULL(ModeK2, \'\') AS ModeK2, ISNULL(ValueK2, 0) AS V" +
                "alueK2, ISNULL(ContractRefK2, 0) AS ContractRefK2, ISNULL(ModeD, \'\') AS ModeD, I" +
                "SNULL(ValueD, 0) \r\n                         AS ValueD, ISNULL(ContractRefD, 0) A" +
                "S ContractRefD, ISNULL(ModeIM, \'\') AS ModeIM, ISNULL(PercentageSpotIM, 0) AS Per" +
                "centageSpotIM, ISNULL(PercentageRemoteIM, 0) AS PercentageRemoteIM, ISNULL(ModeF" +
                "ee, \'\') \r\n                         AS ModeFee, ISNULL(isMarketMaker, \'\') AS isMa" +
                "rketMaker\r\nFROM            Commodity";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT ActionFlag, ApprovalDesc, ApprovalStatus, CalSpreadRemoteMargin, CommName, CommodityCode, CommodityID, ContractRefD, ContractRefK1, ContractRefK2, ContractSize, CreatedBy, CreatedDate, CrossCurr, CrossCurrProduct, DayRef, Divisor, EffectiveEndDate, EffectiveStartDate, ExchangeId, HomeCurrencyID, IsIncentive, IsKIE, LastUpdatedBy, LastUpdatedDate, MarginRemote, MarginSpot, MarginTender, ModeD, ModeFee, ModeIM, ModeK1, ModeK2, OriginalCommodityID, PEG, PercentageRemoteIM, PercentageSpotIM, ProductID, ReffCommID, SettlementFactor, SettlementType, TenderReqType, Unit, VMIRCACalType, ValueD, ValueK1, ValueK2, isMarketMaker FROM Commodity WHERE (CommodityCode = @code)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@code", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "CommodityCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT ISNULL(ActionFlag, \'\') AS ActionFlag, ISNULL(ApprovalDesc, \'\') AS Approval" +
                "Desc, ApprovalStatus, ISNULL(CalSpreadRemoteMargin, 0) AS CalSpreadRemoteMargin," +
                " ISNULL(CommName, \'\') AS CommName, CommodityCode, CommodityID, ISNULL(ContractRe" +
                "fD, 0) AS ContractRefD, ISNULL(ContractRefK1, 0) AS ContractRefK1, ISNULL(Contra" +
                "ctRefK2, 0) AS ContractRefK2, ISNULL(ContractSize, 0) AS ContractSize, ISNULL(Cr" +
                "eatedBy, \'\') AS CreatedBy, ISNULL(CreatedDate, \'\') AS CreatedDate, ISNULL(CrossC" +
                "urr, \'\') AS CrossCurr, ISNULL(CrossCurrProduct, \'\') AS CrossCurrProduct, ISNULL(" +
                "DayRef, 0) AS DayRef, ISNULL(Divisor, 0) AS Divisor, ISNULL(EffectiveEndDate, \'\'" +
                ") AS EffectiveEndDate, EffectiveStartDate, ExchangeId, ISNULL(HomeCurrencyID, 0)" +
                " AS HomeCurrencyID, ISNULL(IsIncentive, \'\') AS IsIncentive, ISNULL(IsKIE, \'\') AS" +
                " IsKIE, ISNULL(LastUpdatedBy, \'\') AS LastUpdatedBy, ISNULL(LastUpdatedDate, \'\') " +
                "AS LastUpdatedDate, ISNULL(MarginRemote, 0) AS MarginRemote, ISNULL(MarginSpot, " +
                "0) AS MarginSpot, ISNULL(MarginTender, 0) AS MarginTender, ISNULL(ModeD, \'\') AS " +
                "ModeD, ISNULL(ModeFee, \'\') AS ModeFee, ISNULL(ModeIM, \'\') AS ModeIM, ISNULL(Mode" +
                "K1, \'\') AS ModeK1, ISNULL(ModeK2, \'\') AS ModeK2, OriginalCommodityID, ISNULL(PEG" +
                ", 0) AS PEG, ISNULL(PercentageRemoteIM, 0) AS PercentageRemoteIM, ISNULL(Percent" +
                "ageSpotIM, 0) AS PercentageSpotIM, ProductID, ISNULL(ReffCommID, 0) AS ReffCommI" +
                "D, ISNULL(SettlementFactor, \'\') AS SettlementFactor, ISNULL(SettlementType, \'\') " +
                "AS SettlementType, ISNULL(TenderReqType, \'\') AS TenderReqType, ISNULL(Unit, \'\') " +
                "AS Unit, ISNULL(VMIRCACalType, \'\') AS VMIRCACalType, ISNULL(ValueD, 0) AS ValueD" +
                ", ISNULL(ValueK1, 0) AS ValueK1, ISNULL(ValueK2, 0) AS ValueK2, ISNULL(isMarketM" +
                "aker, \'\') AS isMarketMaker FROM Commodity WHERE (CommodityCode = @code)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@code", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "CommodityCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.CommodityDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.CommodityDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.CommodityDataTable dataTable = new DataSet1.CommodityDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByComCode(DataSet1.CommodityDataTable dataTable, string code) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((code == null)) {
                throw new global::System.ArgumentNullException("code");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(code));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSet1.CommodityDataTable GetDataByComCode(string code) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((code == null)) {
                throw new global::System.ArgumentNullException("code");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(code));
            }
            DataSet1.CommodityDataTable dataTable = new DataSet1.CommodityDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByCommodityCode(DataSet1.CommodityDataTable dataTable, string code) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((code == null)) {
                throw new global::System.ArgumentNullException("code");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(code));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSet1.CommodityDataTable GetDataByCommodityCode(string code) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((code == null)) {
                throw new global::System.ArgumentNullException("code");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(code));
            }
            DataSet1.CommodityDataTable dataTable = new DataSet1.CommodityDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ContractTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public ContractTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Contract";
            tableMapping.ColumnMappings.Add("CommodityID", "CommodityID");
            tableMapping.ColumnMappings.Add("ContractMonth", "ContractMonth");
            tableMapping.ColumnMappings.Add("ContractYear", "ContractYear");
            tableMapping.ColumnMappings.Add("ApprovalStatus", "ApprovalStatus");
            tableMapping.ColumnMappings.Add("EffectiveStartDate", "EffectiveStartDate");
            tableMapping.ColumnMappings.Add("ContractID", "ContractID");
            tableMapping.ColumnMappings.Add("ContractSize", "ContractSize");
            tableMapping.ColumnMappings.Add("SettlementType", "SettlementType");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("Unit", "Unit");
            tableMapping.ColumnMappings.Add("StartDate", "StartDate");
            tableMapping.ColumnMappings.Add("EndSpot", "EndSpot");
            tableMapping.ColumnMappings.Add("StartSpot", "StartSpot");
            tableMapping.ColumnMappings.Add("PEG", "PEG");
            tableMapping.ColumnMappings.Add("VMIRCACalType", "VMIRCACalType");
            tableMapping.ColumnMappings.Add("SettlementFactor", "SettlementFactor");
            tableMapping.ColumnMappings.Add("DayRef", "DayRef");
            tableMapping.ColumnMappings.Add("Divisor", "Divisor");
            tableMapping.ColumnMappings.Add("MarginTender", "MarginTender");
            tableMapping.ColumnMappings.Add("MarginSpot", "MarginSpot");
            tableMapping.ColumnMappings.Add("MarginRemote", "MarginRemote");
            tableMapping.ColumnMappings.Add("CalSpreadRemoteMargin", "CalSpreadRemoteMargin");
            tableMapping.ColumnMappings.Add("IsKIE", "IsKIE");
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
            tableMapping.ColumnMappings.Add("CreatedDate", "CreatedDate");
            tableMapping.ColumnMappings.Add("LastUpdatedBy", "LastUpdatedBy");
            tableMapping.ColumnMappings.Add("LastUpdatedDate", "LastUpdatedDate");
            tableMapping.ColumnMappings.Add("EffectiveEndDate", "EffectiveEndDate");
            tableMapping.ColumnMappings.Add("ApprovalDesc", "ApprovalDesc");
            tableMapping.ColumnMappings.Add("HomeCurrencyID", "HomeCurrencyID");
            tableMapping.ColumnMappings.Add("CrossCurr", "CrossCurr");
            tableMapping.ColumnMappings.Add("CrossCurrProduct", "CrossCurrProduct");
            tableMapping.ColumnMappings.Add("OriginalContractID", "OriginalContractID");
            tableMapping.ColumnMappings.Add("ActionFlag", "ActionFlag");
            tableMapping.ColumnMappings.Add("TenderReqType", "TenderReqType");
            tableMapping.ColumnMappings.Add("SubCategoryID", "SubCategoryID");
            tableMapping.ColumnMappings.Add("ModeK1", "ModeK1");
            tableMapping.ColumnMappings.Add("ValueK1", "ValueK1");
            tableMapping.ColumnMappings.Add("ContractRefK1", "ContractRefK1");
            tableMapping.ColumnMappings.Add("ModeK2", "ModeK2");
            tableMapping.ColumnMappings.Add("ValueK2", "ValueK2");
            tableMapping.ColumnMappings.Add("ContractRefK2", "ContractRefK2");
            tableMapping.ColumnMappings.Add("ModeD", "ModeD");
            tableMapping.ColumnMappings.Add("ValueD", "ValueD");
            tableMapping.ColumnMappings.Add("ContractRefD", "ContractRefD");
            tableMapping.ColumnMappings.Add("ModeIM", "ModeIM");
            tableMapping.ColumnMappings.Add("PercentageSpotIM", "PercentageSpotIM");
            tableMapping.ColumnMappings.Add("PercentageRemoteIM", "PercentageRemoteIM");
            tableMapping.ColumnMappings.Add("ModeFee", "ModeFee");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Contract] WHERE (([CommodityID] = @Original_CommodityID) AND ([Contr" +
                "actMonth] = @Original_ContractMonth) AND ([ContractYear] = @Original_ContractYea" +
                "r) AND ([ApprovalStatus] = @Original_ApprovalStatus) AND ([EffectiveStartDate] =" +
                " @Original_EffectiveStartDate) AND ([ContractID] = @Original_ContractID) AND ([C" +
                "ontractSize] = @Original_ContractSize) AND ([SettlementType] = @Original_Settlem" +
                "entType) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Descripti" +
                "on] = @Original_Description)) AND ([Unit] = @Original_Unit) AND ([StartDate] = @" +
                "Original_StartDate) AND ([EndSpot] = @Original_EndSpot) AND ([StartSpot] = @Orig" +
                "inal_StartSpot) AND ((@IsNull_PEG = 1 AND [PEG] IS NULL) OR ([PEG] = @Original_P" +
                "EG)) AND ((@IsNull_VMIRCACalType = 1 AND [VMIRCACalType] IS NULL) OR ([VMIRCACal" +
                "Type] = @Original_VMIRCACalType)) AND ((@IsNull_SettlementFactor = 1 AND [Settle" +
                "mentFactor] IS NULL) OR ([SettlementFactor] = @Original_SettlementFactor)) AND (" +
                "(@IsNull_DayRef = 1 AND [DayRef] IS NULL) OR ([DayRef] = @Original_DayRef)) AND " +
                "((@IsNull_Divisor = 1 AND [Divisor] IS NULL) OR ([Divisor] = @Original_Divisor))" +
                " AND ((@IsNull_MarginTender = 1 AND [MarginTender] IS NULL) OR ([MarginTender] =" +
                " @Original_MarginTender)) AND ([MarginSpot] = @Original_MarginSpot) AND ([Margin" +
                "Remote] = @Original_MarginRemote) AND ((@IsNull_CalSpreadRemoteMargin = 1 AND [C" +
                "alSpreadRemoteMargin] IS NULL) OR ([CalSpreadRemoteMargin] = @Original_CalSpread" +
                "RemoteMargin)) AND ([IsKIE] = @Original_IsKIE) AND ([CreatedBy] = @Original_Crea" +
                "tedBy) AND ([CreatedDate] = @Original_CreatedDate) AND ([LastUpdatedBy] = @Origi" +
                "nal_LastUpdatedBy) AND ([LastUpdatedDate] = @Original_LastUpdatedDate) AND ((@Is" +
                "Null_EffectiveEndDate = 1 AND [EffectiveEndDate] IS NULL) OR ([EffectiveEndDate]" +
                " = @Original_EffectiveEndDate)) AND ((@IsNull_ApprovalDesc = 1 AND [ApprovalDesc" +
                "] IS NULL) OR ([ApprovalDesc] = @Original_ApprovalDesc)) AND ((@IsNull_HomeCurre" +
                "ncyID = 1 AND [HomeCurrencyID] IS NULL) OR ([HomeCurrencyID] = @Original_HomeCur" +
                "rencyID)) AND ([CrossCurr] = @Original_CrossCurr) AND ((@IsNull_CrossCurrProduct" +
                " = 1 AND [CrossCurrProduct] IS NULL) OR ([CrossCurrProduct] = @Original_CrossCur" +
                "rProduct)) AND ((@IsNull_OriginalContractID = 1 AND [OriginalContractID] IS NULL" +
                ") OR ([OriginalContractID] = @Original_OriginalContractID)) AND ((@IsNull_Action" +
                "Flag = 1 AND [ActionFlag] IS NULL) OR ([ActionFlag] = @Original_ActionFlag)) AND" +
                " ((@IsNull_TenderReqType = 1 AND [TenderReqType] IS NULL) OR ([TenderReqType] = " +
                "@Original_TenderReqType)) AND ((@IsNull_SubCategoryID = 1 AND [SubCategoryID] IS" +
                " NULL) OR ([SubCategoryID] = @Original_SubCategoryID)) AND ((@IsNull_ModeK1 = 1 " +
                "AND [ModeK1] IS NULL) OR ([ModeK1] = @Original_ModeK1)) AND ((@IsNull_ValueK1 = " +
                "1 AND [ValueK1] IS NULL) OR ([ValueK1] = @Original_ValueK1)) AND ((@IsNull_Contr" +
                "actRefK1 = 1 AND [ContractRefK1] IS NULL) OR ([ContractRefK1] = @Original_Contra" +
                "ctRefK1)) AND ((@IsNull_ModeK2 = 1 AND [ModeK2] IS NULL) OR ([ModeK2] = @Origina" +
                "l_ModeK2)) AND ((@IsNull_ValueK2 = 1 AND [ValueK2] IS NULL) OR ([ValueK2] = @Ori" +
                "ginal_ValueK2)) AND ((@IsNull_ContractRefK2 = 1 AND [ContractRefK2] IS NULL) OR " +
                "([ContractRefK2] = @Original_ContractRefK2)) AND ((@IsNull_ModeD = 1 AND [ModeD]" +
                " IS NULL) OR ([ModeD] = @Original_ModeD)) AND ((@IsNull_ValueD = 1 AND [ValueD] " +
                "IS NULL) OR ([ValueD] = @Original_ValueD)) AND ((@IsNull_ContractRefD = 1 AND [C" +
                "ontractRefD] IS NULL) OR ([ContractRefD] = @Original_ContractRefD)) AND ((@IsNul" +
                "l_ModeIM = 1 AND [ModeIM] IS NULL) OR ([ModeIM] = @Original_ModeIM)) AND ((@IsNu" +
                "ll_PercentageSpotIM = 1 AND [PercentageSpotIM] IS NULL) OR ([PercentageSpotIM] =" +
                " @Original_PercentageSpotIM)) AND ((@IsNull_PercentageRemoteIM = 1 AND [Percenta" +
                "geRemoteIM] IS NULL) OR ([PercentageRemoteIM] = @Original_PercentageRemoteIM)) A" +
                "ND ((@IsNull_ModeFee = 1 AND [ModeFee] IS NULL) OR ([ModeFee] = @Original_ModeFe" +
                "e)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CommodityID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CommodityID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractMonth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractMonth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApprovalStatus", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EffectiveStartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveStartDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ContractID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractSize", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "ContractSize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SettlementType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SettlementType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Unit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EndSpot", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndSpot", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StartSpot", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartSpot", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PEG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PEG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PEG", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "PEG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VMIRCACalType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VMIRCACalType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VMIRCACalType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VMIRCACalType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SettlementFactor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SettlementFactor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SettlementFactor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SettlementFactor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DayRef", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DayRef", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DayRef", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DayRef", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Divisor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Divisor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Divisor", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "Divisor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MarginTender", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MarginTender", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MarginTender", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "MarginTender", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MarginSpot", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "MarginSpot", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MarginRemote", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "MarginRemote", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CalSpreadRemoteMargin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CalSpreadRemoteMargin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CalSpreadRemoteMargin", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "CalSpreadRemoteMargin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsKIE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsKIE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EffectiveEndDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveEndDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EffectiveEndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveEndDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ApprovalDesc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApprovalDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HomeCurrencyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HomeCurrencyID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HomeCurrencyID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "HomeCurrencyID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CrossCurr", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrossCurr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CrossCurrProduct", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrossCurrProduct", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CrossCurrProduct", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrossCurrProduct", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OriginalContractID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginalContractID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OriginalContractID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "OriginalContractID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ActionFlag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActionFlag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ActionFlag", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActionFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TenderReqType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TenderReqType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TenderReqType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TenderReqType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubCategoryID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubCategoryID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubCategoryID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "SubCategoryID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ModeK1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeK1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModeK1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeK1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ValueK1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValueK1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ValueK1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "ValueK1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ContractRefK1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractRefK1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractRefK1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ContractRefK1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ModeK2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeK2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModeK2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeK2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ValueK2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValueK2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ValueK2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "ValueK2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ContractRefK2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractRefK2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractRefK2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ContractRefK2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ModeD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModeD", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ValueD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValueD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ValueD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "ValueD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ContractRefD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractRefD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractRefD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ContractRefD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ModeIM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeIM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModeIM", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeIM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PercentageSpotIM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PercentageSpotIM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PercentageSpotIM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 10, "PercentageSpotIM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PercentageRemoteIM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PercentageRemoteIM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PercentageRemoteIM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 10, "PercentageRemoteIM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ModeFee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeFee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModeFee", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [Contract] ([CommodityID], [ContractMonth], [ContractYear], [Approval" +
                "Status], [EffectiveStartDate], [ContractSize], [SettlementType], [Description], " +
                "[Unit], [StartDate], [EndSpot], [StartSpot], [PEG], [VMIRCACalType], [Settlement" +
                "Factor], [DayRef], [Divisor], [MarginTender], [MarginSpot], [MarginRemote], [Cal" +
                "SpreadRemoteMargin], [IsKIE], [CreatedBy], [CreatedDate], [LastUpdatedBy], [Last" +
                "UpdatedDate], [EffectiveEndDate], [ApprovalDesc], [HomeCurrencyID], [CrossCurr]," +
                " [CrossCurrProduct], [OriginalContractID], [ActionFlag], [TenderReqType], [SubCa" +
                "tegoryID], [ModeK1], [ValueK1], [ContractRefK1], [ModeK2], [ValueK2], [ContractR" +
                "efK2], [ModeD], [ValueD], [ContractRefD], [ModeIM], [PercentageSpotIM], [Percent" +
                "ageRemoteIM], [ModeFee]) VALUES (@CommodityID, @ContractMonth, @ContractYear, @A" +
                "pprovalStatus, @EffectiveStartDate, @ContractSize, @SettlementType, @Description" +
                ", @Unit, @StartDate, @EndSpot, @StartSpot, @PEG, @VMIRCACalType, @SettlementFact" +
                "or, @DayRef, @Divisor, @MarginTender, @MarginSpot, @MarginRemote, @CalSpreadRemo" +
                "teMargin, @IsKIE, @CreatedBy, @CreatedDate, @LastUpdatedBy, @LastUpdatedDate, @E" +
                "ffectiveEndDate, @ApprovalDesc, @HomeCurrencyID, @CrossCurr, @CrossCurrProduct, " +
                "@OriginalContractID, @ActionFlag, @TenderReqType, @SubCategoryID, @ModeK1, @Valu" +
                "eK1, @ContractRefK1, @ModeK2, @ValueK2, @ContractRefK2, @ModeD, @ValueD, @Contra" +
                "ctRefD, @ModeIM, @PercentageSpotIM, @PercentageRemoteIM, @ModeFee);\r\nSELECT Comm" +
                "odityID, ContractMonth, ContractYear, ApprovalStatus, EffectiveStartDate, Contra" +
                "ctID, ContractSize, SettlementType, Description, Unit, StartDate, EndSpot, Start" +
                "Spot, PEG, VMIRCACalType, SettlementFactor, DayRef, Divisor, MarginTender, Margi" +
                "nSpot, MarginRemote, CalSpreadRemoteMargin, IsKIE, CreatedBy, CreatedDate, LastU" +
                "pdatedBy, LastUpdatedDate, EffectiveEndDate, ApprovalDesc, HomeCurrencyID, Cross" +
                "Curr, CrossCurrProduct, OriginalContractID, ActionFlag, TenderReqType, SubCatego" +
                "ryID, ModeK1, ValueK1, ContractRefK1, ModeK2, ValueK2, ContractRefK2, ModeD, Val" +
                "ueD, ContractRefD, ModeIM, PercentageSpotIM, PercentageRemoteIM, ModeFee FROM Co" +
                "ntract WHERE (ApprovalStatus = @ApprovalStatus) AND (CommodityID = @CommodityID)" +
                " AND (ContractMonth = @ContractMonth) AND (ContractYear = @ContractYear) AND (Ef" +
                "fectiveStartDate = @EffectiveStartDate)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CommodityID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CommodityID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractMonth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractMonth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovalStatus", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EffectiveStartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveStartDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractSize", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "ContractSize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SettlementType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SettlementType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Unit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndSpot", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndSpot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartSpot", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartSpot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PEG", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "PEG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VMIRCACalType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VMIRCACalType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SettlementFactor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SettlementFactor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DayRef", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DayRef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Divisor", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "Divisor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarginTender", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "MarginTender", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarginSpot", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "MarginSpot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarginRemote", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "MarginRemote", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CalSpreadRemoteMargin", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "CalSpreadRemoteMargin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsKIE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsKIE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EffectiveEndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveEndDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovalDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HomeCurrencyID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "HomeCurrencyID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CrossCurr", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrossCurr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CrossCurrProduct", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrossCurrProduct", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginalContractID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "OriginalContractID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActionFlag", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActionFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TenderReqType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TenderReqType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubCategoryID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "SubCategoryID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModeK1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeK1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ValueK1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "ValueK1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractRefK1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ContractRefK1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModeK2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeK2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ValueK2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "ValueK2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractRefK2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ContractRefK2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModeD", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ValueD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "ValueD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractRefD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ContractRefD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModeIM", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeIM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PercentageSpotIM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 10, "PercentageSpotIM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PercentageRemoteIM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 10, "PercentageRemoteIM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModeFee", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [Contract] SET [CommodityID] = @CommodityID, [ContractMonth] = @ContractMo" +
                "nth, [ContractYear] = @ContractYear, [ApprovalStatus] = @ApprovalStatus, [Effect" +
                "iveStartDate] = @EffectiveStartDate, [ContractSize] = @ContractSize, [Settlement" +
                "Type] = @SettlementType, [Description] = @Description, [Unit] = @Unit, [StartDat" +
                "e] = @StartDate, [EndSpot] = @EndSpot, [StartSpot] = @StartSpot, [PEG] = @PEG, [" +
                "VMIRCACalType] = @VMIRCACalType, [SettlementFactor] = @SettlementFactor, [DayRef" +
                "] = @DayRef, [Divisor] = @Divisor, [MarginTender] = @MarginTender, [MarginSpot] " +
                "= @MarginSpot, [MarginRemote] = @MarginRemote, [CalSpreadRemoteMargin] = @CalSpr" +
                "eadRemoteMargin, [IsKIE] = @IsKIE, [CreatedBy] = @CreatedBy, [CreatedDate] = @Cr" +
                "eatedDate, [LastUpdatedBy] = @LastUpdatedBy, [LastUpdatedDate] = @LastUpdatedDat" +
                "e, [EffectiveEndDate] = @EffectiveEndDate, [ApprovalDesc] = @ApprovalDesc, [Home" +
                "CurrencyID] = @HomeCurrencyID, [CrossCurr] = @CrossCurr, [CrossCurrProduct] = @C" +
                "rossCurrProduct, [OriginalContractID] = @OriginalContractID, [ActionFlag] = @Act" +
                "ionFlag, [TenderReqType] = @TenderReqType, [SubCategoryID] = @SubCategoryID, [Mo" +
                "deK1] = @ModeK1, [ValueK1] = @ValueK1, [ContractRefK1] = @ContractRefK1, [ModeK2" +
                "] = @ModeK2, [ValueK2] = @ValueK2, [ContractRefK2] = @ContractRefK2, [ModeD] = @" +
                "ModeD, [ValueD] = @ValueD, [ContractRefD] = @ContractRefD, [ModeIM] = @ModeIM, [" +
                "PercentageSpotIM] = @PercentageSpotIM, [PercentageRemoteIM] = @PercentageRemoteI" +
                "M, [ModeFee] = @ModeFee WHERE (([CommodityID] = @Original_CommodityID) AND ([Con" +
                "tractMonth] = @Original_ContractMonth) AND ([ContractYear] = @Original_ContractY" +
                "ear) AND ([ApprovalStatus] = @Original_ApprovalStatus) AND ([EffectiveStartDate]" +
                " = @Original_EffectiveStartDate) AND ([ContractID] = @Original_ContractID) AND (" +
                "[ContractSize] = @Original_ContractSize) AND ([SettlementType] = @Original_Settl" +
                "ementType) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Descrip" +
                "tion] = @Original_Description)) AND ([Unit] = @Original_Unit) AND ([StartDate] =" +
                " @Original_StartDate) AND ([EndSpot] = @Original_EndSpot) AND ([StartSpot] = @Or" +
                "iginal_StartSpot) AND ((@IsNull_PEG = 1 AND [PEG] IS NULL) OR ([PEG] = @Original" +
                "_PEG)) AND ((@IsNull_VMIRCACalType = 1 AND [VMIRCACalType] IS NULL) OR ([VMIRCAC" +
                "alType] = @Original_VMIRCACalType)) AND ((@IsNull_SettlementFactor = 1 AND [Sett" +
                "lementFactor] IS NULL) OR ([SettlementFactor] = @Original_SettlementFactor)) AND" +
                " ((@IsNull_DayRef = 1 AND [DayRef] IS NULL) OR ([DayRef] = @Original_DayRef)) AN" +
                "D ((@IsNull_Divisor = 1 AND [Divisor] IS NULL) OR ([Divisor] = @Original_Divisor" +
                ")) AND ((@IsNull_MarginTender = 1 AND [MarginTender] IS NULL) OR ([MarginTender]" +
                " = @Original_MarginTender)) AND ([MarginSpot] = @Original_MarginSpot) AND ([Marg" +
                "inRemote] = @Original_MarginRemote) AND ((@IsNull_CalSpreadRemoteMargin = 1 AND " +
                "[CalSpreadRemoteMargin] IS NULL) OR ([CalSpreadRemoteMargin] = @Original_CalSpre" +
                "adRemoteMargin)) AND ([IsKIE] = @Original_IsKIE) AND ([CreatedBy] = @Original_Cr" +
                "eatedBy) AND ([CreatedDate] = @Original_CreatedDate) AND ([LastUpdatedBy] = @Ori" +
                "ginal_LastUpdatedBy) AND ([LastUpdatedDate] = @Original_LastUpdatedDate) AND ((@" +
                "IsNull_EffectiveEndDate = 1 AND [EffectiveEndDate] IS NULL) OR ([EffectiveEndDat" +
                "e] = @Original_EffectiveEndDate)) AND ((@IsNull_ApprovalDesc = 1 AND [ApprovalDe" +
                "sc] IS NULL) OR ([ApprovalDesc] = @Original_ApprovalDesc)) AND ((@IsNull_HomeCur" +
                "rencyID = 1 AND [HomeCurrencyID] IS NULL) OR ([HomeCurrencyID] = @Original_HomeC" +
                "urrencyID)) AND ([CrossCurr] = @Original_CrossCurr) AND ((@IsNull_CrossCurrProdu" +
                "ct = 1 AND [CrossCurrProduct] IS NULL) OR ([CrossCurrProduct] = @Original_CrossC" +
                "urrProduct)) AND ((@IsNull_OriginalContractID = 1 AND [OriginalContractID] IS NU" +
                "LL) OR ([OriginalContractID] = @Original_OriginalContractID)) AND ((@IsNull_Acti" +
                "onFlag = 1 AND [ActionFlag] IS NULL) OR ([ActionFlag] = @Original_ActionFlag)) A" +
                "ND ((@IsNull_TenderReqType = 1 AND [TenderReqType] IS NULL) OR ([TenderReqType] " +
                "= @Original_TenderReqType)) AND ((@IsNull_SubCategoryID = 1 AND [SubCategoryID] " +
                "IS NULL) OR ([SubCategoryID] = @Original_SubCategoryID)) AND ((@IsNull_ModeK1 = " +
                "1 AND [ModeK1] IS NULL) OR ([ModeK1] = @Original_ModeK1)) AND ((@IsNull_ValueK1 " +
                "= 1 AND [ValueK1] IS NULL) OR ([ValueK1] = @Original_ValueK1)) AND ((@IsNull_Con" +
                "tractRefK1 = 1 AND [ContractRefK1] IS NULL) OR ([ContractRefK1] = @Original_Cont" +
                "ractRefK1)) AND ((@IsNull_ModeK2 = 1 AND [ModeK2] IS NULL) OR ([ModeK2] = @Origi" +
                "nal_ModeK2)) AND ((@IsNull_ValueK2 = 1 AND [ValueK2] IS NULL) OR ([ValueK2] = @O" +
                "riginal_ValueK2)) AND ((@IsNull_ContractRefK2 = 1 AND [ContractRefK2] IS NULL) O" +
                "R ([ContractRefK2] = @Original_ContractRefK2)) AND ((@IsNull_ModeD = 1 AND [Mode" +
                "D] IS NULL) OR ([ModeD] = @Original_ModeD)) AND ((@IsNull_ValueD = 1 AND [ValueD" +
                "] IS NULL) OR ([ValueD] = @Original_ValueD)) AND ((@IsNull_ContractRefD = 1 AND " +
                "[ContractRefD] IS NULL) OR ([ContractRefD] = @Original_ContractRefD)) AND ((@IsN" +
                "ull_ModeIM = 1 AND [ModeIM] IS NULL) OR ([ModeIM] = @Original_ModeIM)) AND ((@Is" +
                "Null_PercentageSpotIM = 1 AND [PercentageSpotIM] IS NULL) OR ([PercentageSpotIM]" +
                " = @Original_PercentageSpotIM)) AND ((@IsNull_PercentageRemoteIM = 1 AND [Percen" +
                "tageRemoteIM] IS NULL) OR ([PercentageRemoteIM] = @Original_PercentageRemoteIM))" +
                " AND ((@IsNull_ModeFee = 1 AND [ModeFee] IS NULL) OR ([ModeFee] = @Original_Mode" +
                "Fee)));\r\nSELECT CommodityID, ContractMonth, ContractYear, ApprovalStatus, Effect" +
                "iveStartDate, ContractID, ContractSize, SettlementType, Description, Unit, Start" +
                "Date, EndSpot, StartSpot, PEG, VMIRCACalType, SettlementFactor, DayRef, Divisor," +
                " MarginTender, MarginSpot, MarginRemote, CalSpreadRemoteMargin, IsKIE, CreatedBy" +
                ", CreatedDate, LastUpdatedBy, LastUpdatedDate, EffectiveEndDate, ApprovalDesc, H" +
                "omeCurrencyID, CrossCurr, CrossCurrProduct, OriginalContractID, ActionFlag, Tend" +
                "erReqType, SubCategoryID, ModeK1, ValueK1, ContractRefK1, ModeK2, ValueK2, Contr" +
                "actRefK2, ModeD, ValueD, ContractRefD, ModeIM, PercentageSpotIM, PercentageRemot" +
                "eIM, ModeFee FROM Contract WHERE (ApprovalStatus = @ApprovalStatus) AND (Commodi" +
                "tyID = @CommodityID) AND (ContractMonth = @ContractMonth) AND (ContractYear = @C" +
                "ontractYear) AND (EffectiveStartDate = @EffectiveStartDate)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CommodityID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CommodityID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractMonth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractMonth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovalStatus", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EffectiveStartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveStartDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractSize", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "ContractSize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SettlementType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SettlementType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Unit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndSpot", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndSpot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartSpot", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartSpot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PEG", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "PEG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VMIRCACalType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VMIRCACalType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SettlementFactor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SettlementFactor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DayRef", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DayRef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Divisor", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "Divisor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarginTender", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "MarginTender", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarginSpot", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "MarginSpot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarginRemote", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "MarginRemote", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CalSpreadRemoteMargin", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "CalSpreadRemoteMargin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsKIE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsKIE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EffectiveEndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveEndDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovalDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HomeCurrencyID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "HomeCurrencyID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CrossCurr", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrossCurr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CrossCurrProduct", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrossCurrProduct", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginalContractID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "OriginalContractID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActionFlag", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActionFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TenderReqType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TenderReqType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubCategoryID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "SubCategoryID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModeK1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeK1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ValueK1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "ValueK1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractRefK1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ContractRefK1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModeK2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeK2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ValueK2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "ValueK2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractRefK2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ContractRefK2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModeD", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ValueD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "ValueD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractRefD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ContractRefD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModeIM", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeIM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PercentageSpotIM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 10, "PercentageSpotIM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PercentageRemoteIM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 10, "PercentageRemoteIM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModeFee", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CommodityID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CommodityID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractMonth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractMonth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApprovalStatus", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EffectiveStartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveStartDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ContractID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractSize", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "ContractSize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SettlementType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SettlementType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Unit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EndSpot", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndSpot", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StartSpot", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartSpot", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PEG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PEG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PEG", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "PEG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VMIRCACalType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VMIRCACalType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VMIRCACalType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VMIRCACalType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SettlementFactor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SettlementFactor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SettlementFactor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SettlementFactor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DayRef", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DayRef", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DayRef", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DayRef", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Divisor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Divisor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Divisor", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "Divisor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MarginTender", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MarginTender", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MarginTender", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "MarginTender", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MarginSpot", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "MarginSpot", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MarginRemote", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "MarginRemote", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CalSpreadRemoteMargin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CalSpreadRemoteMargin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CalSpreadRemoteMargin", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "CalSpreadRemoteMargin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsKIE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsKIE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EffectiveEndDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveEndDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EffectiveEndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveEndDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ApprovalDesc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApprovalDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HomeCurrencyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HomeCurrencyID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HomeCurrencyID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "HomeCurrencyID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CrossCurr", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrossCurr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CrossCurrProduct", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrossCurrProduct", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CrossCurrProduct", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrossCurrProduct", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OriginalContractID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginalContractID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OriginalContractID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "OriginalContractID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ActionFlag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActionFlag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ActionFlag", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActionFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TenderReqType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TenderReqType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TenderReqType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TenderReqType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubCategoryID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubCategoryID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubCategoryID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "SubCategoryID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ModeK1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeK1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModeK1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeK1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ValueK1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValueK1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ValueK1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "ValueK1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ContractRefK1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractRefK1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractRefK1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ContractRefK1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ModeK2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeK2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModeK2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeK2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ValueK2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValueK2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ValueK2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "ValueK2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ContractRefK2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractRefK2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractRefK2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ContractRefK2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ModeD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModeD", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ValueD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValueD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ValueD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "ValueD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ContractRefD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractRefD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractRefD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ContractRefD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ModeIM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeIM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModeIM", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeIM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PercentageSpotIM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PercentageSpotIM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PercentageSpotIM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 10, "PercentageSpotIM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PercentageRemoteIM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PercentageRemoteIM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PercentageRemoteIM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 10, "PercentageRemoteIM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ModeFee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeFee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModeFee", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ServicesCekTradefeed.Properties.Settings.Default.SKDConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Contract.*\r\nFROM            Contract";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT ActionFlag, ApprovalDesc, ApprovalStatus, CalSpreadRemoteMargin, CommodityID, ContractID, ContractMonth, ContractRefD, ContractRefK1, ContractRefK2, ContractSize, ContractYear, CreatedBy, CreatedDate, CrossCurr, CrossCurrProduct, DayRef, Description, Divisor, EffectiveEndDate, EffectiveStartDate, EndSpot, HomeCurrencyID, IsKIE, LastUpdatedBy, LastUpdatedDate, MarginRemote, MarginSpot, MarginTender, ModeD, ModeFee, ModeIM, ModeK1, ModeK2, OriginalContractID, PEG, PercentageRemoteIM, PercentageSpotIM, SettlementFactor, SettlementType, StartDate, StartSpot, SubCategoryID, TenderReqType, Unit, VMIRCACalType, ValueD, ValueK1, ValueK2 FROM Contract WHERE (CommodityID = @code) AND (ContractYear = @year) AND (ContractMonth = @month)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@code", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "CommodityID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@year", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ContractYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@month", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ContractMonth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT        TOP 1 SubCategoryID\r\nFROM            SKD.ContractWHERE(CommodityID " +
                "= @id)\r\nORDER BY ContractID DESC";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "CommodityID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.ContractDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.ContractDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.ContractDataTable dataTable = new DataSet1.ContractDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByFilter(DataSet1.ContractDataTable dataTable, decimal code, int year, int month) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(code));
            this.Adapter.SelectCommand.Parameters[1].Value = ((int)(year));
            this.Adapter.SelectCommand.Parameters[2].Value = ((int)(month));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSet1.ContractDataTable GetDataByFilter(decimal code, int year, int month) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(code));
            this.Adapter.SelectCommand.Parameters[1].Value = ((int)(year));
            this.Adapter.SelectCommand.Parameters[2].Value = ((int)(month));
            DataSet1.ContractDataTable dataTable = new DataSet1.ContractDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillById(DataSet1.ContractDataTable dataTable, decimal id) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(id));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSet1.ContractDataTable GetDataById(decimal id) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(id));
            DataSet1.ContractDataTable dataTable = new DataSet1.ContractDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.ContractDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "Contract");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    decimal Original_CommodityID, 
                    int Original_ContractMonth, 
                    int Original_ContractYear, 
                    string Original_ApprovalStatus, 
                    System.DateTime Original_EffectiveStartDate, 
                    decimal Original_ContractID, 
                    decimal Original_ContractSize, 
                    string Original_SettlementType, 
                    string Original_Description, 
                    string Original_Unit, 
                    System.DateTime Original_StartDate, 
                    System.DateTime Original_EndSpot, 
                    System.DateTime Original_StartSpot, 
                    global::System.Nullable<decimal> Original_PEG, 
                    string Original_VMIRCACalType, 
                    string Original_SettlementFactor, 
                    global::System.Nullable<int> Original_DayRef, 
                    global::System.Nullable<decimal> Original_Divisor, 
                    global::System.Nullable<decimal> Original_MarginTender, 
                    decimal Original_MarginSpot, 
                    decimal Original_MarginRemote, 
                    global::System.Nullable<decimal> Original_CalSpreadRemoteMargin, 
                    string Original_IsKIE, 
                    string Original_CreatedBy, 
                    System.DateTime Original_CreatedDate, 
                    string Original_LastUpdatedBy, 
                    System.DateTime Original_LastUpdatedDate, 
                    global::System.Nullable<global::System.DateTime> Original_EffectiveEndDate, 
                    string Original_ApprovalDesc, 
                    global::System.Nullable<decimal> Original_HomeCurrencyID, 
                    string Original_CrossCurr, 
                    string Original_CrossCurrProduct, 
                    global::System.Nullable<decimal> Original_OriginalContractID, 
                    string Original_ActionFlag, 
                    string Original_TenderReqType, 
                    global::System.Nullable<decimal> Original_SubCategoryID, 
                    string Original_ModeK1, 
                    global::System.Nullable<decimal> Original_ValueK1, 
                    global::System.Nullable<decimal> Original_ContractRefK1, 
                    string Original_ModeK2, 
                    global::System.Nullable<decimal> Original_ValueK2, 
                    global::System.Nullable<decimal> Original_ContractRefK2, 
                    string Original_ModeD, 
                    global::System.Nullable<decimal> Original_ValueD, 
                    global::System.Nullable<decimal> Original_ContractRefD, 
                    string Original_ModeIM, 
                    global::System.Nullable<decimal> Original_PercentageSpotIM, 
                    global::System.Nullable<decimal> Original_PercentageRemoteIM, 
                    string Original_ModeFee) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_CommodityID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ContractMonth));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ContractYear));
            if ((Original_ApprovalStatus == null)) {
                throw new global::System.ArgumentNullException("Original_ApprovalStatus");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_ApprovalStatus));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_EffectiveStartDate));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_ContractID));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_ContractSize));
            if ((Original_SettlementType == null)) {
                throw new global::System.ArgumentNullException("Original_SettlementType");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_SettlementType));
            }
            if ((Original_Description == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Description));
            }
            if ((Original_Unit == null)) {
                throw new global::System.ArgumentNullException("Original_Unit");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Unit));
            }
            this.Adapter.DeleteCommand.Parameters[11].Value = ((System.DateTime)(Original_StartDate));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_EndSpot));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((System.DateTime)(Original_StartSpot));
            if ((Original_PEG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((decimal)(Original_PEG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_VMIRCACalType == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_VMIRCACalType));
            }
            if ((Original_SettlementFactor == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_SettlementFactor));
            }
            if ((Original_DayRef.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((int)(Original_DayRef.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_Divisor.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((decimal)(Original_Divisor.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_MarginTender.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((decimal)(Original_MarginTender.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[26].Value = ((decimal)(Original_MarginSpot));
            this.Adapter.DeleteCommand.Parameters[27].Value = ((decimal)(Original_MarginRemote));
            if ((Original_CalSpreadRemoteMargin.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((decimal)(Original_CalSpreadRemoteMargin.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_IsKIE == null)) {
                throw new global::System.ArgumentNullException("Original_IsKIE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_IsKIE));
            }
            if ((Original_CreatedBy == null)) {
                throw new global::System.ArgumentNullException("Original_CreatedBy");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_CreatedBy));
            }
            this.Adapter.DeleteCommand.Parameters[32].Value = ((System.DateTime)(Original_CreatedDate));
            if ((Original_LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("Original_LastUpdatedBy");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((string)(Original_LastUpdatedBy));
            }
            this.Adapter.DeleteCommand.Parameters[34].Value = ((System.DateTime)(Original_LastUpdatedDate));
            if ((Original_EffectiveEndDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((System.DateTime)(Original_EffectiveEndDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_ApprovalDesc == null)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_ApprovalDesc));
            }
            if ((Original_HomeCurrencyID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((decimal)(Original_HomeCurrencyID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_CrossCurr == null)) {
                throw new global::System.ArgumentNullException("Original_CrossCurr");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((string)(Original_CrossCurr));
            }
            if ((Original_CrossCurrProduct == null)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((string)(Original_CrossCurrProduct));
            }
            if ((Original_OriginalContractID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[45].Value = ((decimal)(Original_OriginalContractID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_ActionFlag == null)) {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[47].Value = ((string)(Original_ActionFlag));
            }
            if ((Original_TenderReqType == null)) {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[49].Value = ((string)(Original_TenderReqType));
            }
            if ((Original_SubCategoryID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[51].Value = ((decimal)(Original_SubCategoryID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_ModeK1 == null)) {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[53].Value = ((string)(Original_ModeK1));
            }
            if ((Original_ValueK1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[55].Value = ((decimal)(Original_ValueK1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Original_ContractRefK1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[57].Value = ((decimal)(Original_ContractRefK1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_ModeK2 == null)) {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[59].Value = ((string)(Original_ModeK2));
            }
            if ((Original_ValueK2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[61].Value = ((decimal)(Original_ValueK2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Original_ContractRefK2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[63].Value = ((decimal)(Original_ContractRefK2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((Original_ModeD == null)) {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[65].Value = ((string)(Original_ModeD));
            }
            if ((Original_ValueD.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[67].Value = ((decimal)(Original_ValueD.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((Original_ContractRefD.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[69].Value = ((decimal)(Original_ContractRefD.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((Original_ModeIM == null)) {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[71].Value = ((string)(Original_ModeIM));
            }
            if ((Original_PercentageSpotIM.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[73].Value = ((decimal)(Original_PercentageSpotIM.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((Original_PercentageRemoteIM.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[75].Value = ((decimal)(Original_PercentageRemoteIM.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((Original_ModeFee == null)) {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[77].Value = ((string)(Original_ModeFee));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    decimal CommodityID, 
                    int ContractMonth, 
                    int ContractYear, 
                    string ApprovalStatus, 
                    System.DateTime EffectiveStartDate, 
                    decimal ContractSize, 
                    string SettlementType, 
                    string Description, 
                    string Unit, 
                    System.DateTime StartDate, 
                    System.DateTime EndSpot, 
                    System.DateTime StartSpot, 
                    global::System.Nullable<decimal> PEG, 
                    string VMIRCACalType, 
                    string SettlementFactor, 
                    global::System.Nullable<int> DayRef, 
                    global::System.Nullable<decimal> Divisor, 
                    global::System.Nullable<decimal> MarginTender, 
                    decimal MarginSpot, 
                    decimal MarginRemote, 
                    global::System.Nullable<decimal> CalSpreadRemoteMargin, 
                    string IsKIE, 
                    string CreatedBy, 
                    System.DateTime CreatedDate, 
                    string LastUpdatedBy, 
                    System.DateTime LastUpdatedDate, 
                    global::System.Nullable<global::System.DateTime> EffectiveEndDate, 
                    string ApprovalDesc, 
                    global::System.Nullable<decimal> HomeCurrencyID, 
                    string CrossCurr, 
                    string CrossCurrProduct, 
                    global::System.Nullable<decimal> OriginalContractID, 
                    string ActionFlag, 
                    string TenderReqType, 
                    global::System.Nullable<decimal> SubCategoryID, 
                    string ModeK1, 
                    global::System.Nullable<decimal> ValueK1, 
                    global::System.Nullable<decimal> ContractRefK1, 
                    string ModeK2, 
                    global::System.Nullable<decimal> ValueK2, 
                    global::System.Nullable<decimal> ContractRefK2, 
                    string ModeD, 
                    global::System.Nullable<decimal> ValueD, 
                    global::System.Nullable<decimal> ContractRefD, 
                    string ModeIM, 
                    global::System.Nullable<decimal> PercentageSpotIM, 
                    global::System.Nullable<decimal> PercentageRemoteIM, 
                    string ModeFee) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(CommodityID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ContractMonth));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(ContractYear));
            if ((ApprovalStatus == null)) {
                throw new global::System.ArgumentNullException("ApprovalStatus");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ApprovalStatus));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(EffectiveStartDate));
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(ContractSize));
            if ((SettlementType == null)) {
                throw new global::System.ArgumentNullException("SettlementType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(SettlementType));
            }
            if ((Description == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Description));
            }
            if ((Unit == null)) {
                throw new global::System.ArgumentNullException("Unit");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Unit));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(StartDate));
            this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(EndSpot));
            this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(StartSpot));
            if ((PEG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(PEG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((VMIRCACalType == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(VMIRCACalType));
            }
            if ((SettlementFactor == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(SettlementFactor));
            }
            if ((DayRef.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((int)(DayRef.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Divisor.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(Divisor.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((MarginTender.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(MarginTender.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(MarginSpot));
            this.Adapter.InsertCommand.Parameters[19].Value = ((decimal)(MarginRemote));
            if ((CalSpreadRemoteMargin.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((decimal)(CalSpreadRemoteMargin.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((IsKIE == null)) {
                throw new global::System.ArgumentNullException("IsKIE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(IsKIE));
            }
            if ((CreatedBy == null)) {
                throw new global::System.ArgumentNullException("CreatedBy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(CreatedBy));
            }
            this.Adapter.InsertCommand.Parameters[23].Value = ((System.DateTime)(CreatedDate));
            if ((LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("LastUpdatedBy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(LastUpdatedBy));
            }
            this.Adapter.InsertCommand.Parameters[25].Value = ((System.DateTime)(LastUpdatedDate));
            if ((EffectiveEndDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((System.DateTime)(EffectiveEndDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((ApprovalDesc == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(ApprovalDesc));
            }
            if ((HomeCurrencyID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(HomeCurrencyID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((CrossCurr == null)) {
                throw new global::System.ArgumentNullException("CrossCurr");
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(CrossCurr));
            }
            if ((CrossCurrProduct == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(CrossCurrProduct));
            }
            if ((OriginalContractID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((decimal)(OriginalContractID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((ActionFlag == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(ActionFlag));
            }
            if ((TenderReqType == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(TenderReqType));
            }
            if ((SubCategoryID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((decimal)(SubCategoryID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((ModeK1 == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(ModeK1));
            }
            if ((ValueK1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((decimal)(ValueK1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((ContractRefK1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((decimal)(ContractRefK1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((ModeK2 == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(ModeK2));
            }
            if ((ValueK2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((decimal)(ValueK2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((ContractRefK2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((decimal)(ContractRefK2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((ModeD == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(ModeD));
            }
            if ((ValueD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((decimal)(ValueD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((ContractRefD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((decimal)(ContractRefD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((ModeIM == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(ModeIM));
            }
            if ((PercentageSpotIM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((decimal)(PercentageSpotIM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((PercentageRemoteIM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((decimal)(PercentageRemoteIM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((ModeFee == null)) {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(ModeFee));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal CommodityID, 
                    int ContractMonth, 
                    int ContractYear, 
                    string ApprovalStatus, 
                    System.DateTime EffectiveStartDate, 
                    decimal ContractSize, 
                    string SettlementType, 
                    string Description, 
                    string Unit, 
                    System.DateTime StartDate, 
                    System.DateTime EndSpot, 
                    System.DateTime StartSpot, 
                    global::System.Nullable<decimal> PEG, 
                    string VMIRCACalType, 
                    string SettlementFactor, 
                    global::System.Nullable<int> DayRef, 
                    global::System.Nullable<decimal> Divisor, 
                    global::System.Nullable<decimal> MarginTender, 
                    decimal MarginSpot, 
                    decimal MarginRemote, 
                    global::System.Nullable<decimal> CalSpreadRemoteMargin, 
                    string IsKIE, 
                    string CreatedBy, 
                    System.DateTime CreatedDate, 
                    string LastUpdatedBy, 
                    System.DateTime LastUpdatedDate, 
                    global::System.Nullable<global::System.DateTime> EffectiveEndDate, 
                    string ApprovalDesc, 
                    global::System.Nullable<decimal> HomeCurrencyID, 
                    string CrossCurr, 
                    string CrossCurrProduct, 
                    global::System.Nullable<decimal> OriginalContractID, 
                    string ActionFlag, 
                    string TenderReqType, 
                    global::System.Nullable<decimal> SubCategoryID, 
                    string ModeK1, 
                    global::System.Nullable<decimal> ValueK1, 
                    global::System.Nullable<decimal> ContractRefK1, 
                    string ModeK2, 
                    global::System.Nullable<decimal> ValueK2, 
                    global::System.Nullable<decimal> ContractRefK2, 
                    string ModeD, 
                    global::System.Nullable<decimal> ValueD, 
                    global::System.Nullable<decimal> ContractRefD, 
                    string ModeIM, 
                    global::System.Nullable<decimal> PercentageSpotIM, 
                    global::System.Nullable<decimal> PercentageRemoteIM, 
                    string ModeFee, 
                    decimal Original_CommodityID, 
                    int Original_ContractMonth, 
                    int Original_ContractYear, 
                    string Original_ApprovalStatus, 
                    System.DateTime Original_EffectiveStartDate, 
                    decimal Original_ContractID, 
                    decimal Original_ContractSize, 
                    string Original_SettlementType, 
                    string Original_Description, 
                    string Original_Unit, 
                    System.DateTime Original_StartDate, 
                    System.DateTime Original_EndSpot, 
                    System.DateTime Original_StartSpot, 
                    global::System.Nullable<decimal> Original_PEG, 
                    string Original_VMIRCACalType, 
                    string Original_SettlementFactor, 
                    global::System.Nullable<int> Original_DayRef, 
                    global::System.Nullable<decimal> Original_Divisor, 
                    global::System.Nullable<decimal> Original_MarginTender, 
                    decimal Original_MarginSpot, 
                    decimal Original_MarginRemote, 
                    global::System.Nullable<decimal> Original_CalSpreadRemoteMargin, 
                    string Original_IsKIE, 
                    string Original_CreatedBy, 
                    System.DateTime Original_CreatedDate, 
                    string Original_LastUpdatedBy, 
                    System.DateTime Original_LastUpdatedDate, 
                    global::System.Nullable<global::System.DateTime> Original_EffectiveEndDate, 
                    string Original_ApprovalDesc, 
                    global::System.Nullable<decimal> Original_HomeCurrencyID, 
                    string Original_CrossCurr, 
                    string Original_CrossCurrProduct, 
                    global::System.Nullable<decimal> Original_OriginalContractID, 
                    string Original_ActionFlag, 
                    string Original_TenderReqType, 
                    global::System.Nullable<decimal> Original_SubCategoryID, 
                    string Original_ModeK1, 
                    global::System.Nullable<decimal> Original_ValueK1, 
                    global::System.Nullable<decimal> Original_ContractRefK1, 
                    string Original_ModeK2, 
                    global::System.Nullable<decimal> Original_ValueK2, 
                    global::System.Nullable<decimal> Original_ContractRefK2, 
                    string Original_ModeD, 
                    global::System.Nullable<decimal> Original_ValueD, 
                    global::System.Nullable<decimal> Original_ContractRefD, 
                    string Original_ModeIM, 
                    global::System.Nullable<decimal> Original_PercentageSpotIM, 
                    global::System.Nullable<decimal> Original_PercentageRemoteIM, 
                    string Original_ModeFee) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(CommodityID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ContractMonth));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(ContractYear));
            if ((ApprovalStatus == null)) {
                throw new global::System.ArgumentNullException("ApprovalStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ApprovalStatus));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(EffectiveStartDate));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(ContractSize));
            if ((SettlementType == null)) {
                throw new global::System.ArgumentNullException("SettlementType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(SettlementType));
            }
            if ((Description == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Description));
            }
            if ((Unit == null)) {
                throw new global::System.ArgumentNullException("Unit");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Unit));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(StartDate));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(EndSpot));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(StartSpot));
            if ((PEG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(PEG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((VMIRCACalType == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(VMIRCACalType));
            }
            if ((SettlementFactor == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(SettlementFactor));
            }
            if ((DayRef.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(DayRef.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Divisor.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(Divisor.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((MarginTender.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(MarginTender.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(MarginSpot));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(MarginRemote));
            if ((CalSpreadRemoteMargin.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(CalSpreadRemoteMargin.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((IsKIE == null)) {
                throw new global::System.ArgumentNullException("IsKIE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(IsKIE));
            }
            if ((CreatedBy == null)) {
                throw new global::System.ArgumentNullException("CreatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(CreatedBy));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(CreatedDate));
            if ((LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("LastUpdatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(LastUpdatedBy));
            }
            this.Adapter.UpdateCommand.Parameters[25].Value = ((System.DateTime)(LastUpdatedDate));
            if ((EffectiveEndDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(EffectiveEndDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((ApprovalDesc == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(ApprovalDesc));
            }
            if ((HomeCurrencyID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(HomeCurrencyID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((CrossCurr == null)) {
                throw new global::System.ArgumentNullException("CrossCurr");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(CrossCurr));
            }
            if ((CrossCurrProduct == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(CrossCurrProduct));
            }
            if ((OriginalContractID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(OriginalContractID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((ActionFlag == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(ActionFlag));
            }
            if ((TenderReqType == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(TenderReqType));
            }
            if ((SubCategoryID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((decimal)(SubCategoryID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((ModeK1 == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(ModeK1));
            }
            if ((ValueK1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((decimal)(ValueK1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((ContractRefK1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((decimal)(ContractRefK1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((ModeK2 == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(ModeK2));
            }
            if ((ValueK2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((decimal)(ValueK2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((ContractRefK2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((decimal)(ContractRefK2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((ModeD == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(ModeD));
            }
            if ((ValueD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((decimal)(ValueD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((ContractRefD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((decimal)(ContractRefD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((ModeIM == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(ModeIM));
            }
            if ((PercentageSpotIM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((decimal)(PercentageSpotIM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((PercentageRemoteIM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((decimal)(PercentageRemoteIM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((ModeFee == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(ModeFee));
            }
            this.Adapter.UpdateCommand.Parameters[48].Value = ((decimal)(Original_CommodityID));
            this.Adapter.UpdateCommand.Parameters[49].Value = ((int)(Original_ContractMonth));
            this.Adapter.UpdateCommand.Parameters[50].Value = ((int)(Original_ContractYear));
            if ((Original_ApprovalStatus == null)) {
                throw new global::System.ArgumentNullException("Original_ApprovalStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_ApprovalStatus));
            }
            this.Adapter.UpdateCommand.Parameters[52].Value = ((System.DateTime)(Original_EffectiveStartDate));
            this.Adapter.UpdateCommand.Parameters[53].Value = ((decimal)(Original_ContractID));
            this.Adapter.UpdateCommand.Parameters[54].Value = ((decimal)(Original_ContractSize));
            if ((Original_SettlementType == null)) {
                throw new global::System.ArgumentNullException("Original_SettlementType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_SettlementType));
            }
            if ((Original_Description == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(Original_Description));
            }
            if ((Original_Unit == null)) {
                throw new global::System.ArgumentNullException("Original_Unit");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(Original_Unit));
            }
            this.Adapter.UpdateCommand.Parameters[59].Value = ((System.DateTime)(Original_StartDate));
            this.Adapter.UpdateCommand.Parameters[60].Value = ((System.DateTime)(Original_EndSpot));
            this.Adapter.UpdateCommand.Parameters[61].Value = ((System.DateTime)(Original_StartSpot));
            if ((Original_PEG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((decimal)(Original_PEG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((Original_VMIRCACalType == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Original_VMIRCACalType));
            }
            if ((Original_SettlementFactor == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_SettlementFactor));
            }
            if ((Original_DayRef.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((int)(Original_DayRef.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((Original_Divisor.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[71].Value = ((decimal)(Original_Divisor.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((Original_MarginTender.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[73].Value = ((decimal)(Original_MarginTender.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[74].Value = ((decimal)(Original_MarginSpot));
            this.Adapter.UpdateCommand.Parameters[75].Value = ((decimal)(Original_MarginRemote));
            if ((Original_CalSpreadRemoteMargin.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((decimal)(Original_CalSpreadRemoteMargin.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Original_IsKIE == null)) {
                throw new global::System.ArgumentNullException("Original_IsKIE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((string)(Original_IsKIE));
            }
            if ((Original_CreatedBy == null)) {
                throw new global::System.ArgumentNullException("Original_CreatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((string)(Original_CreatedBy));
            }
            this.Adapter.UpdateCommand.Parameters[80].Value = ((System.DateTime)(Original_CreatedDate));
            if ((Original_LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("Original_LastUpdatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(Original_LastUpdatedBy));
            }
            this.Adapter.UpdateCommand.Parameters[82].Value = ((System.DateTime)(Original_LastUpdatedDate));
            if ((Original_EffectiveEndDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[84].Value = ((System.DateTime)(Original_EffectiveEndDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((Original_ApprovalDesc == null)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[86].Value = ((string)(Original_ApprovalDesc));
            }
            if ((Original_HomeCurrencyID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[88].Value = ((decimal)(Original_HomeCurrencyID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((Original_CrossCurr == null)) {
                throw new global::System.ArgumentNullException("Original_CrossCurr");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((string)(Original_CrossCurr));
            }
            if ((Original_CrossCurrProduct == null)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((string)(Original_CrossCurrProduct));
            }
            if ((Original_OriginalContractID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((decimal)(Original_OriginalContractID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            if ((Original_ActionFlag == null)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((string)(Original_ActionFlag));
            }
            if ((Original_TenderReqType == null)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((string)(Original_TenderReqType));
            }
            if ((Original_SubCategoryID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[99].Value = ((decimal)(Original_SubCategoryID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            if ((Original_ModeK1 == null)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[101].Value = ((string)(Original_ModeK1));
            }
            if ((Original_ValueK1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[103].Value = ((decimal)(Original_ValueK1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((Original_ContractRefK1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[105].Value = ((decimal)(Original_ContractRefK1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            if ((Original_ModeK2 == null)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[107].Value = ((string)(Original_ModeK2));
            }
            if ((Original_ValueK2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[109].Value = ((decimal)(Original_ValueK2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            if ((Original_ContractRefK2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[111].Value = ((decimal)(Original_ContractRefK2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            if ((Original_ModeD == null)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[113].Value = ((string)(Original_ModeD));
            }
            if ((Original_ValueD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[115].Value = ((decimal)(Original_ValueD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            if ((Original_ContractRefD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[117].Value = ((decimal)(Original_ContractRefD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            if ((Original_ModeIM == null)) {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[119].Value = ((string)(Original_ModeIM));
            }
            if ((Original_PercentageSpotIM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[121].Value = ((decimal)(Original_PercentageSpotIM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            if ((Original_PercentageRemoteIM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[123].Value = ((decimal)(Original_PercentageRemoteIM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            if ((Original_ModeFee == null)) {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[125].Value = ((string)(Original_ModeFee));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal ContractSize, 
                    string SettlementType, 
                    string Description, 
                    string Unit, 
                    System.DateTime StartDate, 
                    System.DateTime EndSpot, 
                    System.DateTime StartSpot, 
                    global::System.Nullable<decimal> PEG, 
                    string VMIRCACalType, 
                    string SettlementFactor, 
                    global::System.Nullable<int> DayRef, 
                    global::System.Nullable<decimal> Divisor, 
                    global::System.Nullable<decimal> MarginTender, 
                    decimal MarginSpot, 
                    decimal MarginRemote, 
                    global::System.Nullable<decimal> CalSpreadRemoteMargin, 
                    string IsKIE, 
                    string CreatedBy, 
                    System.DateTime CreatedDate, 
                    string LastUpdatedBy, 
                    System.DateTime LastUpdatedDate, 
                    global::System.Nullable<global::System.DateTime> EffectiveEndDate, 
                    string ApprovalDesc, 
                    global::System.Nullable<decimal> HomeCurrencyID, 
                    string CrossCurr, 
                    string CrossCurrProduct, 
                    global::System.Nullable<decimal> OriginalContractID, 
                    string ActionFlag, 
                    string TenderReqType, 
                    global::System.Nullable<decimal> SubCategoryID, 
                    string ModeK1, 
                    global::System.Nullable<decimal> ValueK1, 
                    global::System.Nullable<decimal> ContractRefK1, 
                    string ModeK2, 
                    global::System.Nullable<decimal> ValueK2, 
                    global::System.Nullable<decimal> ContractRefK2, 
                    string ModeD, 
                    global::System.Nullable<decimal> ValueD, 
                    global::System.Nullable<decimal> ContractRefD, 
                    string ModeIM, 
                    global::System.Nullable<decimal> PercentageSpotIM, 
                    global::System.Nullable<decimal> PercentageRemoteIM, 
                    string ModeFee, 
                    decimal Original_CommodityID, 
                    int Original_ContractMonth, 
                    int Original_ContractYear, 
                    string Original_ApprovalStatus, 
                    System.DateTime Original_EffectiveStartDate, 
                    decimal Original_ContractID, 
                    decimal Original_ContractSize, 
                    string Original_SettlementType, 
                    string Original_Description, 
                    string Original_Unit, 
                    System.DateTime Original_StartDate, 
                    System.DateTime Original_EndSpot, 
                    System.DateTime Original_StartSpot, 
                    global::System.Nullable<decimal> Original_PEG, 
                    string Original_VMIRCACalType, 
                    string Original_SettlementFactor, 
                    global::System.Nullable<int> Original_DayRef, 
                    global::System.Nullable<decimal> Original_Divisor, 
                    global::System.Nullable<decimal> Original_MarginTender, 
                    decimal Original_MarginSpot, 
                    decimal Original_MarginRemote, 
                    global::System.Nullable<decimal> Original_CalSpreadRemoteMargin, 
                    string Original_IsKIE, 
                    string Original_CreatedBy, 
                    System.DateTime Original_CreatedDate, 
                    string Original_LastUpdatedBy, 
                    System.DateTime Original_LastUpdatedDate, 
                    global::System.Nullable<global::System.DateTime> Original_EffectiveEndDate, 
                    string Original_ApprovalDesc, 
                    global::System.Nullable<decimal> Original_HomeCurrencyID, 
                    string Original_CrossCurr, 
                    string Original_CrossCurrProduct, 
                    global::System.Nullable<decimal> Original_OriginalContractID, 
                    string Original_ActionFlag, 
                    string Original_TenderReqType, 
                    global::System.Nullable<decimal> Original_SubCategoryID, 
                    string Original_ModeK1, 
                    global::System.Nullable<decimal> Original_ValueK1, 
                    global::System.Nullable<decimal> Original_ContractRefK1, 
                    string Original_ModeK2, 
                    global::System.Nullable<decimal> Original_ValueK2, 
                    global::System.Nullable<decimal> Original_ContractRefK2, 
                    string Original_ModeD, 
                    global::System.Nullable<decimal> Original_ValueD, 
                    global::System.Nullable<decimal> Original_ContractRefD, 
                    string Original_ModeIM, 
                    global::System.Nullable<decimal> Original_PercentageSpotIM, 
                    global::System.Nullable<decimal> Original_PercentageRemoteIM, 
                    string Original_ModeFee) {
            return this.Update(Original_CommodityID, Original_ContractMonth, Original_ContractYear, Original_ApprovalStatus, Original_EffectiveStartDate, ContractSize, SettlementType, Description, Unit, StartDate, EndSpot, StartSpot, PEG, VMIRCACalType, SettlementFactor, DayRef, Divisor, MarginTender, MarginSpot, MarginRemote, CalSpreadRemoteMargin, IsKIE, CreatedBy, CreatedDate, LastUpdatedBy, LastUpdatedDate, EffectiveEndDate, ApprovalDesc, HomeCurrencyID, CrossCurr, CrossCurrProduct, OriginalContractID, ActionFlag, TenderReqType, SubCategoryID, ModeK1, ValueK1, ContractRefK1, ModeK2, ValueK2, ContractRefK2, ModeD, ValueD, ContractRefD, ModeIM, PercentageSpotIM, PercentageRemoteIM, ModeFee, Original_CommodityID, Original_ContractMonth, Original_ContractYear, Original_ApprovalStatus, Original_EffectiveStartDate, Original_ContractID, Original_ContractSize, Original_SettlementType, Original_Description, Original_Unit, Original_StartDate, Original_EndSpot, Original_StartSpot, Original_PEG, Original_VMIRCACalType, Original_SettlementFactor, Original_DayRef, Original_Divisor, Original_MarginTender, Original_MarginSpot, Original_MarginRemote, Original_CalSpreadRemoteMargin, Original_IsKIE, Original_CreatedBy, Original_CreatedDate, Original_LastUpdatedBy, Original_LastUpdatedDate, Original_EffectiveEndDate, Original_ApprovalDesc, Original_HomeCurrencyID, Original_CrossCurr, Original_CrossCurrProduct, Original_OriginalContractID, Original_ActionFlag, Original_TenderReqType, Original_SubCategoryID, Original_ModeK1, Original_ValueK1, Original_ContractRefK1, Original_ModeK2, Original_ValueK2, Original_ContractRefK2, Original_ModeD, Original_ValueD, Original_ContractRefD, Original_ModeIM, Original_PercentageSpotIM, Original_PercentageRemoteIM, Original_ModeFee);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SubCategoryTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public SubCategoryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SubCategory";
            tableMapping.ColumnMappings.Add("SubCategoryCode", "SubCategoryCode");
            tableMapping.ColumnMappings.Add("SubCategoryID", "SubCategoryID");
            tableMapping.ColumnMappings.Add("CategoryID", "CategoryID");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
            tableMapping.ColumnMappings.Add("CreatedDate", "CreatedDate");
            tableMapping.ColumnMappings.Add("LastUpdatedBy", "LastUpdatedBy");
            tableMapping.ColumnMappings.Add("LastUpdatedDate", "LastUpdatedDate");
            tableMapping.ColumnMappings.Add("ActiveFlag", "ActiveFlag");
            tableMapping.ColumnMappings.Add("AllowPriceIncrePct", "AllowPriceIncrePct");
            tableMapping.ColumnMappings.Add("AllowPriceDecrePct", "AllowPriceDecrePct");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [SubCategory] WHERE (([SubCategoryCode] = @Original_SubCategoryCode) AND ([SubCategoryID] = @Original_SubCategoryID) AND ([CategoryID] = @Original_CategoryID) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Description] = @Original_Description)) AND ([CreatedBy] = @Original_CreatedBy) AND ([CreatedDate] = @Original_CreatedDate) AND ([LastUpdatedBy] = @Original_LastUpdatedBy) AND ([LastUpdatedDate] = @Original_LastUpdatedDate) AND ([ActiveFlag] = @Original_ActiveFlag) AND ([AllowPriceIncrePct] = @Original_AllowPriceIncrePct) AND ([AllowPriceDecrePct] = @Original_AllowPriceDecrePct))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubCategoryCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubCategoryCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubCategoryID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "SubCategoryID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CategoryID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CategoryID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ActiveFlag", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActiveFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AllowPriceIncrePct", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 5, "AllowPriceIncrePct", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AllowPriceDecrePct", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 5, "AllowPriceDecrePct", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [SubCategory] ([SubCategoryCode], [CategoryID], [Description], [CreatedBy], [CreatedDate], [LastUpdatedBy], [LastUpdatedDate], [ActiveFlag], [AllowPriceIncrePct], [AllowPriceDecrePct]) VALUES (@SubCategoryCode, @CategoryID, @Description, @CreatedBy, @CreatedDate, @LastUpdatedBy, @LastUpdatedDate, @ActiveFlag, @AllowPriceIncrePct, @AllowPriceDecrePct);
SELECT SubCategoryCode, SubCategoryID, CategoryID, Description, CreatedBy, CreatedDate, LastUpdatedBy, LastUpdatedDate, ActiveFlag, AllowPriceIncrePct, AllowPriceDecrePct FROM SubCategory WHERE (SubCategoryCode = @SubCategoryCode)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubCategoryCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubCategoryCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CategoryID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CategoryID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActiveFlag", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActiveFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AllowPriceIncrePct", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 5, "AllowPriceIncrePct", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AllowPriceDecrePct", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 5, "AllowPriceDecrePct", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [SubCategory] SET [SubCategoryCode] = @SubCategoryCode, [CategoryID] = @CategoryID, [Description] = @Description, [CreatedBy] = @CreatedBy, [CreatedDate] = @CreatedDate, [LastUpdatedBy] = @LastUpdatedBy, [LastUpdatedDate] = @LastUpdatedDate, [ActiveFlag] = @ActiveFlag, [AllowPriceIncrePct] = @AllowPriceIncrePct, [AllowPriceDecrePct] = @AllowPriceDecrePct WHERE (([SubCategoryCode] = @Original_SubCategoryCode) AND ([SubCategoryID] = @Original_SubCategoryID) AND ([CategoryID] = @Original_CategoryID) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Description] = @Original_Description)) AND ([CreatedBy] = @Original_CreatedBy) AND ([CreatedDate] = @Original_CreatedDate) AND ([LastUpdatedBy] = @Original_LastUpdatedBy) AND ([LastUpdatedDate] = @Original_LastUpdatedDate) AND ([ActiveFlag] = @Original_ActiveFlag) AND ([AllowPriceIncrePct] = @Original_AllowPriceIncrePct) AND ([AllowPriceDecrePct] = @Original_AllowPriceDecrePct));
SELECT SubCategoryCode, SubCategoryID, CategoryID, Description, CreatedBy, CreatedDate, LastUpdatedBy, LastUpdatedDate, ActiveFlag, AllowPriceIncrePct, AllowPriceDecrePct FROM SubCategory WHERE (SubCategoryCode = @SubCategoryCode)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubCategoryCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubCategoryCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CategoryID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CategoryID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActiveFlag", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActiveFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AllowPriceIncrePct", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 5, "AllowPriceIncrePct", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AllowPriceDecrePct", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 5, "AllowPriceDecrePct", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubCategoryCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubCategoryCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubCategoryID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "SubCategoryID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CategoryID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CategoryID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ActiveFlag", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActiveFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AllowPriceIncrePct", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 5, "AllowPriceIncrePct", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AllowPriceDecrePct", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 5, "AllowPriceDecrePct", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ServicesCekTradefeed.Properties.Settings.Default.SKDConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        SubCategory.*\r\nFROM            SubCategory";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT ActiveFlag, AllowPriceDecrePct, AllowPriceIncrePct, CategoryID, CreatedBy," +
                " CreatedDate, Description, LastUpdatedBy, LastUpdatedDate, SubCategoryCode, SubC" +
                "ategoryID FROM SubCategory WHERE (SubCategoryCode = @code)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@code", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "SubCategoryCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.SubCategoryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.SubCategoryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.SubCategoryDataTable dataTable = new DataSet1.SubCategoryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByCode(DataSet1.SubCategoryDataTable dataTable, string code) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((code == null)) {
                throw new global::System.ArgumentNullException("code");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(code));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSet1.SubCategoryDataTable GetDataByCode(string code) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((code == null)) {
                throw new global::System.ArgumentNullException("code");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(code));
            }
            DataSet1.SubCategoryDataTable dataTable = new DataSet1.SubCategoryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.SubCategoryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "SubCategory");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_SubCategoryCode, decimal Original_SubCategoryID, decimal Original_CategoryID, string Original_Description, string Original_CreatedBy, System.DateTime Original_CreatedDate, string Original_LastUpdatedBy, System.DateTime Original_LastUpdatedDate, string Original_ActiveFlag, decimal Original_AllowPriceIncrePct, decimal Original_AllowPriceDecrePct) {
            if ((Original_SubCategoryCode == null)) {
                throw new global::System.ArgumentNullException("Original_SubCategoryCode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_SubCategoryCode));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_SubCategoryID));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_CategoryID));
            if ((Original_Description == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Description));
            }
            if ((Original_CreatedBy == null)) {
                throw new global::System.ArgumentNullException("Original_CreatedBy");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_CreatedBy));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_CreatedDate));
            if ((Original_LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("Original_LastUpdatedBy");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_LastUpdatedBy));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_LastUpdatedDate));
            if ((Original_ActiveFlag == null)) {
                throw new global::System.ArgumentNullException("Original_ActiveFlag");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_ActiveFlag));
            }
            this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_AllowPriceIncrePct));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((decimal)(Original_AllowPriceDecrePct));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string SubCategoryCode, decimal CategoryID, string Description, string CreatedBy, System.DateTime CreatedDate, string LastUpdatedBy, System.DateTime LastUpdatedDate, string ActiveFlag, decimal AllowPriceIncrePct, decimal AllowPriceDecrePct) {
            if ((SubCategoryCode == null)) {
                throw new global::System.ArgumentNullException("SubCategoryCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SubCategoryCode));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(CategoryID));
            if ((Description == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Description));
            }
            if ((CreatedBy == null)) {
                throw new global::System.ArgumentNullException("CreatedBy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(CreatedBy));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(CreatedDate));
            if ((LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("LastUpdatedBy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(LastUpdatedBy));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(LastUpdatedDate));
            if ((ActiveFlag == null)) {
                throw new global::System.ArgumentNullException("ActiveFlag");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ActiveFlag));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(AllowPriceIncrePct));
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(AllowPriceDecrePct));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string SubCategoryCode, 
                    decimal CategoryID, 
                    string Description, 
                    string CreatedBy, 
                    System.DateTime CreatedDate, 
                    string LastUpdatedBy, 
                    System.DateTime LastUpdatedDate, 
                    string ActiveFlag, 
                    decimal AllowPriceIncrePct, 
                    decimal AllowPriceDecrePct, 
                    string Original_SubCategoryCode, 
                    decimal Original_SubCategoryID, 
                    decimal Original_CategoryID, 
                    string Original_Description, 
                    string Original_CreatedBy, 
                    System.DateTime Original_CreatedDate, 
                    string Original_LastUpdatedBy, 
                    System.DateTime Original_LastUpdatedDate, 
                    string Original_ActiveFlag, 
                    decimal Original_AllowPriceIncrePct, 
                    decimal Original_AllowPriceDecrePct) {
            if ((SubCategoryCode == null)) {
                throw new global::System.ArgumentNullException("SubCategoryCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SubCategoryCode));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(CategoryID));
            if ((Description == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Description));
            }
            if ((CreatedBy == null)) {
                throw new global::System.ArgumentNullException("CreatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(CreatedBy));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(CreatedDate));
            if ((LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("LastUpdatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(LastUpdatedBy));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(LastUpdatedDate));
            if ((ActiveFlag == null)) {
                throw new global::System.ArgumentNullException("ActiveFlag");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(ActiveFlag));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(AllowPriceIncrePct));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(AllowPriceDecrePct));
            if ((Original_SubCategoryCode == null)) {
                throw new global::System.ArgumentNullException("Original_SubCategoryCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_SubCategoryCode));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(Original_SubCategoryID));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_CategoryID));
            if ((Original_Description == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Description));
            }
            if ((Original_CreatedBy == null)) {
                throw new global::System.ArgumentNullException("Original_CreatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_CreatedBy));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_CreatedDate));
            if ((Original_LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("Original_LastUpdatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_LastUpdatedBy));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(Original_LastUpdatedDate));
            if ((Original_ActiveFlag == null)) {
                throw new global::System.ArgumentNullException("Original_ActiveFlag");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_ActiveFlag));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(Original_AllowPriceIncrePct));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(Original_AllowPriceDecrePct));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal CategoryID, 
                    string Description, 
                    string CreatedBy, 
                    System.DateTime CreatedDate, 
                    string LastUpdatedBy, 
                    System.DateTime LastUpdatedDate, 
                    string ActiveFlag, 
                    decimal AllowPriceIncrePct, 
                    decimal AllowPriceDecrePct, 
                    string Original_SubCategoryCode, 
                    decimal Original_SubCategoryID, 
                    decimal Original_CategoryID, 
                    string Original_Description, 
                    string Original_CreatedBy, 
                    System.DateTime Original_CreatedDate, 
                    string Original_LastUpdatedBy, 
                    System.DateTime Original_LastUpdatedDate, 
                    string Original_ActiveFlag, 
                    decimal Original_AllowPriceIncrePct, 
                    decimal Original_AllowPriceDecrePct) {
            return this.Update(Original_SubCategoryCode, CategoryID, Description, CreatedBy, CreatedDate, LastUpdatedBy, LastUpdatedDate, ActiveFlag, AllowPriceIncrePct, AllowPriceDecrePct, Original_SubCategoryCode, Original_SubCategoryID, Original_CategoryID, Original_Description, Original_CreatedBy, Original_CreatedDate, Original_LastUpdatedBy, Original_LastUpdatedDate, Original_ActiveFlag, Original_AllowPriceIncrePct, Original_AllowPriceDecrePct);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Get_Tradefeed_ExceptionTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public Get_Tradefeed_ExceptionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Get_Tradefeed_Exception";
            tableMapping.ColumnMappings.Add("CommodityCode", "CommodityCode");
            tableMapping.ColumnMappings.Add("Contract_Year", "Contract_Year");
            tableMapping.ColumnMappings.Add("Contract_Month", "Contract_Month");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ServicesCekTradefeed.Properties.Settings.Default.SKDConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SKD.Get_Tradefeed_Exception";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tgl", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.Get_Tradefeed_ExceptionDataTable dataTable, global::System.Nullable<global::System.DateTime> tgl) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((tgl.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(tgl.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.Get_Tradefeed_ExceptionDataTable GetData(global::System.Nullable<global::System.DateTime> tgl) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((tgl.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(tgl.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            DataSet1.Get_Tradefeed_ExceptionDataTable dataTable = new DataSet1.Get_Tradefeed_ExceptionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class uspTradeFeedExceptionApproveAllTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public uspTradeFeedExceptionApproveAllTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ServicesCekTradefeed.Properties.Settings.Default.SKDConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SKD.uspTradeFeedExceptionApproveAll";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@exchangeId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bussDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@approvalStatus", global::System.Data.SqlDbType.Char, 1, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@approvalDesc", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@approverUserName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.uspTradeFeedExceptionApproveAllDataTable dataTable, global::System.Nullable<int> exchangeId, global::System.Nullable<global::System.DateTime> bussDate, string approvalStatus, string approvalDesc, string approverUserName) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((exchangeId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(exchangeId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((bussDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(bussDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((approvalStatus == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(approvalStatus));
            }
            if ((approvalDesc == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(approvalDesc));
            }
            if ((approverUserName == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(approverUserName));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.uspTradeFeedExceptionApproveAllDataTable GetData(global::System.Nullable<int> exchangeId, global::System.Nullable<global::System.DateTime> bussDate, string approvalStatus, string approvalDesc, string approverUserName) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((exchangeId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(exchangeId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((bussDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(bussDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((approvalStatus == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(approvalStatus));
            }
            if ((approvalDesc == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(approvalDesc));
            }
            if ((approverUserName == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(approverUserName));
            }
            DataSet1.uspTradeFeedExceptionApproveAllDataTable dataTable = new DataSet1.uspTradeFeedExceptionApproveAllDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class iDfsFasPalnTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public iDfsFasPalnTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "iDfsFasPaln";
            tableMapping.ColumnMappings.Add("CMID", "CMID");
            tableMapping.ColumnMappings.Add("BusinessDate", "BusinessDate");
            tableMapping.ColumnMappings.Add("PALN", "PALN");
            tableMapping.ColumnMappings.Add("Name", "Name");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ServicesCekTradefeed.Properties.Settings.Default.SKDConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TOP (4) a.CMID, a.BusinessDate, a.PALN, b.Name\r\nFROM     iDfsFasPaln AS a " +
                "INNER JOIN\r\n                  ClearingMember AS b ON a.CMID = b.CMID\r\nORDER BY a" +
                ".BusinessDate DESC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.iDfsFasPalnDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.iDfsFasPalnDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.iDfsFasPalnDataTable dataTable = new DataSet1.iDfsFasPalnDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class irca_parameterTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public irca_parameterTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "irca_parameter";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("pair", "pair");
            tableMapping.ColumnMappings.Add("parameter", "parameter");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [irca_parameter] WHERE (([id] = @Original_id) AND ((@IsNull_pair = 1 " +
                "AND [pair] IS NULL) OR ([pair] = @Original_pair)) AND ((@IsNull_parameter = 1 AN" +
                "D [parameter] IS NULL) OR ([parameter] = @Original_parameter)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_pair", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pair", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_pair", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pair", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_parameter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parameter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_parameter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parameter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [irca_parameter] ([pair], [parameter]) VALUES (@pair, @parameter);\r\nS" +
                "ELECT id, pair, parameter FROM irca_parameter WHERE (id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pair", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pair", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@parameter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parameter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [irca_parameter] SET [pair] = @pair, [parameter] = @parameter WHERE (([id] = @Original_id) AND ((@IsNull_pair = 1 AND [pair] IS NULL) OR ([pair] = @Original_pair)) AND ((@IsNull_parameter = 1 AND [parameter] IS NULL) OR ([parameter] = @Original_parameter)));
SELECT id, pair, parameter FROM irca_parameter WHERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pair", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pair", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@parameter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parameter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_pair", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pair", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_pair", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pair", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_parameter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parameter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_parameter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parameter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ServicesCekTradefeed.Properties.Settings.Default.SKDConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT irca_parameter.*\r\nFROM     irca_parameter";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.irca_parameterDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.irca_parameterDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.irca_parameterDataTable dataTable = new DataSet1.irca_parameterDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.irca_parameterDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "irca_parameter");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_id, string Original_pair, global::System.Nullable<int> Original_parameter) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_id));
            if ((Original_pair == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_pair));
            }
            if ((Original_parameter.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_parameter.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string pair, global::System.Nullable<int> parameter) {
            if ((pair == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(pair));
            }
            if ((parameter.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(parameter.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string pair, global::System.Nullable<int> parameter, long Original_id, string Original_pair, global::System.Nullable<int> Original_parameter, long id) {
            if ((pair == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(pair));
            }
            if ((parameter.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(parameter.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(Original_id));
            if ((Original_pair == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_pair));
            }
            if ((Original_parameter.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_parameter.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string pair, global::System.Nullable<int> parameter, long Original_id, string Original_pair, global::System.Nullable<int> Original_parameter) {
            return this.Update(pair, parameter, Original_id, Original_pair, Original_parameter, Original_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class irca_productTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public irca_productTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "irca_product";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("product", "product");
            tableMapping.ColumnMappings.Add("pair", "pair");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [irca_product] WHERE (([id] = @Original_id) AND ((@IsNull_product = 1" +
                " AND [product] IS NULL) OR ([product] = @Original_product)) AND ((@IsNull_pair =" +
                " 1 AND [pair] IS NULL) OR ([pair] = @Original_pair)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_product", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "product", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_product", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "product", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_pair", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pair", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_pair", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pair", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [irca_product] ([product], [pair]) VALUES (@product, @pair);\r\nSELECT " +
                "id, product, pair FROM irca_product WHERE (id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@product", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "product", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pair", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pair", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [irca_product] SET [product] = @product, [pair] = @pair WHERE (([id] = @Original_id) AND ((@IsNull_product = 1 AND [product] IS NULL) OR ([product] = @Original_product)) AND ((@IsNull_pair = 1 AND [pair] IS NULL) OR ([pair] = @Original_pair)));
SELECT id, product, pair FROM irca_product WHERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@product", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "product", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pair", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pair", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_product", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "product", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_product", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "product", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_pair", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pair", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_pair", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pair", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ServicesCekTradefeed.Properties.Settings.Default.SKDConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id, product, pair\r\nFROM     irca_product";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.irca_productDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.irca_productDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.irca_productDataTable dataTable = new DataSet1.irca_productDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.irca_productDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "irca_product");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_id, string Original_product, string Original_pair) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_id));
            if ((Original_product == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_product));
            }
            if ((Original_pair == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_pair));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string product, string pair) {
            if ((product == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(product));
            }
            if ((pair == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(pair));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string product, string pair, long Original_id, string Original_product, string Original_pair, long id) {
            if ((product == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(product));
            }
            if ((pair == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(pair));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(Original_id));
            if ((Original_product == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_product));
            }
            if ((Original_pair == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_pair));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string product, string pair, long Original_id, string Original_product, string Original_pair) {
            return this.Update(product, pair, Original_id, Original_product, Original_pair, Original_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class IRCATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public IRCATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "IRCA";
            tableMapping.ColumnMappings.Add("CommodityID", "CommodityID");
            tableMapping.ColumnMappings.Add("EffectiveStartDate", "EffectiveStartDate");
            tableMapping.ColumnMappings.Add("ApprovalStatus", "ApprovalStatus");
            tableMapping.ColumnMappings.Add("IRCAValue", "IRCAValue");
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
            tableMapping.ColumnMappings.Add("CreatedDate", "CreatedDate");
            tableMapping.ColumnMappings.Add("LastUpdatedBy", "LastUpdatedBy");
            tableMapping.ColumnMappings.Add("LastUpdatedDate", "LastUpdatedDate");
            tableMapping.ColumnMappings.Add("EffectiveEndDate", "EffectiveEndDate");
            tableMapping.ColumnMappings.Add("ApprovalDesc", "ApprovalDesc");
            tableMapping.ColumnMappings.Add("OriginalID", "OriginalID");
            tableMapping.ColumnMappings.Add("ActionFlag", "ActionFlag");
            tableMapping.ColumnMappings.Add("IRCAID", "IRCAID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [IRCA] WHERE (([CommodityID] = @Original_CommodityID) AND ([EffectiveStartDate] = @Original_EffectiveStartDate) AND ([ApprovalStatus] = @Original_ApprovalStatus) AND ([IRCAValue] = @Original_IRCAValue) AND ([CreatedBy] = @Original_CreatedBy) AND ([CreatedDate] = @Original_CreatedDate) AND ([LastUpdatedBy] = @Original_LastUpdatedBy) AND ([LastUpdatedDate] = @Original_LastUpdatedDate) AND ((@IsNull_EffectiveEndDate = 1 AND [EffectiveEndDate] IS NULL) OR ([EffectiveEndDate] = @Original_EffectiveEndDate)) AND ((@IsNull_ApprovalDesc = 1 AND [ApprovalDesc] IS NULL) OR ([ApprovalDesc] = @Original_ApprovalDesc)) AND ((@IsNull_OriginalID = 1 AND [OriginalID] IS NULL) OR ([OriginalID] = @Original_OriginalID)) AND ((@IsNull_ActionFlag = 1 AND [ActionFlag] IS NULL) OR ([ActionFlag] = @Original_ActionFlag)) AND ([IRCAID] = @Original_IRCAID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CommodityID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CommodityID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EffectiveStartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveStartDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApprovalStatus", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IRCAValue", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 6, "IRCAValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EffectiveEndDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveEndDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EffectiveEndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveEndDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ApprovalDesc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApprovalDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OriginalID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginalID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OriginalID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "OriginalID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ActionFlag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActionFlag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ActionFlag", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActionFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IRCAID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "IRCAID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [IRCA] ([CommodityID], [EffectiveStartDate], [ApprovalStatus], [IRCAValue], [CreatedBy], [CreatedDate], [LastUpdatedBy], [LastUpdatedDate], [EffectiveEndDate], [ApprovalDesc], [OriginalID], [ActionFlag]) VALUES (@CommodityID, @EffectiveStartDate, @ApprovalStatus, @IRCAValue, @CreatedBy, @CreatedDate, @LastUpdatedBy, @LastUpdatedDate, @EffectiveEndDate, @ApprovalDesc, @OriginalID, @ActionFlag);
SELECT CommodityID, EffectiveStartDate, ApprovalStatus, IRCAValue, CreatedBy, CreatedDate, LastUpdatedBy, LastUpdatedDate, EffectiveEndDate, ApprovalDesc, OriginalID, ActionFlag, IRCAID FROM IRCA WHERE (ApprovalStatus = @ApprovalStatus) AND (CommodityID = @CommodityID) AND (EffectiveStartDate = @EffectiveStartDate)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CommodityID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CommodityID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EffectiveStartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveStartDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovalStatus", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IRCAValue", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 6, "IRCAValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EffectiveEndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveEndDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovalDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginalID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "OriginalID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActionFlag", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActionFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [IRCA] SET [CommodityID] = @CommodityID, [EffectiveStartDate] = @Effective" +
                "StartDate, [ApprovalStatus] = @ApprovalStatus, [IRCAValue] = @IRCAValue, [Create" +
                "dBy] = @CreatedBy, [CreatedDate] = @CreatedDate, [LastUpdatedBy] = @LastUpdatedB" +
                "y, [LastUpdatedDate] = @LastUpdatedDate, [EffectiveEndDate] = @EffectiveEndDate," +
                " [ApprovalDesc] = @ApprovalDesc, [OriginalID] = @OriginalID, [ActionFlag] = @Act" +
                "ionFlag WHERE (([CommodityID] = @Original_CommodityID) AND ([EffectiveStartDate]" +
                " = @Original_EffectiveStartDate) AND ([ApprovalStatus] = @Original_ApprovalStatu" +
                "s) AND ([IRCAValue] = @Original_IRCAValue) AND ([CreatedBy] = @Original_CreatedB" +
                "y) AND ([CreatedDate] = @Original_CreatedDate) AND ([LastUpdatedBy] = @Original_" +
                "LastUpdatedBy) AND ([LastUpdatedDate] = @Original_LastUpdatedDate) AND ((@IsNull" +
                "_EffectiveEndDate = 1 AND [EffectiveEndDate] IS NULL) OR ([EffectiveEndDate] = @" +
                "Original_EffectiveEndDate)) AND ((@IsNull_ApprovalDesc = 1 AND [ApprovalDesc] IS" +
                " NULL) OR ([ApprovalDesc] = @Original_ApprovalDesc)) AND ((@IsNull_OriginalID = " +
                "1 AND [OriginalID] IS NULL) OR ([OriginalID] = @Original_OriginalID)) AND ((@IsN" +
                "ull_ActionFlag = 1 AND [ActionFlag] IS NULL) OR ([ActionFlag] = @Original_Action" +
                "Flag)) AND ([IRCAID] = @Original_IRCAID));\r\nSELECT CommodityID, EffectiveStartDa" +
                "te, ApprovalStatus, IRCAValue, CreatedBy, CreatedDate, LastUpdatedBy, LastUpdate" +
                "dDate, EffectiveEndDate, ApprovalDesc, OriginalID, ActionFlag, IRCAID FROM IRCA " +
                "WHERE (ApprovalStatus = @ApprovalStatus) AND (CommodityID = @CommodityID) AND (E" +
                "ffectiveStartDate = @EffectiveStartDate)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CommodityID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CommodityID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EffectiveStartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveStartDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovalStatus", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IRCAValue", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 6, "IRCAValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EffectiveEndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveEndDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovalDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginalID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "OriginalID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActionFlag", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActionFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CommodityID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CommodityID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EffectiveStartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveStartDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApprovalStatus", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IRCAValue", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 6, "IRCAValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EffectiveEndDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveEndDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EffectiveEndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveEndDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ApprovalDesc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApprovalDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OriginalID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginalID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OriginalID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "OriginalID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ActionFlag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActionFlag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ActionFlag", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActionFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IRCAID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "IRCAID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ServicesCekTradefeed.Properties.Settings.Default.SKDConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        IRCA.*\r\nFROM            IRCA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT ActionFlag, ApprovalDesc, ApprovalStatus, CommodityID, CreatedBy, CreatedD" +
                "ate, EffectiveEndDate, EffectiveStartDate, IRCAID, IRCAValue, LastUpdatedBy, Las" +
                "tUpdatedDate, OriginalID FROM IRCA WHERE (CommodityID = @id) AND (EffectiveStart" +
                "Date = @date)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "CommodityID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@date", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveStartDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT ActionFlag, ApprovalDesc, ApprovalStatus, CommodityID, CreatedBy, CreatedD" +
                "ate, EffectiveEndDate, EffectiveStartDate, IRCAID, IRCAValue, LastUpdatedBy, Las" +
                "tUpdatedDate, OriginalID FROM IRCA WHERE (IRCAID = @id)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "IRCAID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"INSERT INTO [IRCA] ([CommodityID], [EffectiveStartDate], [ApprovalStatus], [IRCAValue], [CreatedBy], [CreatedDate], [LastUpdatedBy], [LastUpdatedDate], [EffectiveEndDate], [ApprovalDesc], [OriginalID], [ActionFlag]) VALUES (@CommodityID, @EffectiveStartDate, @ApprovalStatus, @IRCAValue, @CreatedBy, @CreatedDate, @LastUpdatedBy, @LastUpdatedDate, @EffectiveEndDate, @ApprovalDesc, @OriginalID, @ActionFlag);
SELECT CommodityID, EffectiveStartDate, ApprovalStatus, IRCAValue, CreatedBy, CreatedDate, LastUpdatedBy, LastUpdatedDate, EffectiveEndDate, ApprovalDesc, OriginalID, ActionFlag, IRCAID FROM IRCA WHERE (ApprovalStatus = @ApprovalStatus) AND (CommodityID = @CommodityID) AND (EffectiveStartDate = @EffectiveStartDate)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CommodityID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "CommodityID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EffectiveStartDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveStartDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovalStatus", global::System.Data.SqlDbType.Char, 1, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IRCAValue", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 6, "IRCAValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EffectiveEndDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveEndDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovalDesc", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginalID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "OriginalID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActionFlag", global::System.Data.SqlDbType.Char, 1, global::System.Data.ParameterDirection.Input, 0, 0, "ActionFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.IRCADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.IRCADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.IRCADataTable dataTable = new DataSet1.IRCADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByFilter(DataSet1.IRCADataTable dataTable, decimal id, System.DateTime date) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(id));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(date));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSet1.IRCADataTable GetDataByFilter(decimal id, System.DateTime date) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(id));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(date));
            DataSet1.IRCADataTable dataTable = new DataSet1.IRCADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillById(DataSet1.IRCADataTable dataTable, decimal id) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(id));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSet1.IRCADataTable GetDataById(decimal id) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(id));
            DataSet1.IRCADataTable dataTable = new DataSet1.IRCADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.IRCADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "IRCA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_CommodityID, System.DateTime Original_EffectiveStartDate, string Original_ApprovalStatus, decimal Original_IRCAValue, string Original_CreatedBy, System.DateTime Original_CreatedDate, string Original_LastUpdatedBy, System.DateTime Original_LastUpdatedDate, global::System.Nullable<global::System.DateTime> Original_EffectiveEndDate, string Original_ApprovalDesc, global::System.Nullable<decimal> Original_OriginalID, string Original_ActionFlag, decimal Original_IRCAID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_CommodityID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_EffectiveStartDate));
            if ((Original_ApprovalStatus == null)) {
                throw new global::System.ArgumentNullException("Original_ApprovalStatus");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ApprovalStatus));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_IRCAValue));
            if ((Original_CreatedBy == null)) {
                throw new global::System.ArgumentNullException("Original_CreatedBy");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_CreatedBy));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_CreatedDate));
            if ((Original_LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("Original_LastUpdatedBy");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_LastUpdatedBy));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_LastUpdatedDate));
            if ((Original_EffectiveEndDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_EffectiveEndDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_ApprovalDesc == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_ApprovalDesc));
            }
            if ((Original_OriginalID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((decimal)(Original_OriginalID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_ActionFlag == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_ActionFlag));
            }
            this.Adapter.DeleteCommand.Parameters[16].Value = ((decimal)(Original_IRCAID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal CommodityID, System.DateTime EffectiveStartDate, string ApprovalStatus, decimal IRCAValue, string CreatedBy, System.DateTime CreatedDate, string LastUpdatedBy, System.DateTime LastUpdatedDate, global::System.Nullable<global::System.DateTime> EffectiveEndDate, string ApprovalDesc, global::System.Nullable<decimal> OriginalID, string ActionFlag) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(CommodityID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(EffectiveStartDate));
            if ((ApprovalStatus == null)) {
                throw new global::System.ArgumentNullException("ApprovalStatus");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ApprovalStatus));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(IRCAValue));
            if ((CreatedBy == null)) {
                throw new global::System.ArgumentNullException("CreatedBy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(CreatedBy));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(CreatedDate));
            if ((LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("LastUpdatedBy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(LastUpdatedBy));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(LastUpdatedDate));
            if ((EffectiveEndDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(EffectiveEndDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ApprovalDesc == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(ApprovalDesc));
            }
            if ((OriginalID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(OriginalID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((ActionFlag == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(ActionFlag));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal CommodityID, 
                    System.DateTime EffectiveStartDate, 
                    string ApprovalStatus, 
                    decimal IRCAValue, 
                    string CreatedBy, 
                    System.DateTime CreatedDate, 
                    string LastUpdatedBy, 
                    System.DateTime LastUpdatedDate, 
                    global::System.Nullable<global::System.DateTime> EffectiveEndDate, 
                    string ApprovalDesc, 
                    global::System.Nullable<decimal> OriginalID, 
                    string ActionFlag, 
                    decimal Original_CommodityID, 
                    System.DateTime Original_EffectiveStartDate, 
                    string Original_ApprovalStatus, 
                    decimal Original_IRCAValue, 
                    string Original_CreatedBy, 
                    System.DateTime Original_CreatedDate, 
                    string Original_LastUpdatedBy, 
                    System.DateTime Original_LastUpdatedDate, 
                    global::System.Nullable<global::System.DateTime> Original_EffectiveEndDate, 
                    string Original_ApprovalDesc, 
                    global::System.Nullable<decimal> Original_OriginalID, 
                    string Original_ActionFlag, 
                    decimal Original_IRCAID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(CommodityID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(EffectiveStartDate));
            if ((ApprovalStatus == null)) {
                throw new global::System.ArgumentNullException("ApprovalStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ApprovalStatus));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(IRCAValue));
            if ((CreatedBy == null)) {
                throw new global::System.ArgumentNullException("CreatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(CreatedBy));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(CreatedDate));
            if ((LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("LastUpdatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(LastUpdatedBy));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(LastUpdatedDate));
            if ((EffectiveEndDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(EffectiveEndDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ApprovalDesc == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(ApprovalDesc));
            }
            if ((OriginalID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(OriginalID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((ActionFlag == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(ActionFlag));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_CommodityID));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_EffectiveStartDate));
            if ((Original_ApprovalStatus == null)) {
                throw new global::System.ArgumentNullException("Original_ApprovalStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_ApprovalStatus));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Original_IRCAValue));
            if ((Original_CreatedBy == null)) {
                throw new global::System.ArgumentNullException("Original_CreatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_CreatedBy));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(Original_CreatedDate));
            if ((Original_LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("Original_LastUpdatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_LastUpdatedBy));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(Original_LastUpdatedDate));
            if ((Original_EffectiveEndDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(Original_EffectiveEndDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_ApprovalDesc == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_ApprovalDesc));
            }
            if ((Original_OriginalID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(Original_OriginalID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_ActionFlag == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_ActionFlag));
            }
            this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(Original_IRCAID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal IRCAValue, 
                    string CreatedBy, 
                    System.DateTime CreatedDate, 
                    string LastUpdatedBy, 
                    System.DateTime LastUpdatedDate, 
                    global::System.Nullable<global::System.DateTime> EffectiveEndDate, 
                    string ApprovalDesc, 
                    global::System.Nullable<decimal> OriginalID, 
                    string ActionFlag, 
                    decimal Original_CommodityID, 
                    System.DateTime Original_EffectiveStartDate, 
                    string Original_ApprovalStatus, 
                    decimal Original_IRCAValue, 
                    string Original_CreatedBy, 
                    System.DateTime Original_CreatedDate, 
                    string Original_LastUpdatedBy, 
                    System.DateTime Original_LastUpdatedDate, 
                    global::System.Nullable<global::System.DateTime> Original_EffectiveEndDate, 
                    string Original_ApprovalDesc, 
                    global::System.Nullable<decimal> Original_OriginalID, 
                    string Original_ActionFlag, 
                    decimal Original_IRCAID) {
            return this.Update(Original_CommodityID, Original_EffectiveStartDate, Original_ApprovalStatus, IRCAValue, CreatedBy, CreatedDate, LastUpdatedBy, LastUpdatedDate, EffectiveEndDate, ApprovalDesc, OriginalID, ActionFlag, Original_CommodityID, Original_EffectiveStartDate, Original_ApprovalStatus, Original_IRCAValue, Original_CreatedBy, Original_CreatedDate, Original_LastUpdatedBy, Original_LastUpdatedDate, Original_EffectiveEndDate, Original_ApprovalDesc, Original_OriginalID, Original_ActionFlag, Original_IRCAID);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertQuery(decimal CommodityID, System.DateTime EffectiveStartDate, string ApprovalStatus, decimal IRCAValue, string CreatedBy, System.DateTime CreatedDate, string LastUpdatedBy, System.DateTime LastUpdatedDate, global::System.Nullable<global::System.DateTime> EffectiveEndDate, string ApprovalDesc, global::System.Nullable<decimal> OriginalID, string ActionFlag) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            command.Parameters[0].Value = ((decimal)(CommodityID));
            command.Parameters[1].Value = ((System.DateTime)(EffectiveStartDate));
            if ((ApprovalStatus == null)) {
                throw new global::System.ArgumentNullException("ApprovalStatus");
            }
            else {
                command.Parameters[2].Value = ((string)(ApprovalStatus));
            }
            command.Parameters[3].Value = ((decimal)(IRCAValue));
            if ((CreatedBy == null)) {
                throw new global::System.ArgumentNullException("CreatedBy");
            }
            else {
                command.Parameters[4].Value = ((string)(CreatedBy));
            }
            command.Parameters[5].Value = ((System.DateTime)(CreatedDate));
            if ((LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("LastUpdatedBy");
            }
            else {
                command.Parameters[6].Value = ((string)(LastUpdatedBy));
            }
            command.Parameters[7].Value = ((System.DateTime)(LastUpdatedDate));
            if ((EffectiveEndDate.HasValue == true)) {
                command.Parameters[8].Value = ((System.DateTime)(EffectiveEndDate.Value));
            }
            else {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ApprovalDesc == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(ApprovalDesc));
            }
            if ((OriginalID.HasValue == true)) {
                command.Parameters[10].Value = ((decimal)(OriginalID.Value));
            }
            else {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((ActionFlag == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(ActionFlag));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class iDfsFasPaln1TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public iDfsFasPaln1TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "iDfsFasPaln1";
            tableMapping.ColumnMappings.Add("CMID", "CMID");
            tableMapping.ColumnMappings.Add("BusinessDate", "BusinessDate");
            tableMapping.ColumnMappings.Add("PALN", "PALN");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [iDfsFasPaln] WHERE (([CMID] = @Original_CMID) AND ([BusinessDate] = " +
                "@Original_BusinessDate) AND ((@IsNull_PALN = 1 AND [PALN] IS NULL) OR ([PALN] = " +
                "@Original_PALN)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CMID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CMID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BusinessDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PALN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PALN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PALN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "PALN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [iDfsFasPaln] ([CMID], [BusinessDate], [PALN]) VALUES (@CMID, @Busine" +
                "ssDate, @PALN);\r\nSELECT CMID, BusinessDate, PALN FROM iDfsFasPaln WHERE (Busines" +
                "sDate = @BusinessDate) AND (CMID = @CMID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CMID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PALN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "PALN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [iDfsFasPaln] SET [CMID] = @CMID, [BusinessDate] = @BusinessDate, [PALN] = @PALN WHERE (([CMID] = @Original_CMID) AND ([BusinessDate] = @Original_BusinessDate) AND ((@IsNull_PALN = 1 AND [PALN] IS NULL) OR ([PALN] = @Original_PALN)));
SELECT CMID, BusinessDate, PALN FROM iDfsFasPaln WHERE (BusinessDate = @BusinessDate) AND (CMID = @CMID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CMID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PALN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "PALN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CMID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CMID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BusinessDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PALN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PALN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PALN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "PALN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ServicesCekTradefeed.Properties.Settings.Default.SKDConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT iDfsFasPaln.*\r\nFROM     iDfsFasPaln";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT BusinessDate, CMID, PALN FROM iDfsFasPaln WHERE (BusinessDate = @bd) AND (" +
                "CMID = @cmid)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bd", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cmid", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "CMID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.iDfsFasPaln1DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.iDfsFasPaln1DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.iDfsFasPaln1DataTable dataTable = new DataSet1.iDfsFasPaln1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDate(DataSet1.iDfsFasPaln1DataTable dataTable, System.DateTime bd, decimal cmid) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(bd));
            this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(cmid));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSet1.iDfsFasPaln1DataTable GetDataByDate(System.DateTime bd, decimal cmid) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(bd));
            this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(cmid));
            DataSet1.iDfsFasPaln1DataTable dataTable = new DataSet1.iDfsFasPaln1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.iDfsFasPaln1DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "iDfsFasPaln1");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_CMID, System.DateTime Original_BusinessDate, global::System.Nullable<decimal> Original_PALN) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_CMID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_BusinessDate));
            if ((Original_PALN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_PALN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal CMID, System.DateTime BusinessDate, global::System.Nullable<decimal> PALN) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(CMID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(BusinessDate));
            if ((PALN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(PALN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal CMID, System.DateTime BusinessDate, global::System.Nullable<decimal> PALN, decimal Original_CMID, System.DateTime Original_BusinessDate, global::System.Nullable<decimal> Original_PALN) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(CMID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(BusinessDate));
            if ((PALN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(PALN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_CMID));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Original_BusinessDate));
            if ((Original_PALN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Original_PALN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<decimal> PALN, decimal Original_CMID, System.DateTime Original_BusinessDate, global::System.Nullable<decimal> Original_PALN) {
            return this.Update(Original_CMID, Original_BusinessDate, PALN, Original_CMID, Original_BusinessDate, Original_PALN);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class fee_palnTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public fee_palnTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "fee_paln";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("trader_id", "trader_id");
            tableMapping.ColumnMappings.Add("businessDate", "businessDate");
            tableMapping.ColumnMappings.Add("totalFee", "totalFee");
            tableMapping.ColumnMappings.Add("totalFeeUsd", "totalFeeUsd");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[fee_paln] WHERE (([id] = @Original_id) AND ((@IsNull_trader_id = 1 AND [trader_id] IS NULL) OR ([trader_id] = @Original_trader_id)) AND ((@IsNull_businessDate = 1 AND [businessDate] IS NULL) OR ([businessDate] = @Original_businessDate)) AND ((@IsNull_totalFee = 1 AND [totalFee] IS NULL) OR ([totalFee] = @Original_totalFee)) AND ((@IsNull_totalFeeUsd = 1 AND [totalFeeUsd] IS NULL) OR ([totalFeeUsd] = @Original_totalFeeUsd)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_trader_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "trader_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_trader_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "trader_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_businessDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "businessDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_businessDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "businessDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_totalFee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "totalFee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_totalFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 10, "totalFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_totalFeeUsd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "totalFeeUsd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_totalFeeUsd", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 10, "totalFeeUsd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[fee_paln] ([trader_id], [businessDate], [totalFee], [totalFeeU" +
                "sd]) VALUES (@trader_id, @businessDate, @totalFee, @totalFeeUsd);\r\nSELECT id, tr" +
                "ader_id, businessDate, totalFee, totalFeeUsd FROM dbo.fee_paln WHERE (id = SCOPE" +
                "_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@trader_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "trader_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@businessDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "businessDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@totalFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 10, "totalFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@totalFeeUsd", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 10, "totalFeeUsd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[fee_paln] SET [trader_id] = @trader_id, [businessDate] = @businessDate, [totalFee] = @totalFee, [totalFeeUsd] = @totalFeeUsd WHERE (([id] = @Original_id) AND ((@IsNull_trader_id = 1 AND [trader_id] IS NULL) OR ([trader_id] = @Original_trader_id)) AND ((@IsNull_businessDate = 1 AND [businessDate] IS NULL) OR ([businessDate] = @Original_businessDate)) AND ((@IsNull_totalFee = 1 AND [totalFee] IS NULL) OR ([totalFee] = @Original_totalFee)) AND ((@IsNull_totalFeeUsd = 1 AND [totalFeeUsd] IS NULL) OR ([totalFeeUsd] = @Original_totalFeeUsd)));
SELECT id, trader_id, businessDate, totalFee, totalFeeUsd FROM dbo.fee_paln WHERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@trader_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "trader_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@businessDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "businessDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@totalFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 10, "totalFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@totalFeeUsd", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 10, "totalFeeUsd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_trader_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "trader_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_trader_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "trader_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_businessDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "businessDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_businessDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "businessDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_totalFee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "totalFee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_totalFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 10, "totalFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_totalFeeUsd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "totalFeeUsd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_totalFeeUsd", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 10, "totalFeeUsd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ServicesCekTradefeed.Properties.Settings.Default.SKDConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT dbo.fee_paln.*\r\nFROM   dbo.fee_paln";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT SUM(totalFeeUsd) AS totalFee\r\nFROM   dbo.fee_paln\r\nWHERE (businessDate BET" +
                "WEEN @start AND @end)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@start", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "businessDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@end", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "businessDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.fee_palnDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.fee_palnDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.fee_palnDataTable dataTable = new DataSet1.fee_palnDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDate(DataSet1.fee_palnDataTable dataTable, global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> end) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((start.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(start.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((end.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(end.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSet1.fee_palnDataTable GetDataByDate(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> end) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((start.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(start.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((end.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(end.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            DataSet1.fee_palnDataTable dataTable = new DataSet1.fee_palnDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.fee_palnDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "fee_paln");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, string Original_trader_id, global::System.Nullable<global::System.DateTime> Original_businessDate, global::System.Nullable<decimal> Original_totalFee, global::System.Nullable<decimal> Original_totalFeeUsd) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_trader_id == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_trader_id));
            }
            if ((Original_businessDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_businessDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_totalFee.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_totalFee.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_totalFeeUsd.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_totalFeeUsd.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string trader_id, global::System.Nullable<global::System.DateTime> businessDate, global::System.Nullable<decimal> totalFee, global::System.Nullable<decimal> totalFeeUsd) {
            if ((trader_id == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(trader_id));
            }
            if ((businessDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(businessDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((totalFee.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(totalFee.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((totalFeeUsd.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(totalFeeUsd.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string trader_id, global::System.Nullable<global::System.DateTime> businessDate, global::System.Nullable<decimal> totalFee, global::System.Nullable<decimal> totalFeeUsd, int Original_id, string Original_trader_id, global::System.Nullable<global::System.DateTime> Original_businessDate, global::System.Nullable<decimal> Original_totalFee, global::System.Nullable<decimal> Original_totalFeeUsd, int id) {
            if ((trader_id == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(trader_id));
            }
            if ((businessDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(businessDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((totalFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(totalFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((totalFeeUsd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(totalFeeUsd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_id));
            if ((Original_trader_id == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_trader_id));
            }
            if ((Original_businessDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Original_businessDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_totalFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Original_totalFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_totalFeeUsd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_totalFeeUsd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string trader_id, global::System.Nullable<global::System.DateTime> businessDate, global::System.Nullable<decimal> totalFee, global::System.Nullable<decimal> totalFeeUsd, int Original_id, string Original_trader_id, global::System.Nullable<global::System.DateTime> Original_businessDate, global::System.Nullable<decimal> Original_totalFee, global::System.Nullable<decimal> Original_totalFeeUsd) {
            return this.Update(trader_id, businessDate, totalFee, totalFeeUsd, Original_id, Original_trader_id, Original_businessDate, Original_totalFee, Original_totalFeeUsd, Original_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RateJisdorTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public RateJisdorTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RateJisdor";
            tableMapping.ColumnMappings.Add("BusinessDate", "BusinessDate");
            tableMapping.ColumnMappings.Add("Rate", "Rate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [RateJisdor] WHERE (([BusinessDate] = @Original_BusinessDate) AND ([R" +
                "ate] = @Original_Rate))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BusinessDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 3, "Rate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [RateJisdor] ([BusinessDate], [Rate]) VALUES (@BusinessDate, @Rate);\r" +
                "\nSELECT BusinessDate, Rate FROM RateJisdor WHERE (BusinessDate = @BusinessDate)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 3, "Rate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [RateJisdor] SET [BusinessDate] = @BusinessDate, [Rate] = @Rate WHERE (([B" +
                "usinessDate] = @Original_BusinessDate) AND ([Rate] = @Original_Rate));\r\nSELECT B" +
                "usinessDate, Rate FROM RateJisdor WHERE (BusinessDate = @BusinessDate)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 3, "Rate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BusinessDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 3, "Rate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ServicesCekTradefeed.Properties.Settings.Default.SKDConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT RateJisdor.*\r\nFROM   RateJisdor";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT RateJisdor.*\r\nFROM   RateJisdor WHERE BusinessDate = @date";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@date", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.RateJisdorDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.RateJisdorDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.RateJisdorDataTable dataTable = new DataSet1.RateJisdorDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDate(DataSet1.RateJisdorDataTable dataTable, System.DateTime date) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(date));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSet1.RateJisdorDataTable GetDataByDate(System.DateTime date) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(date));
            DataSet1.RateJisdorDataTable dataTable = new DataSet1.RateJisdorDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.RateJisdorDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "RateJisdor");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.DateTime Original_BusinessDate, decimal Original_Rate) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.DateTime)(Original_BusinessDate));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_Rate));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime BusinessDate, decimal Rate) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(BusinessDate));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(Rate));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime BusinessDate, decimal Rate, System.DateTime Original_BusinessDate, decimal Original_Rate) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(BusinessDate));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(Rate));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(Original_BusinessDate));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_Rate));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal Rate, System.DateTime Original_BusinessDate, decimal Original_Rate) {
            return this.Update(Original_BusinessDate, Rate, Original_BusinessDate, Original_Rate);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class QueriesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.IDbCommand[] _commandCollection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.IDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.IDbCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Connection = new global::System.Data.SqlClient.SqlConnection(global::ServicesCekTradefeed.Properties.Settings.Default.SKDConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).CommandText = "SKD.uspTradeFeedExceptionApproveAll";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@exchangeId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bussDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@approvalStatus", global::System.Data.SqlDbType.Char, 1, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@approvalDesc", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@approverUserName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Connection = new global::System.Data.SqlClient.SqlConnection(global::ServicesCekTradefeed.Properties.Settings.Default.SKDConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).CommandText = "SELECT SKD.IsHoliday(@inpuDate)";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).CommandType = global::System.Data.CommandType.Text;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inpuDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Connection = new global::System.Data.SqlClient.SqlConnection(global::ServicesCekTradefeed.Properties.Settings.Default.SKDConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).CommandText = "SKD.uspGenerateFasDFS";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@businessDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object uspTradeFeedExceptionApproveAll(global::System.Nullable<int> exchangeId, global::System.Nullable<global::System.DateTime> bussDate, string approvalStatus, string approvalDesc, string approverUserName) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[0]));
            if ((exchangeId.HasValue == true)) {
                command.Parameters[1].Value = ((int)(exchangeId.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((bussDate.HasValue == true)) {
                command.Parameters[2].Value = ((System.DateTime)(bussDate.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((approvalStatus == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(approvalStatus));
            }
            if ((approvalDesc == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(approvalDesc));
            }
            if ((approverUserName == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(approverUserName));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<bool> IsHoliday(System.DateTime inpuDate) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[1]));
            command.Parameters[0].Value = ((System.DateTime)(inpuDate));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<bool>();
            }
            else {
                return new global::System.Nullable<bool>(((bool)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object uspGenerateFasDFS(global::System.Nullable<global::System.DateTime> businessDate) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[2]));
            if ((businessDate.HasValue == true)) {
                command.Parameters[1].Value = ((System.DateTime)(businessDate.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private TradefeedExceptionTableAdapter _tradefeedExceptionTableAdapter;
        
        private ParameterTableAdapter _parameterTableAdapter;
        
        private ClearingMemberSuspenseStatusTableAdapter _clearingMemberSuspenseStatusTableAdapter;
        
        private ClearingHouseSuspenseTableAdapter _clearingHouseSuspenseTableAdapter;
        
        private ClearingMemberTableAdapter _clearingMemberTableAdapter;
        
        private ContractTableAdapter _contractTableAdapter;
        
        private SubCategoryTableAdapter _subCategoryTableAdapter;
        
        private irca_parameterTableAdapter _irca_parameterTableAdapter;
        
        private irca_productTableAdapter _irca_productTableAdapter;
        
        private IRCATableAdapter _iRCATableAdapter;
        
        private iDfsFasPaln1TableAdapter _iDfsFasPaln1TableAdapter;
        
        private fee_palnTableAdapter _fee_palnTableAdapter;
        
        private RateJisdorTableAdapter _rateJisdorTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TradefeedExceptionTableAdapter TradefeedExceptionTableAdapter {
            get {
                return this._tradefeedExceptionTableAdapter;
            }
            set {
                this._tradefeedExceptionTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ParameterTableAdapter ParameterTableAdapter {
            get {
                return this._parameterTableAdapter;
            }
            set {
                this._parameterTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ClearingMemberSuspenseStatusTableAdapter ClearingMemberSuspenseStatusTableAdapter {
            get {
                return this._clearingMemberSuspenseStatusTableAdapter;
            }
            set {
                this._clearingMemberSuspenseStatusTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ClearingHouseSuspenseTableAdapter ClearingHouseSuspenseTableAdapter {
            get {
                return this._clearingHouseSuspenseTableAdapter;
            }
            set {
                this._clearingHouseSuspenseTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ClearingMemberTableAdapter ClearingMemberTableAdapter {
            get {
                return this._clearingMemberTableAdapter;
            }
            set {
                this._clearingMemberTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ContractTableAdapter ContractTableAdapter {
            get {
                return this._contractTableAdapter;
            }
            set {
                this._contractTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SubCategoryTableAdapter SubCategoryTableAdapter {
            get {
                return this._subCategoryTableAdapter;
            }
            set {
                this._subCategoryTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public irca_parameterTableAdapter irca_parameterTableAdapter {
            get {
                return this._irca_parameterTableAdapter;
            }
            set {
                this._irca_parameterTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public irca_productTableAdapter irca_productTableAdapter {
            get {
                return this._irca_productTableAdapter;
            }
            set {
                this._irca_productTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public IRCATableAdapter IRCATableAdapter {
            get {
                return this._iRCATableAdapter;
            }
            set {
                this._iRCATableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public iDfsFasPaln1TableAdapter iDfsFasPaln1TableAdapter {
            get {
                return this._iDfsFasPaln1TableAdapter;
            }
            set {
                this._iDfsFasPaln1TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public fee_palnTableAdapter fee_palnTableAdapter {
            get {
                return this._fee_palnTableAdapter;
            }
            set {
                this._fee_palnTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public RateJisdorTableAdapter RateJisdorTableAdapter {
            get {
                return this._rateJisdorTableAdapter;
            }
            set {
                this._rateJisdorTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._tradefeedExceptionTableAdapter != null) 
                            && (this._tradefeedExceptionTableAdapter.Connection != null))) {
                    return this._tradefeedExceptionTableAdapter.Connection;
                }
                if (((this._parameterTableAdapter != null) 
                            && (this._parameterTableAdapter.Connection != null))) {
                    return this._parameterTableAdapter.Connection;
                }
                if (((this._clearingMemberSuspenseStatusTableAdapter != null) 
                            && (this._clearingMemberSuspenseStatusTableAdapter.Connection != null))) {
                    return this._clearingMemberSuspenseStatusTableAdapter.Connection;
                }
                if (((this._clearingHouseSuspenseTableAdapter != null) 
                            && (this._clearingHouseSuspenseTableAdapter.Connection != null))) {
                    return this._clearingHouseSuspenseTableAdapter.Connection;
                }
                if (((this._clearingMemberTableAdapter != null) 
                            && (this._clearingMemberTableAdapter.Connection != null))) {
                    return this._clearingMemberTableAdapter.Connection;
                }
                if (((this._contractTableAdapter != null) 
                            && (this._contractTableAdapter.Connection != null))) {
                    return this._contractTableAdapter.Connection;
                }
                if (((this._subCategoryTableAdapter != null) 
                            && (this._subCategoryTableAdapter.Connection != null))) {
                    return this._subCategoryTableAdapter.Connection;
                }
                if (((this._irca_parameterTableAdapter != null) 
                            && (this._irca_parameterTableAdapter.Connection != null))) {
                    return this._irca_parameterTableAdapter.Connection;
                }
                if (((this._irca_productTableAdapter != null) 
                            && (this._irca_productTableAdapter.Connection != null))) {
                    return this._irca_productTableAdapter.Connection;
                }
                if (((this._iRCATableAdapter != null) 
                            && (this._iRCATableAdapter.Connection != null))) {
                    return this._iRCATableAdapter.Connection;
                }
                if (((this._iDfsFasPaln1TableAdapter != null) 
                            && (this._iDfsFasPaln1TableAdapter.Connection != null))) {
                    return this._iDfsFasPaln1TableAdapter.Connection;
                }
                if (((this._fee_palnTableAdapter != null) 
                            && (this._fee_palnTableAdapter.Connection != null))) {
                    return this._fee_palnTableAdapter.Connection;
                }
                if (((this._rateJisdorTableAdapter != null) 
                            && (this._rateJisdorTableAdapter.Connection != null))) {
                    return this._rateJisdorTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._tradefeedExceptionTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._parameterTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._clearingMemberSuspenseStatusTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._clearingHouseSuspenseTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._clearingMemberTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._contractTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._subCategoryTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._irca_parameterTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._irca_productTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._iRCATableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._iDfsFasPaln1TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._fee_palnTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._rateJisdorTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._clearingMemberTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ClearingMember.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._clearingMemberTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._iDfsFasPaln1TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.iDfsFasPaln1.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._iDfsFasPaln1TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._iRCATableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.IRCA.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._iRCATableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._irca_productTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.irca_product.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._irca_productTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._irca_parameterTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.irca_parameter.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._irca_parameterTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._contractTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Contract.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._contractTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._fee_palnTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.fee_paln.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._fee_palnTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._clearingHouseSuspenseTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ClearingHouseSuspense.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._clearingHouseSuspenseTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._clearingMemberSuspenseStatusTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ClearingMemberSuspenseStatus.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._clearingMemberSuspenseStatusTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._parameterTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Parameter.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._parameterTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tradefeedExceptionTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TradefeedException.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tradefeedExceptionTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._subCategoryTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SubCategory.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._subCategoryTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._rateJisdorTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.RateJisdor.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._rateJisdorTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._clearingMemberTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ClearingMember.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._clearingMemberTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._iDfsFasPaln1TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.iDfsFasPaln1.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._iDfsFasPaln1TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._iRCATableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.IRCA.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._iRCATableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._irca_productTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.irca_product.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._irca_productTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._irca_parameterTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.irca_parameter.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._irca_parameterTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._contractTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Contract.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._contractTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._fee_palnTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.fee_paln.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._fee_palnTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._clearingHouseSuspenseTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ClearingHouseSuspense.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._clearingHouseSuspenseTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._clearingMemberSuspenseStatusTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ClearingMemberSuspenseStatus.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._clearingMemberSuspenseStatusTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._parameterTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Parameter.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._parameterTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tradefeedExceptionTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TradefeedException.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tradefeedExceptionTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._subCategoryTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SubCategory.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._subCategoryTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._rateJisdorTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.RateJisdor.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._rateJisdorTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._rateJisdorTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.RateJisdor.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._rateJisdorTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._subCategoryTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SubCategory.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._subCategoryTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tradefeedExceptionTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TradefeedException.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tradefeedExceptionTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._parameterTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Parameter.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._parameterTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._clearingMemberSuspenseStatusTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ClearingMemberSuspenseStatus.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._clearingMemberSuspenseStatusTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._clearingHouseSuspenseTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ClearingHouseSuspense.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._clearingHouseSuspenseTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._fee_palnTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.fee_paln.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._fee_palnTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._contractTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Contract.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._contractTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._irca_parameterTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.irca_parameter.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._irca_parameterTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._irca_productTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.irca_product.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._irca_productTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._iRCATableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.IRCA.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._iRCATableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._iDfsFasPaln1TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.iDfsFasPaln1.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._iDfsFasPaln1TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._clearingMemberTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ClearingMember.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._clearingMemberTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(DataSet1 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._tradefeedExceptionTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tradefeedExceptionTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._parameterTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._parameterTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._clearingMemberSuspenseStatusTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._clearingMemberSuspenseStatusTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._clearingHouseSuspenseTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._clearingHouseSuspenseTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._clearingMemberTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._clearingMemberTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._contractTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._contractTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._subCategoryTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._subCategoryTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._irca_parameterTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._irca_parameterTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._irca_productTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._irca_productTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._iRCATableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._iRCATableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._iDfsFasPaln1TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._iDfsFasPaln1TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._fee_palnTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._fee_palnTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._rateJisdorTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._rateJisdorTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._tradefeedExceptionTableAdapter != null)) {
                    revertConnections.Add(this._tradefeedExceptionTableAdapter, this._tradefeedExceptionTableAdapter.Connection);
                    this._tradefeedExceptionTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tradefeedExceptionTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tradefeedExceptionTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tradefeedExceptionTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tradefeedExceptionTableAdapter.Adapter);
                    }
                }
                if ((this._parameterTableAdapter != null)) {
                    revertConnections.Add(this._parameterTableAdapter, this._parameterTableAdapter.Connection);
                    this._parameterTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._parameterTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._parameterTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._parameterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._parameterTableAdapter.Adapter);
                    }
                }
                if ((this._clearingMemberSuspenseStatusTableAdapter != null)) {
                    revertConnections.Add(this._clearingMemberSuspenseStatusTableAdapter, this._clearingMemberSuspenseStatusTableAdapter.Connection);
                    this._clearingMemberSuspenseStatusTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._clearingMemberSuspenseStatusTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._clearingMemberSuspenseStatusTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._clearingMemberSuspenseStatusTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._clearingMemberSuspenseStatusTableAdapter.Adapter);
                    }
                }
                if ((this._clearingHouseSuspenseTableAdapter != null)) {
                    revertConnections.Add(this._clearingHouseSuspenseTableAdapter, this._clearingHouseSuspenseTableAdapter.Connection);
                    this._clearingHouseSuspenseTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._clearingHouseSuspenseTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._clearingHouseSuspenseTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._clearingHouseSuspenseTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._clearingHouseSuspenseTableAdapter.Adapter);
                    }
                }
                if ((this._clearingMemberTableAdapter != null)) {
                    revertConnections.Add(this._clearingMemberTableAdapter, this._clearingMemberTableAdapter.Connection);
                    this._clearingMemberTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._clearingMemberTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._clearingMemberTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._clearingMemberTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._clearingMemberTableAdapter.Adapter);
                    }
                }
                if ((this._contractTableAdapter != null)) {
                    revertConnections.Add(this._contractTableAdapter, this._contractTableAdapter.Connection);
                    this._contractTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._contractTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._contractTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._contractTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._contractTableAdapter.Adapter);
                    }
                }
                if ((this._subCategoryTableAdapter != null)) {
                    revertConnections.Add(this._subCategoryTableAdapter, this._subCategoryTableAdapter.Connection);
                    this._subCategoryTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._subCategoryTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._subCategoryTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._subCategoryTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._subCategoryTableAdapter.Adapter);
                    }
                }
                if ((this._irca_parameterTableAdapter != null)) {
                    revertConnections.Add(this._irca_parameterTableAdapter, this._irca_parameterTableAdapter.Connection);
                    this._irca_parameterTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._irca_parameterTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._irca_parameterTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._irca_parameterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._irca_parameterTableAdapter.Adapter);
                    }
                }
                if ((this._irca_productTableAdapter != null)) {
                    revertConnections.Add(this._irca_productTableAdapter, this._irca_productTableAdapter.Connection);
                    this._irca_productTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._irca_productTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._irca_productTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._irca_productTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._irca_productTableAdapter.Adapter);
                    }
                }
                if ((this._iRCATableAdapter != null)) {
                    revertConnections.Add(this._iRCATableAdapter, this._iRCATableAdapter.Connection);
                    this._iRCATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._iRCATableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._iRCATableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._iRCATableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._iRCATableAdapter.Adapter);
                    }
                }
                if ((this._iDfsFasPaln1TableAdapter != null)) {
                    revertConnections.Add(this._iDfsFasPaln1TableAdapter, this._iDfsFasPaln1TableAdapter.Connection);
                    this._iDfsFasPaln1TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._iDfsFasPaln1TableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._iDfsFasPaln1TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._iDfsFasPaln1TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._iDfsFasPaln1TableAdapter.Adapter);
                    }
                }
                if ((this._fee_palnTableAdapter != null)) {
                    revertConnections.Add(this._fee_palnTableAdapter, this._fee_palnTableAdapter.Connection);
                    this._fee_palnTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._fee_palnTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._fee_palnTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._fee_palnTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._fee_palnTableAdapter.Adapter);
                    }
                }
                if ((this._rateJisdorTableAdapter != null)) {
                    revertConnections.Add(this._rateJisdorTableAdapter, this._rateJisdorTableAdapter.Connection);
                    this._rateJisdorTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._rateJisdorTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._rateJisdorTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._rateJisdorTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._rateJisdorTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._tradefeedExceptionTableAdapter != null)) {
                    this._tradefeedExceptionTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tradefeedExceptionTableAdapter]));
                    this._tradefeedExceptionTableAdapter.Transaction = null;
                }
                if ((this._parameterTableAdapter != null)) {
                    this._parameterTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._parameterTableAdapter]));
                    this._parameterTableAdapter.Transaction = null;
                }
                if ((this._clearingMemberSuspenseStatusTableAdapter != null)) {
                    this._clearingMemberSuspenseStatusTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._clearingMemberSuspenseStatusTableAdapter]));
                    this._clearingMemberSuspenseStatusTableAdapter.Transaction = null;
                }
                if ((this._clearingHouseSuspenseTableAdapter != null)) {
                    this._clearingHouseSuspenseTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._clearingHouseSuspenseTableAdapter]));
                    this._clearingHouseSuspenseTableAdapter.Transaction = null;
                }
                if ((this._clearingMemberTableAdapter != null)) {
                    this._clearingMemberTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._clearingMemberTableAdapter]));
                    this._clearingMemberTableAdapter.Transaction = null;
                }
                if ((this._contractTableAdapter != null)) {
                    this._contractTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._contractTableAdapter]));
                    this._contractTableAdapter.Transaction = null;
                }
                if ((this._subCategoryTableAdapter != null)) {
                    this._subCategoryTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._subCategoryTableAdapter]));
                    this._subCategoryTableAdapter.Transaction = null;
                }
                if ((this._irca_parameterTableAdapter != null)) {
                    this._irca_parameterTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._irca_parameterTableAdapter]));
                    this._irca_parameterTableAdapter.Transaction = null;
                }
                if ((this._irca_productTableAdapter != null)) {
                    this._irca_productTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._irca_productTableAdapter]));
                    this._irca_productTableAdapter.Transaction = null;
                }
                if ((this._iRCATableAdapter != null)) {
                    this._iRCATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._iRCATableAdapter]));
                    this._iRCATableAdapter.Transaction = null;
                }
                if ((this._iDfsFasPaln1TableAdapter != null)) {
                    this._iDfsFasPaln1TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._iDfsFasPaln1TableAdapter]));
                    this._iDfsFasPaln1TableAdapter.Transaction = null;
                }
                if ((this._fee_palnTableAdapter != null)) {
                    this._fee_palnTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._fee_palnTableAdapter]));
                    this._fee_palnTableAdapter.Transaction = null;
                }
                if ((this._rateJisdorTableAdapter != null)) {
                    this._rateJisdorTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._rateJisdorTableAdapter]));
                    this._rateJisdorTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591